{"version":3,"sources":["common/sm2-service-factory.es6"],"names":[],"mappings":";;AAAA,AAAC,CAAA,YAAM;AACL,cAAY,CAAC;;;;;;;;;AASb,SAAO,CACJ,MAAM,CAAC,QAAQ,CAAC,CAChB,OAAO,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;;AAErC,WAAS,UAAU,CAAC,OAAO,EAAE;AAC3B,QAAI,cAAc,GAAG,EAAE,CAAC;;;;;;;;;;;;;;;;;AAiBxB,kBAAc,CAAC,cAAc,GAAG,UAAC,UAAU,EAAE,MAAM,EAAK;AACtD,UAAI,aAAa,GAAG,UAAU,CAAC;AAC/B,UAAI,aAAa,YAAA,CAAC;;AAElB,cAAQ,MAAM;AACZ,aAAK,OAAO;AACV,uBAAa,GAAG,aAAa,GAAG,GAAG,CAAC;AACpC,gBAAM;AAAA,AACR,aAAK,MAAM;AACT,uBAAa,GAAG,aAAa,GAAG,IAAI,CAAC;AACrC,gBAAM;AAAA,AACR,aAAK,MAAM;AACT,uBAAa,GAAG,aAAa,CAAC;AAC9B,gBAAM;AAAA,AACR,aAAK,MAAM;AACT,uBAAa,GAAG,aAAa,GAAG,IAAI,CAAC;AACrC,gBAAM;AAAA,OACT;;AAED,aAAO,aAAa,CAAC;KACtB,CAAC;;;AAGF,kBAAc,CAAC,SAAS,GAAG,UAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAK;AACtD,UAAI,MAAM,KAAK,OAAO,EAAE;AACtB,eAAO,UAAU,CAAC;OACnB;;AAED,UAAI,KAAK,KAAK,UAAU,EAAE;AACxB,YAAK,QAAQ,KAAK,CAAC,EAAE;AACnB,iBAAO,UAAU,CAAC;SACnB,MAAM,IAAI,QAAQ,KAAK,EAAE,EAAE;AAC1B,iBAAO,QAAQ,CAAC;SACjB;OACF;;AAED,UAAI,KAAK,KAAK,QAAQ,EAAE;AACtB,eAAO,QAAQ,CAAC;OACjB;KACF,CAAC;;;;AAIF,kBAAc,CAAC,YAAY,GAAG,UAAC,KAAK,EAAE,QAAQ,EAAE,UAAU,EAAE,MAAM,EAAK;AACrE,UAAI,MAAM,KAAK,OAAO,EAAE;AACtB,eAAO,CAAC,CAAC;OACV;;AAED,UAAI,KAAK,KAAK,UAAU,EAAE;AACxB,gBAAQ,QAAQ;AACd,eAAK,CAAC;AACJ,mBAAO,EAAE,CAAC;AAAA,AACZ,eAAK,EAAE;AACL,mBAAO,CAAC,GAAG,EAAE,GAAG,EAAE,CAAC;AAAA,SACtB;OACF,MAAM,IAAI,KAAK,KAAK,QAAQ,EAAE;AAC7B,eAAO,QAAQ,GAAG,UAAU,CAAC;OAC9B;KACF,CAAC;;AAEF,kBAAc,CAAC,cAAc,GAAG,UAAC,WAAW,EAAK;AAC/C,aAAO,OAAO,EAAE,CAAC,GAAG,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;KAC9C,CAAC;;AAEF,WAAO,cAAc,CAAC;GACvB;CACF,CAAA,EAAE,CAAE","file":"common/sm2-service-factory.js","sourcesContent":["(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:Sm2Service\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .factory('Sm2Service', Sm2Service);\r\n\r\n  function Sm2Service($moment) {\r\n    let Sm2ServiceBase = {};\r\n\r\n    // SM2 (Super Memo 2) Algorithm\r\n\r\n    // Learning phase: 1min / 10min\r\n    // Review phase default: 4 days\r\n    // I(n) = I(n-1) * EF\r\n\r\n    // Review response:\r\n    // Again: reset phase to learning + -20% to EF\r\n    // Hard: -15% to EF\r\n    // Good: do nothing\r\n    // Easy: +15% to EF\r\n\r\n    // main //////////////////////////////////////////////////////////////////////////////\r\n\r\n    // calcEaseFactor :: Float -> String -> Float\r\n    Sm2ServiceBase.calcEaseFactor = (easeFactor, choice) => {\r\n      let oldEaseFactor = easeFactor;\r\n      let newEaseFactor;\r\n\r\n      switch (choice) {\r\n        case 'again':\r\n          newEaseFactor = oldEaseFactor - 0.2;\r\n          break;\r\n        case 'hard':\r\n          newEaseFactor = oldEaseFactor - 0.15;\r\n          break;\r\n        case 'good':\r\n          newEaseFactor = oldEaseFactor;\r\n          break;\r\n        case 'easy':\r\n          newEaseFactor = oldEaseFactor + 0.15;\r\n          break;\r\n      }\r\n\r\n      return newEaseFactor;\r\n    };\r\n\r\n    // calcPhase :: String -> Integer -> String -> String\r\n    Sm2ServiceBase.calcPhase = (phase, interval, choice) => {\r\n      if (choice === 'again') {\r\n        return 'learning';\r\n      }\r\n\r\n      if (phase === 'learning') {\r\n        if  (interval === 1) {\r\n          return 'learning';\r\n        } else if (interval === 10) {\r\n          return 'review';\r\n        }\r\n      }\r\n\r\n      if (phase === 'review') {\r\n        return 'review';\r\n      }\r\n    };\r\n\r\n    // calcInterval :: String -> Integer -> Float -> String -> Integer\r\n    // note: interval is in minutes\r\n    Sm2ServiceBase.calcInterval = (phase, interval, easeFactor, choice) => {\r\n      if (choice === 'again') {\r\n        return 1;\r\n      }\r\n\r\n      if (phase === 'learning') {\r\n        switch (interval) {\r\n          case 1:\r\n            return 10;\r\n          case 10:\r\n            return 4 * 24 * 60;\r\n        }\r\n      } else if (phase === 'review') {\r\n        return interval * easeFactor;\r\n      }\r\n    };\r\n\r\n    Sm2ServiceBase.calcNextReview = (newInterval) => {\r\n      return $moment().add(newInterval, 'minutes');\r\n    };\r\n\r\n    return Sm2ServiceBase;\r\n  }\r\n}());\r\n"],"sourceRoot":"/source/"}