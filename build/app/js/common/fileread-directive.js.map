{"version":3,"sources":["common/fileread-directive.es6"],"names":[],"mappings":";;AAAA,AAAC,CAAA,YAAM;AACL,cAAY,CAAC;;;;;;;;;;;;;;;;;;AAkBb,SAAO,CACJ,MAAM,CAAC,QAAQ,CAAC,CAChB,SAAS,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;;AAEnC,WAAS,QAAQ,GAAG;AAClB,WAAO;AACL,cAAQ,EAAE,GAAG;AACb,WAAK,EAAE;AACL,gBAAQ,EAAE,GAAG;OACd;AACD,aAAO,EAAE,KAAK;AACd,UAAI,EAAA,cAAC,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE;;;;AAI1B,eAAO,CAAC,IAAI,CAAC,QAAQ,EAAE,UAAU,WAAW,EAAE;AAC5C,eAAK,CAAC,QAAQ,GAAG,EAAE,CAAC;AACpB,cAAI,KAAK,GAAG,WAAW,CAAC,MAAM,CAAC,KAAK,CAAC;;AAErC,eAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,YAAA,EAAE,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE;AACpC,gBAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;;AAE9B,kBAAM,CAAC,MAAM,GAAG,CAAC,UAAU,IAAI,EAAE;AAC/B,qBAAO,UAAU,SAAS,EAAE;AAC1B,qBAAK,CAAC,MAAM,CAAC,YAAY;AACvB,uBAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,OAAO,EAAE,SAAS,CAAC,MAAM,CAAC,MAAM,EAAE,CAAC,CAAC;iBAC5E,CAAC,CAAC;eACJ,CAAC;aACH,CAAA,CAAE,CAAC,CAAC,CAAC;;AAEN,kBAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;WACtB;SACF,CAAC,CAAC;OACJ;KACF,CAAC;GACH;CACF,CAAA,EAAE,CAAE","file":"common/fileread-directive.js","sourcesContent":["(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:fileread\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <example module=\"common\">\r\n       <file name=\"index.html\">\r\n        <fileread></fileread>\r\n       </file>\r\n     </example>\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .directive('fileread', fileread);\r\n\r\n  function fileread() {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        fileread: '='\r\n      },\r\n      replace: false,\r\n      link(scope, element, attrs) {\r\n        /*jshint unused:false */\r\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\r\n\r\n        element.bind(\"change\", function (changeEvent) {\r\n          scope.fileread = [];\r\n          var files = changeEvent.target.files;\r\n\r\n          for (let i = 0, f; f = files[i]; i++) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = (function (file) {\r\n              return function (loadEvent) {\r\n                scope.$apply(function () {\r\n                  scope.fileread.push({ name: file.name, content: loadEvent.target.result });\r\n                });\r\n              };\r\n            })(f);\r\n\r\n            reader.readAsText(f);\r\n          }\r\n        });      \r\n      }\r\n    };\r\n  }\r\n}());\r\n"],"sourceRoot":"/source/"}