{"version":3,"sources":["app.js","app-module.es6","main-app/test-words.tpl.html","main-app/sidebar.tpl.html","main-app/review-words.tpl.html","main-app/main-app.tpl.html","main-app/logout.tpl.html","main-app/list-words.tpl.html","main-app/import.tpl.html","main-app/collections.tpl.html","main-app/add-words.tpl.html","home/root.tpl.html","home/nav-home.tpl.html","home/home.tpl.html","common/spinner-directive.tpl.html","common/notification-directive.tpl.html","common/modal-directive.tpl.html","auth/register.tpl.html","auth/login.tpl.html","auth/auth.tpl.html","main-app/main-app-module.es6","main-app/words-service-factory.es6","main-app/test-words-controller.es6","main-app/sidebar-controller.es6","main-app/review-words-controller.es6","main-app/main-app-routes.es6","main-app/logout-controller.es6","main-app/list-words-controller.es6","main-app/import-controller.es6","main-app/collections-service-factory.es6","main-app/collections-controller.es6","main-app/add-words-controller.es6","home/home-module.es6","home/nav-home-controller.es6","home/home-routes.es6","home/home-controller.es6","common/common-module.es6","common/spinner-directive.es6","common/sm2-service-factory.es6","common/notification-directive.es6","common/modal-directive.es6","common/import-service-factory.es6","common/fileread-directive.es6","common/dictionary-service-factory.es6","common/config-service-factory.es6","auth/auth-module.es6","auth/register-controller.es6","auth/login-controller.es6","auth/auth-service-factory.es6","auth/auth-routes.es6","app-routes.es6"],"names":["_classCallCheck","instance","Constructor","TypeError","angular","module","run","$templateCache","put","WordsService","$http","WordsServiceBase","getAll","collectionId","get","create","word","post","wordId","getDue","update","wordUpdate","factory","$inject","TestWordsCtrl","this","vm","ctrlName","controller","SidebarCtrl","toggle","toggleSidebar","navItems","id","title","icon","link","ReviewWordsCtrl","$stateParams","$moment","Sm2Service","ConfigService","DictionaryService","$sce","ngAudio","getPronunciation","undefined","pronunciationPath","load","initEditWord","currentWord","formData","definition","wordCounter","showAnswer","editToggle","then","res","words","fromJson","data","totalWordsCount","length","pronunciation","err","console","log","toggleAnswer","toggleEdit","playPronunciation","play","submitEdit","submitRes","choice","newEaseFactor","calcEaseFactor","easeFactor","newPhase","calcPhase","phase","interval","newInterval","calcInterval","lastReviewed","lastReviewedEpochTime","unix","newNextReview","calcNextReview","newNextReviewEpochTime","newReviewRes","copy","reviewRes","nextReviewEpochTime","config","$stateProvider","state","abstract","url","views","templateUrl","sidebar@mainApp","controllerAs","resolve","user","AuthService","checkLoggedIn","params","collectionTitle","LogoutCtrl","$window","logout","location","goBack","history","go","ListWordsCtrl","ImportCtrl","ImportService","$timeout","$q","importTextfile","userId","btnState","loading","anki","dbRes","dbResData","generated_keys","promises","forEach","push","addPronunciation","forvoKey","all","success","href","deferred","defer","pronunciationData","attributes","total","items","pathmp3","reject","promise","placeholder","files","isValid","CollectionsService","CollectionsServiceBase","collection","merge","newCollectionId","newCollection","CollectionsCtrl","getAllCollections","collectionList","checks","initChecks","mergeCollections","collectionIds","mainCollectionId","remainingCollectionIds","filter","deleteCollections","collections","resetForm","addCollectionForm","$touched","$submitted","showEdit","notification","error","msg","mergeError","noneSelectedError","showModal","toggleSuccessNotification","successMessage","notificationSuccessMsg","toggleErrorNotification","errorMessage","notificationErrorMsg","createCollection","mergeList","deleteList","showConfirmDeleteModal","confirmModal","closeModal","AddWordsCtrl","addWord","definitions","addWordForm","getDefinition","mashapeKey","nextReview","add","again","hard","good","easy","copyDefinition","NavHomeCtrl","setActive","page","active","isLoggedIn","nav-home@root","HomeCtrl","spinner","restrict","scope","replace","element","attrs","width","directive","Sm2ServiceBase","oldEaseFactor","minEaseFactor","show","color","transclude","$watch","modal","yesCb","noCb","modalBg","yesMessage","noMessage","showButtons","ImportServiceBase","fileread","bind","changeEvent","target","i","f","reader","FileReader","onload","file","loadEvent","$apply","name","content","result","readAsText","DictionaryServiceBase","headers","X-Mashape-Key","jsonp","ConfigServiceBase","RegisterCtrl","LoginCtrl","AuthServiceBase","$urlRouterProvider","otherwise"],"mappings":"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","file":"app-cf65c926.js","sourcesContent":["'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name bigvocab\n   * @description\n   *\n   */\n  angular.module('bigvocab', ['ngAria', 'ngAnimate', 'ngMessages', 'ui.router', '720kb.tooltips', 'ngAudio', 'angular-momentjs', 'home', 'auth', 'mainApp',\n  // 'ramda',\n  'common']);\n\n  // ramda module\n  // angular.module('ramda', []);\n  // angular.module('ramda').factory('R', function ($window) {\n  //   return $window.R;\n  // });\n})();\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/test-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix center\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3\">Test Time!</h1>\\n' +\n    '\\n' +\n    '\t\t<div class=\"mb2 bold\"><span class=\"gray\">Today\\'s Quota:</span> 78 <span class=\"gray\">/ 123 words left</span></div>\\n' +\n    '\\n' +\n    '\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"h2 px2 py4 bg-white rounded\">Hello</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"clearfix mxn1\">\\n' +\n    '\t\t\t\t<div class=\"col col-6 px1\">\\n' +\n    '\t\t\t\t\t<a class=\"btn mt2 bg-red block white\">Not sure<span class=\"ti-close ml1\"></span></a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-6 px1\">\\n' +\n    '\t\t\t\t\t<a class=\"btn mt2 bg-green block white\">Easy<span class=\"ti-check ml1\"></span></a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/sidebar.tpl.html',\n    '<!--/////////// DESKTOP ONLY ///////////-->\\n' +\n    '<div class=\"sm-show\" style=\"margin-right: 63px;\">\\n' +\n    '\\n' +\n    '\t<div class=\"bg-navy fixed white z1\" style=\"height: 100vh;\">\\n' +\n    '\t\t<div class=\"flex flex-column flex-center py3\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<a ui-sref=\"mainApp.collections\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></a>\\n' +\n    '\t\t\t<a ui-sref=\"{{ navItem.link }}\" tooltips title=\"{{ navItem.title }}\" tooltip-placement=\"right\" class=\"btn btn-icon h2 center p2\" ng-repeat=\"navItem in sidebar.navItems | orderBy:\\'id\\'\" tabindex=\"-1\">\\n' +\n    '\t\t\t\t<span class=\"{{ navItem.icon }}\"></span>\\n' +\n    '\t\t\t</a>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '<!--/////////// end: DESKTOP ONLY ///////////-->\\n' +\n    '\\n' +\n    '<!--/////////// MOBILE ONLY ///////////-->\\n' +\n    '<div class=\"sm-hide\">\\n' +\n    '\\n' +\n    '\t<!-- toggle button background -->\\n' +\n    '\t<div class=\"fixed z2\" style=\"background-color: rgba(255,255,255,0.93); width: 58px; height:58px;\"></div>\\n' +\n    '\t<!-- toggle button background -->\\n' +\n    '\\n' +\n    '\t<!-- toggle button -->\\n' +\n    '\t<div class=\"fixed z3\">\\n' +\n    '\t\t<a ng-click=\"sidebar.toggleSidebar()\" class=\"btn btn-icon p2 h3\" ng-class=\"{\\'black\\': sidebar.toggle === false, \\'white\\': sidebar.toggle === true}\"><span class=\"ti-menu\"></span></a>\\n' +\n    '\t</div>\\n' +\n    '\t<!-- end: toggle button -->\\n' +\n    '\\n' +\n    '\t<!-- menu items -->\\n' +\n    '\t<div class=\"bg-navy fixed white z2 translateX-n-100 transition-all-300\" ng-class=\"{\\'translateX-n-100\\': sidebar.toggle === false, \\'translateX-0\\': sidebar.toggle === true }\" style=\"height: 100vh;\">\\n' +\n    '\t\t<div class=\"flex flex-column py2 mt4\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<div style=\"margin-left:20px\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></div>\\n' +\n    '\t\t\t<a ui-sref=\"{{ navItem.link }}\" ng-click=\"sidebar.toggleSidebar();\" class=\"btn btn-icon py2 px3 flex flex-center\" ng-repeat=\"navItem in sidebar.navItems | orderBy:\\'id\\'\" tabindex=\"-1\">\\n' +\n    '\t\t\t\t<div class=\"{{ navItem.icon }} h3 mr2\"></div>\\n' +\n    '\t\t\t\t<div class=\"h5\">{{ navItem.title }}</div>\\n' +\n    '\t\t\t</a>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\t<!-- end: menu items -->\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '<!--/////////// end: MOBILE ONLY ///////////-->\\n' +\n    '');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/review-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix center\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3\">Study Time!</h1>\\n' +\n    '\\n' +\n    '\t\t<div class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"flex flex-justify\">\\n' +\n    '\t\t\t\t<div class=\"mb2 bold\">\\n' +\n    '\t\t\t\t\t<span class=\"gray\">Today\\'s Quota:</span> {{ reviewWords.totalWordsCount - reviewWords.wordCounter }} <span class=\"gray\">/ {{ reviewWords.totalWordsCount }} words left</span>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div>\\n' +\n    '\t\t\t\t\t<a ng-click=\"reviewWords.toggleEdit()\" class=\"h5 gray underline\">Edit</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t\t<!-- edit word -->\\n' +\n    '\t\t<div class=\"sm-col-6 mx-auto px2 bg-darken-1 rounded py2 mb2\" ng-if=\"reviewWords.editToggle\">\\n' +\n    '\t\t\t<form>\\n' +\n    '\t\t\t\t<input type=\"text\" name=\"editWord\" ng-model=\"reviewWords.formData.word\" class=\"field col-12 mb1\" required>\\n' +\n    '\t\t\t\t<textarea name=\"editDefinition\" ng-model=\"reviewWords.formData.definition\" class=\"field col-12\" style=\"height: 80px;\"></textarea>\\n' +\n    '\t\t\t\t<button ng-click=\"reviewWords.submitEdit(reviewWords.currentWord.id, reviewWords.formData.word, reviewWords.formData.definition)\" class=\"btn btn-green btn-form col-12 mt1\">Save Changes</button>\\n' +\n    '\t\t\t</form>\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: edit word -->\\n' +\n    '\\n' +\n    '\t\t<div class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"p3 bg-white rounded flex flex-column flex-center-justified\" style=\"min-height: 184px\">\\n' +\n    '\t\t\t\t<div class=\"h2 mb1\">{{ reviewWords.currentWord.word }}</div>\\n' +\n    '\t\t\t\t<div ng-if=\"reviewWords.showAnswer\" class=\"h4 dark-gray\">{{ reviewWords.currentWord.definition }}</div>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- pronunciation -->\\n' +\n    '\t\t\t\t<button ng-if=\"reviewWords.pronunciation !== null && reviewWords.showAnswer\" \\n' +\n    '\t\t\t\t\t\t\t\tng-click=\"reviewWords.playPronunciation()\" \\n' +\n    '\t\t\t\t\t\t\t\tclass=\"btn btn-blue-outline btn-sm mt2 mx-auto center\" style=\"width: 48px; height: 48px; border-radius: 50%;\">\\n' +\n    '\t\t\t\t\t<span class=\"ti-control-play\" style=\"margin-left:4px\"></span>\\n' +\n    '\t\t\t\t</button>\\n' +\n    '\t\t\t\t<!-- end: pronunciation -->\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t\t<!-- show answer button -->\\n' +\n    '\t\t<div ng-if=\"!reviewWords.showAnswer\" class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<button ng-click=\"reviewWords.toggleAnswer()\" \\n' +\n    '\t\t\t\t\t\t\tng-disabled=\"reviewWords.currentWord === undefined\"\\n' +\n    '\t\t\t\t\t\t\tclass=\"btn btn-primary mt2 col-12\">Show Answer</button>\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: show answer button -->\\n' +\n    '\\n' +\n    '\t\t<!-- review response buttons -->\\n' +\n    '\t\t<div ng-if=\"reviewWords.showAnswer\" class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"clearfix mxn1\">\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 red\">\\n' +\n    '\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, \\'again\\')\" \\n' +\n    '\t\t\t\t\t\t\t\t\tclass=\"btn btn-red mt2 col-12\">Again</button>\\n' +\n    '\t\t\t\t\t<div class=\"h6 gray center mt1\">Can\\'t recall</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 green\">\\n' +\n    '\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, \\'hard\\')\" \\n' +\n    '\t\t\t\t\t\t\t\t\tclass=\"btn btn-yellow-green mt2 col-12\">Hard</button>\\n' +\n    '\t\t\t\t\t<div class=\"h6 gray center mt1\">Challenging</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 green\">\\n' +\n    '\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, \\'good\\')\" \\n' +\n    '\t\t\t\t\t\t\t\t\tclass=\"btn btn-green mt2 col-12\">Good</button>\\n' +\n    '\t\t\t\t\t<div class=\"h6 gray center mt1\">Just right</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 green\">\\n' +\n    '\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, \\'easy\\')\" \\n' +\n    '\t\t\t\t\t\t\t\t\tclass=\"btn btn-green mt2 col-12\">Easy</button>\\n' +\n    '\t\t\t\t\t<div class=\"h6 gray center mt1\">Too easy</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: review response buttons -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/main-app.tpl.html',\n    '<div class=\"flex\">\\n' +\n    '\t<div ui-view=\"sidebar\"></div>\\n' +\n    '\t<div ui-view class=\"flex-auto bg-darken-1 py4\" style=\"min-height: 100vh\"></div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/logout.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t<div class=\"sm-col-10 md-col-6 mx-auto center px2\">\\n' +\n    '\t\\n' +\n    '\t\t\t<h1 class=\"mt1 mb2\">Log Out</h1>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"mb3 h4\">Are you sure you want to sign out from Big Vocab?</div>\\n' +\n    '\\n' +\n    '\t\t\t<button class=\"btn btn-blue-outline\" ng-click=\"logout.logout()\">Yes, log me out</button>&nbsp;&nbsp;\\n' +\n    '\t\t\t<button class=\"btn btn-primary\" ng-click=\"logout.goBack()\">No, send me back</button>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/list-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3 center\">List of All Words in <span class=\"italic\">{{ listWords.collectionTitle }}</span></h1>\\n' +\n    '\\n' +\n    '\t\t<!-- search words form -->\\n' +\n    '\t\t<div class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<form name=\"listWordsForm\" class=\"center\">\\n' +\n    '\t\t\t\t<input name=\"searchWords\" type=\"text\" ng-model=\"listWords.searchWords\" class=\"field col-12 mb3\" placeholder=\"Search any word or definition\">\\n' +\n    '\t\t\t</form>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: search words form -->\\n' +\n    '\\n' +\n    '\t\t<!-- list of words -->\\n' +\n    '\t\t<div class=\"sm-col-10 mx-auto px2\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<div ng-repeat=\"word in listWords.words | filter: listWords.searchWords\" class=\"clearfix mb2\">\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-3\">{{ word.word }}</div>\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-9 gray\">{{ word.definition }}</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t\t\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: list of words -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/import.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t<div class=\"sm-col-10 md-col-6 mx-auto center px2\">\\n' +\n    '\t\\n' +\n    '\t\t\t<h1 class=\"mt1 mb2\">Import from Anki</h1>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"mb3\">If you upload multiple files, it will merge them and input it into a single collection. If you want each text file to have its own collection, upload one file at a time.</div>\\n' +\n    '\\n' +\n    '\t\t\t<form name=\"import.importForm\" \\n' +\n    '\t\t\t\t\t\tng-submit=\"import.importTextfile(import.importForm.$valid, import.formData)\"\\n' +\n    '\t\t\t\t\t\tnovalidate>\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"mb1 bold\">Title of the collection to be imported</div>\\n' +\n    '\t\t\t\t<input name=\"collectionTitle\" type=\"text\" ng-model=\"import.formData.collectionTitle\" class=\"field col-12\" placeholder=\"{{ import.placeholder.collectionTitle }}\" autofocus required>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t<div ng-messages=\"import.importForm.collectionTitle.$error\" \\n' +\n    '\t\t\t\t\t\t ng-if=\"import.importForm.$submitted && import.importForm.collectionTitle.$touched\" \\n' +\n    '\t\t\t\t\t\t class=\"red bold h6 mt1\">\\n' +\n    '\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: error handling -->\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"mt3 mb1 bold\">Anki text file (i.e. anki-collection-2015.txt)</div>\\n' +\n    '\t\t\t\t<div class=\"file-input\">\\n' +\n    '\t\t\t\t\tClick here to upload your files<span class=\"ti-folder ml1\">\\n' +\n    '\t\t\t\t\t<input name=\"files\" type=\"file\" multiple=\"multiple\" accept=\".txt\" fileread=\"import.formData.files\" class=\"field col-12\" style=\"cursor: pointer; margin-bottom: none\" placeholder=\"{{ import.placeholder.files }}\" required>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- file names -->\\n' +\n    '\t\t\t\t<div class=\"mt1\">\\n' +\n    '\t\t\t\t\t<div ng-repeat=\"file in import.formData.files\" track by $index>{{ file.name }}</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: file names -->\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t<div ng-messages=\"import.importForm.files.$error\" \\n' +\n    '\t\t\t\t\t\t ng-if=\"import.importForm.$submitted\" \\n' +\n    '\t\t\t\t\t\t class=\"red bold h6 mt1\">\\n' +\n    '\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: error handling -->\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- submit button -->\\n' +\n    '\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mt3 mb2\" ng-disabled=\"import.btnState.success || import.btnState.loading\">\\n' +\n    '\t\t\t\t\t<span ng-if=\"!import.btnState.loading && !import.btnState.success\">Import Anki Text File<span class=\"ti-import ml1\"></span></span>\\n' +\n    '\t\t\t\t\t<span ng-if=\"import.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\\n' +\n    '\t\t\t\t\t<span ng-if=\"import.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\\n' +\n    '\t\t\t\t</button>\\n' +\n    '\t\t\t\t<!-- end: submit button -->\\n' +\n    '\\n' +\n    '\t\t\t</form>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/collections.tpl.html',\n    '<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t<h1 class=\"mt1 center\">My Collections&nbsp;&nbsp;<a ng-click=\"collections.toggleEdit()\" ng-if=\"collections.collectionList.length >= 1\" class=\"h5 gray underline\">Edit</a></h1>\\n' +\n    '\\n' +\n    '\t<!-- edit collection options -->\\n' +\n    '\t<div class=\"md-col-10 lg-col-8 mx-auto px2\" ng-if=\"collections.showEdit\">\\n' +\n    '\t\t<button class=\"btn btn-sm btn-yellow-green h6 mb2\" ng-click=\"collections.mergeCollections(collections.collectionList, collections.checks)\">Merge Selected</button>\\n' +\n    '\t\t<button class=\"btn btn-sm btn-red h6 ml1 mb2\" ng-click=\"collections.showConfirmDeleteModal(collections.collectionList, collections.checks)\">Delete Selected</button>\\n' +\n    '\t</div>\\n' +\n    '\t<!-- end: edit collection options -->\\n' +\n    '\\n' +\n    '\t<div class=\"md-col-10 lg-col-8 mx-auto px2\">\\n' +\n    '\\n' +\n    '\t\t<!-- collection list -->\\n' +\n    '\t\t<div class=\"clearfix bg-white rounded p1 mb2 ng-animation-fadeInUp\" ng-repeat=\"collection in collections.collectionList | orderBy: \\'id\\'\">\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"sm-col sm-col-7\">\\n' +\n    '\t\t\t\t\\n' +\n    '\t\t\t\t<!-- select collection -->\\n' +\n    '\t\t\t\t<input type=\"checkbox\" style=\"margin-left: 8px; margin-right: -16px;\" ng-model=\"collections.checks[collection.id]\" ng-if=\"collections.showEdit\">\\n' +\n    '\t\t\t\t<!-- end: select collection -->\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"btn btn-md bold ml1 mt1 mb1\" style=\"cursor: text\">{{ collection.title }} <span class=\"gray\">(due: {{ collection.dueWordCount }}, new: {{ collection.newWordCount }} )</span></div>\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"sm-col sm-col-5 flex flex-wrap\">\\n' +\n    '\t\t\t\t<a ui-sref=\"mainApp.review-words({ collectionId: collection.id })\" class=\"btn btn-md btn-primary flex-auto center m1 h5\">Study<span class=\"ti-arrow-right ml1\"></span></a>\\n' +\n    '\t\t\t\t<a ui-sref=\"mainApp.add-words({ collectionId: collection.id })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"Add Words\" tooltip-placement=\"top\"><span class=\"ti-plus\"></span></a>\\n' +\n    '\t\t\t\t<a ui-sref=\"mainApp.list-words({ collectionId: collection.id, collectionTitle: collection.title })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"View All Words\" tooltip-placement=\"top\"><span class=\"ti-folder\"></span></a>\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: collection list -->\\n' +\n    '\\n' +\n    '\t\t<!-- add collection -->\\n' +\n    '\t\t<div class=\"clearfix bg-light-green px2 py2 mt3 rounded\">\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"center\">\\n' +\n    '\t\t\t\t<div class=\"caps bold m1\">Add Collection</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t<form name=\"collections.addCollectionForm\" \\n' +\n    '\t\t\t\t\t\tng-submit=\"collections.createCollection(collections.addCollectionForm.$valid, { \\n' +\n    '\t\t\t\t\t\t\tuserId: collections.user.id,\\n' +\n    '\t\t\t\t\t\t\ttitle: collections.formData.collectionTitle \\n' +\n    '\t\t\t\t\t\t})\"\\n' +\n    '\t\t\t\t\t\tnovalidate>\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-8 p1\">\\n' +\n    '\t\t\t\t\t<input name=\"collectionTitle\" type=\"text\" ng-model=\"collections.formData.collectionTitle\" class=\"field col-12\" placeholder=\"{{ collections.placeholder.collectionTitle }}\" required>\\n' +\n    '\\n' +\n    '\t\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t\t<div ng-messages=\"collections.addCollectionForm.collectionTitle.$error\" \\n' +\n    '\t\t\t\t\t\t\t ng-if=\"collections.addCollectionForm.$submitted && collections.addCollectionForm.collectionTitle.$touched\" \\n' +\n    '\t\t\t\t\t\t\t class=\"red bold h6 mt1\">\\n' +\n    '\t\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t\t<!-- end: error handling -->\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- submit button -->\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-4 p1\">\\n' +\n    '\t\t\t\t\t<button type=\"submit\" class=\"btn btn-form btn-green col-12\" ng-disabled=\"collections.btnState.success || collections.btnState.loading\">\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"!collections.btnState.loading && !collections.btnState.success\">Add Collection</span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"collections.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"collections.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\\n' +\n    '\t\t\t\t\t</button>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: submit button -->\\n' +\n    '\\n' +\n    '\t\t\t</form>\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: add collection -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '\\n' +\n    '<!-- notification -->\\n' +\n    '<notification color=\"green\" show=\"collections.notification.success\"><span class=\"ti-check mr1\"></span>{{ collections.notificationSuccessMsg }}</notification>\\n' +\n    '<notification color=\"red\" show=\"collections.notification.error\"><span class=\"ti-alert mr1\"></span>{{ collections.notificationErrorMsg }}</notification>\\n' +\n    '<!-- end: notification -->\\n' +\n    '\\n' +\n    '<!-- modal -->\\n' +\n    '<modal show=\"collections.showModal\" \\n' +\n    '\t      modal-bg=\"bg-white\" \\n' +\n    '\t      yes-cb=\"collections.confirmModal()\" \\n' +\n    '\t      no-cb=\"collections.closeModal()\" \\n' +\n    '\t      yes-message=\"Yes, delete\" \\n' +\n    '\t      no-message=\"No, abort\">\\n' +\n    '\t<div class=\"center h3\">Are you sure you want to delete the selected collection(s)?</div>\\n' +\n    '</modal>\\n' +\n    '<!-- end: modal -->');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/add-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3 center\">Add New Words</h1>\\n' +\n    '\\n' +\n    '\t\t<!-- add words form -->\\n' +\n    '\t\t<div class=\"md-col md-col-6 px2\">\\n' +\n    '\\n' +\n    '\t\t\t<form name=\"addWords.addWordForm\" \\n' +\n    '\t\t\t\t\t\tng-submit=\"addWords.addWord(addWords.addWordForm.$valid, addWords.formData)\"\\n' +\n    '\t\t\t\t\t\tnovalidate>\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"mb1 bold\">WORD</div>\\n' +\n    '\t\t\t\t<input name=\"word\" type=\"text\" ng-model=\"addWords.formData.word\" ng-blur=\"addWords.getDefinition(addWords.formData.word)\" class=\"field col-12\" placeholder=\"{{ addWords.placeholder.word }}\" autofocus required>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t<div ng-messages=\"addWords.addWordForm.word.$error\" \\n' +\n    '\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.word.$touched\" \\n' +\n    '\t\t\t\t\t\t class=\"red bold h6 mt1\">\\n' +\n    '\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: error handling -->\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"mb1 mt2 bold\">MEANING</div>\\n' +\n    '\t\t\t\t<textarea name=\"definition\" ng-model=\"addWords.formData.definition\" class=\"field col-12\" style=\"height: 160px;\" placeholder=\"{{ addWords.placeholder.definition }}\"></textarea>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t<div ng-messages=\"addWords.addWordForm.definition.$error\" \\n' +\n    '\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.definition.$touched\" \\n' +\n    '\t\t\t\t\t\t class=\"red bold h6\">\\n' +\n    '\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: error handling -->\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"flex flex-justify\">\\n' +\n    '\t\t\t\t\t<button ng-click=\"addWords.resetForm()\" class=\"btn btn-outline mt2 mb2\">Reset Form</button>\\n' +\n    '\t\t\t\t\t\\n' +\n    '\t\t\t\t\t<!-- submit button -->\\n' +\n    '\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mt2 mb2\" ng-disabled=\"addWords.btnState.success || addWords.btnState.loading\">\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"!addWords.btnState.loading && !addWords.btnState.success\"><span class=\"ti-plus mr1\"></span>Add Word</span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"addWords.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"addWords.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\\n' +\n    '\t\t\t\t\t</button>\\n' +\n    '\t\t\t\t\t<!-- end: submit button -->\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</form>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: add words form -->\\n' +\n    '\\n' +\n    '\t\t<!-- definitions from dictionary API -->\\n' +\n    '\t\t<div class=\"md-col md-col-6 px2\">\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"bold gray mb2\">Word definitions from <span class=\"italic\">The American Heritage® Dictionary of the English Language, 4th Edition</span></div>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"bg-light-green rounded p2 mb2 near-black ng-animation-fadeInUp\" ng-repeat=\"definition in addWords.definitions\">\\n' +\n    '\t\t\t\t<div class=\"flex flex-center\">\\n' +\n    '\t\t\t\t\t<div class=\"flex-none\" style=\"width: 52px\">\\n' +\n    '\t\t\t\t\t\t<a ng-click=\"addWords.copyDefinition(definition.text)\" class=\"btn btn-sm btn-green-outline\" tabindex=\"-1\"><span class=\"ti-check\"></span></a>\\n' +\n    '\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t\t<div class=\"h5\">{{ definition.text }}</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- definitions from dictionary API -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('home/root.tpl.html',\n    '<div ui-view=\"nav-home\"></div>\\n' +\n    '<div ui-view></div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('home/nav-home.tpl.html',\n    '<div class=\"fixed white border-bottom border-lighten-2\" style=\"width: 100%\">\\n' +\n    '\t<div class=\"container\">\\n' +\n    '\t\t<div class=\"flex flex-center\">\\n' +\n    '\t\t\t<a class=\"btn btn-sm\" ui-sref=\"root.home\">\\n' +\n    '\t\t\t\t<img src=\"../images/logo/bigvocab-logo-white.svg\" width=\"50px\" />\\n' +\n    '\t\t\t</a>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"flex-auto\"></div>\\n' +\n    '\\n' +\n    '\t\t\t<div>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- nav items -->\\n' +\n    '\t\t\t\t<a ui-sref=\"root.home\" ng-click=\"navHome.setActive(\\'home\\')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{\\'bold muted-0\\': navHome.active === \\'home\\'}\">Home</a>\\n' +\n    '\t\t\t\t<a ui-sref=\"root.features\" ng-click=\"navHome.setActive(\\'features\\')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{\\'bold muted-0\\': navHome.active === \\'features\\'}\">How it works</a>\\n' +\n    '\t\t\t\t<!--<a ui-sref=\"root.about\" ng-click=\"navHome.setActive(\\'about\\')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{\\'bold muted-0\\': navHome.active === \\'about\\'}\">About</a>-->\\n' +\n    '\t\t\t\t<!-- end: nav items -->\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- login button -->\\n' +\n    '\t\t\t\t<a href=\"/auth/google\" ng-if=\"!navHome.user\" class=\"btn btn-outline btn-sm ml2 mr2 py2 h6\">Login&nbsp;&rarr;</a>\\n' +\n    '\t\t\t\t<!-- end: login button -->\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('home/home.tpl.html',\n    '<div class=\"bg-cover bg-gradient-home\">\\n' +\n    '\\n' +\n    '\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\\n' +\n    '\t\t<div class=\"container flex-auto\">\\n' +\n    '\t\t\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\\n' +\n    '\t\t\t\t\t<div class=\"h1 light\">Big Vocab</div>\\n' +\n    '\t\t\t\t\t<p>Big Vocab uses a method called Spaced Repetition to improve word recall. Think of it as a virtual flash card that\\'s optimized to help you remember more words.</p>\\n' +\n    '\t\t\t\t\t<a ui-sref=\"root.auth.register\" class=\"btn btn-red\">Sign Up</a>&nbsp;&nbsp;\\n' +\n    '\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline\">Login</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/spinner-directive.tpl.html',\n    '<img src=\"../images/spinner/oval-sm.svg\" class=\"mr1\" width=\"{{ width }}\">');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/notification-directive.tpl.html',\n    '<div ng-if=\"show\" class=\"rounded bg-{{color}} px3 py2 fixed white h5 ng-animation-fadeInUp\" style=\"top: 24px; right: 24px; max-width: 240px;\">\\n' +\n    '\t<div ng-transclude></div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/modal-directive.tpl.html',\n    '<!-- overlay -->\\n' +\n    '<div ng-if=\"show\" class=\"fixed z2 top-0 right-0 bottom-0 left-0 bg-darken-3\" ng-click=\"noCb()\">\\n' +\n    '</div>\\n' +\n    '<!-- end: overlay -->\\n' +\n    '\\n' +\n    '<div ng-if=\"show\" class=\"fixed z3 top-0 right-0 bottom-0 left-0 ng-animation-fadeInUp\">\\n' +\n    '\t<div class=\"flex flex-center flex-center-justified px2\" style=\"width: 100%; height: 100vh;\">\\n' +\n    '\t\t<div class=\"sm-col-8 md-col-7 lg-col-5 relative {{ modalBg }}\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<!-- close button -->\\n' +\n    '\t\t\t<div>\\n' +\n    '\t\t\t\t<a class=\"ti-close absolute right-0 h3 p3\" ng-click=\"noCb()\"></a>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t\t<!-- end: close button -->\\n' +\n    '\\n' +\n    '\t\t\t<!-- content -->\\n' +\n    '\t\t\t<div class=\"px4 py3 mt1\">\\n' +\n    '\t\t\t\t<div ng-transclude></div>\\n' +\n    '\t\t\t\t<!-- end: content -->\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- buttons -->\\n' +\n    '\t\t\t\t<div class=\"center mt2 mb1\" ng-if=\"showButtons\">\\n' +\n    '\t\t\t\t\t<button class=\"btn btn-primary\" ng-click=\"yesCb()\">{{ yesMessage }}</button>&nbsp;&nbsp;\\n' +\n    '\t\t\t\t\t<button class=\"btn btn-primary\" ng-click=\"noCb()\">{{ noMessage }}</button>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: buttons -->\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('auth/register.tpl.html',\n    '<div class=\"bg-cover bg-gradient-navy\">\\n' +\n    '\\n' +\n    '\t<div class=\"flex flex-center\" style=\"min-height: 100vh\">\\n' +\n    '\t\t<div class=\"container-sm flex-auto\">\\n' +\n    '\t\t\t<div class=\"clearfix white\">\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-8 px2 mb3\">\\n' +\n    '\t\t\t\t\t<div class=\"h2 light mb2\">Sign Up</div>\\n' +\n    '\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-primary\">Sign up with Your Google Account</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-4 px2\">\\n' +\n    '\t\t\t\t\t<div class=\"border border-lighten-3 p2\">\\n' +\n    '\t\t\t\t\t\t<p>Already have an account?</p>\\n' +\n    '\t\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline block\">Login with Google</a>\\n' +\n    '\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('auth/login.tpl.html',\n    '<div class=\"bg-cover bg-gradient-navy\">\\n' +\n    '\\n' +\n    '\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\\n' +\n    '\t\t<div class=\"container flex-auto\">\\n' +\n    '\t\t\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\\n' +\n    '\t\t\t\t\t<div class=\"h1 light mb2\">Login to Big Vocab</div>\\n' +\n    '\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-red\">Login with Google</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('auth/auth.tpl.html',\n    '<div ui-view=\"root.nav-home\"></div>\\n' +\n    '<div ui-view></div>');\n}]);\n\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name mainApp\n   * @description\n   *\n   */\n  angular.module('mainApp', ['ui.router']);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:WordsService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').factory('WordsService', WordsService);\n\n  function WordsService($http) {\n\n    var WordsServiceBase = {};\n\n    WordsServiceBase.getAll = function (collectionId) {\n      return $http.get('/api/words/' + collectionId);\n    };\n\n    WordsServiceBase.create = function (word) {\n      return $http.post('/api/words', word);\n    };\n\n    WordsServiceBase.get = function (wordId) {\n      return $http.get('/api/words/' + wordId);\n    };\n\n    // get only the words to be reviewed today\n    WordsServiceBase.getDue = function (collectionId) {\n      return $http.get('/api/words/' + collectionId + '/?filter=dueToday');\n    };\n\n    WordsServiceBase.update = function (wordId, wordUpdate) {\n      return $http.put('/api/words/' + wordId, wordUpdate);\n    };\n\n    WordsServiceBase['delete'] = function (wordId) {\n      return $http['delete']('/api/words/' + wordId);\n    };\n\n    return WordsServiceBase;\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var TestWordsCtrl = function TestWordsCtrl() {\n    _classCallCheck(this, TestWordsCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'TestWordsCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:TestWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('TestWordsCtrl', TestWordsCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var SidebarCtrl = function SidebarCtrl() {\n    _classCallCheck(this, SidebarCtrl);\n\n    var vm = this;\n\n    vm.toggle = false;\n    vm.toggleSidebar = function () {\n      vm.toggle = !vm.toggle;\n    };\n\n    vm.navItems = [{\n      id: 1,\n      title: 'Collections',\n      icon: 'ti-layers-alt',\n      link: 'mainApp.collections'\n    }, {\n      id: 2,\n      title: 'Test',\n      icon: 'ti-check-box',\n      link: 'mainApp.test-words'\n    }, {\n      id: 3,\n      title: 'Import',\n      icon: 'ti-import',\n      link: 'mainApp.import'\n    }, {\n      id: 4,\n      title: 'Log Out',\n      icon: 'ti-arrow-left',\n      link: 'mainApp.logout'\n    }];\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:SidebarCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('SidebarCtrl', SidebarCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var ReviewWordsCtrl = function ReviewWordsCtrl(WordsService, $stateParams, $moment, Sm2Service, ConfigService, DictionaryService, $sce, ngAudio) {\n    _classCallCheck(this, ReviewWordsCtrl);\n\n    var vm = this;\n\n    // config ////////////////////////////////////////////////////////////////////////////\n\n    var collectionId = $stateParams.collectionId;\n    vm.wordCounter = 0; // keeps track of which word user is reviewing\n    vm.showAnswer = false;\n    vm.editToggle = false;\n    vm.formData = {};\n\n    // init //////////////////////////////////////////////////////////////////////////////\n\n    WordsService.getDue(collectionId).then(function (res) {\n      vm.words = angular.fromJson(res).data;\n      vm.totalWordsCount = vm.words.length;\n      vm.currentWord = vm.words[vm.wordCounter];\n      vm.pronunciation = vm.currentWord !== undefined ? getPronunciation(vm.currentWord) : null;\n      initEditWord(vm.currentWord);\n    })['catch'](function (err) {\n      console.log('Something went wrong: ', err);\n    });\n\n    // helper functions /////////////////////////////////////////////////////////////////\n\n    function getPronunciation(word) {\n      if (word === undefined || word.pronunciationPath === undefined || word.pronunciationPath === null) {\n        return null;\n      }\n\n      return ngAudio.load(word.pronunciationPath);\n    }\n\n    function initEditWord(currentWord) {\n      vm.formData.word = currentWord.word;\n      vm.formData.definition = currentWord.definition;\n    }\n\n    // main //////////////////////////////////////////////////////////////////////////////\n\n    vm.toggleAnswer = function () {\n      vm.showAnswer = !vm.showAnswer;\n    };\n\n    vm.toggleEdit = function () {\n      vm.editToggle = !vm.editToggle;\n    };\n\n    vm.playPronunciation = function () {\n      vm.pronunciation.play();\n    };\n\n    vm.submitEdit = function (wordId, word, definition) {\n      var wordUpdate = {\n        word: word,\n        definition: definition\n      };\n\n      WordsService.update(wordId, wordUpdate).then(function () {\n        vm.toggleEdit();\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n      });\n    };\n\n    vm.submitRes = function (word, choice) {\n\n      var newEaseFactor = Sm2Service.calcEaseFactor(word.easeFactor, choice);\n      var newPhase = Sm2Service.calcPhase(word.phase, word.interval, choice);\n      var newInterval = Sm2Service.calcInterval(word.phase, word.interval, word.easeFactor, choice);\n      var lastReviewed = $moment();\n      var lastReviewedEpochTime = lastReviewed.unix();\n      var newNextReview = Sm2Service.calcNextReview(newInterval);\n      var newNextReviewEpochTime = newNextReview.unix();\n\n      var newReviewRes = angular.copy(word.reviewRes);\n      newReviewRes[choice]++;\n\n      var wordUpdate = {\n        reviewRes: newReviewRes,\n        lastReviewedEpochTime: lastReviewedEpochTime,\n        easeFactor: newEaseFactor,\n        phase: newPhase,\n        interval: newInterval,\n        nextReviewEpochTime: newNextReviewEpochTime\n      };\n\n      console.log('word id: ', word.id);\n\n      WordsService.update(word.id, wordUpdate).then(function () {\n        vm.wordCounter++;\n        vm.currentWord = vm.words[vm.wordCounter];\n        vm.pronunciation = getPronunciation(vm.currentWord);\n        vm.toggleAnswer();\n\n        // intialize edit fields\n        initEditWord(vm.currentWord);\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n        vm.toggleAnswer();\n      });\n    };\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ReviewWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('ReviewWordsCtrl', ReviewWordsCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('mainApp').config(config);\n\n  function config($stateProvider) {\n    $stateProvider.state('mainApp', {\n      abstract: true,\n      url: '/main-app',\n      views: {\n        '': {\n          templateUrl: 'main-app/main-app.tpl.html'\n        },\n        'sidebar@mainApp': {\n          templateUrl: 'main-app/sidebar.tpl.html',\n          controller: 'SidebarCtrl',\n          controllerAs: 'sidebar'\n        }\n      },\n      resolve: {\n        user: function user(AuthService) {\n          return AuthService.checkLoggedIn();\n        }\n      }\n    }).state('mainApp.collections', {\n      url: '/collections',\n      templateUrl: 'main-app/collections.tpl.html',\n      controller: 'CollectionsCtrl',\n      controllerAs: 'collections'\n    }).state('mainApp.add-words', {\n      url: '/collections/:collectionId/add-words',\n      templateUrl: 'main-app/add-words.tpl.html',\n      controller: 'AddWordsCtrl',\n      controllerAs: 'addWords'\n    }).state('mainApp.review-words', {\n      url: '/collections/:collectionId/review-words',\n      templateUrl: 'main-app/review-words.tpl.html',\n      controller: 'ReviewWordsCtrl',\n      controllerAs: 'reviewWords'\n    }).state('mainApp.list-words', {\n      url: '/collections/:collectionId/list-words',\n      templateUrl: 'main-app/list-words.tpl.html',\n      controller: 'ListWordsCtrl',\n      controllerAs: 'listWords',\n      params: { collectionTitle: null }\n    }).state('mainApp.test-words', {\n      url: '/test-words',\n      templateUrl: 'main-app/test-words.tpl.html',\n      controller: 'TestWordsCtrl',\n      controllerAs: 'testWords'\n    }).state('mainApp.logout', {\n      url: '/logout',\n      templateUrl: 'main-app/logout.tpl.html',\n      controller: 'LogoutCtrl',\n      controllerAs: 'logout'\n    }).state('mainApp.import', {\n      url: '/import',\n      templateUrl: 'main-app/import.tpl.html',\n      controller: 'ImportCtrl',\n      controllerAs: 'import'\n    });\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var LogoutCtrl = function LogoutCtrl(AuthService, $window) {\n    _classCallCheck(this, LogoutCtrl);\n\n    var vm = this;\n\n    vm.logout = function () {\n      AuthService.logout().then(function () {\n        console.log('User logged out successfully');\n        $window.location = '/#/home';\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n      });\n    };\n\n    vm.goBack = function () {\n      $window.history.go(-1);\n    };\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:LogoutCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('LogoutCtrl', LogoutCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var ListWordsCtrl = function ListWordsCtrl($stateParams, WordsService) {\n    _classCallCheck(this, ListWordsCtrl);\n\n    var vm = this;\n\n    // config\n    vm.collectionTitle = $stateParams.collectionTitle;\n    var collectionId = $stateParams.collectionId;\n\n    // main\n    WordsService.getAll(collectionId).then(function (words) {\n      console.log(angular.fromJson(words).data);\n      vm.words = angular.fromJson(words).data;\n    })['catch'](function (err) {\n      console.log('Something went wrong: ', err);\n    });\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ListWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('ListWordsCtrl', ListWordsCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var ImportCtrl = function ImportCtrl(ImportService, WordsService, DictionaryService, ConfigService, user, $timeout, $window, $q) {\n    _classCallCheck(this, ImportCtrl);\n\n    var vm = this;\n\n    // config ///////////////////////////////////////////////////////////////////////////\n\n    vm.formData = {};\n    vm.btnState = {\n      loading: false,\n      success: false\n    };\n    vm.placeholder = {\n      files: 'Click to upload anki text files',\n      collectionTitle: 'Add collection title here'\n    };\n\n    // helper functions /////////////////////////////////////////////////////////////////\n\n    function importTextfile(userId, data) {\n\n      vm.btnState.loading = true;\n\n      ImportService.anki(userId, data).then(function (dbRes) {\n        var dbResData = angular.fromJson(dbRes).data;\n        var collectionId = dbResData.generated_keys[0];\n\n        return WordsService.getAll(collectionId);\n      }).then(function (res) {\n        var words = angular.fromJson(res).data;\n        var promises = [];\n\n        words.forEach(function (word) {\n          promises.push(addPronunciation(ConfigService.forvoKey, word));\n        });\n\n        return $q.all(promises);\n      }).then(function () {\n        vm.btnState.loading = false;\n        vm.btnState.success = true;\n\n        $timeout(function () {\n          vm.btnState.success = false;\n          $window.location.href = '/#/main-app/collections';\n        }, 1500);\n      })['catch'](function (err) {\n        vm.btnState.loading = false;\n        console.log('Something went wrong: ', err);\n      });\n    }\n\n    function addPronunciation(forvoKey, word) {\n      var deferred = $q.defer();\n\n      DictionaryService.getPronunciation(forvoKey, word.word).then(function (res) {\n        var pronunciationData = angular.fromJson(res).data;\n        var pronunciationPath = pronunciationData.attributes.total !== 0 ? pronunciationData.items[0].pathmp3 : null;\n\n        var wordUpdate = {\n          pronunciationPath: pronunciationPath\n        };\n\n        return WordsService.update(word.id, wordUpdate);\n      }).then(function (dbRes) {\n        deferred.resolve(dbRes);\n      })['catch'](function (err) {\n        deferred.reject(err);\n        console.log('Something went wrong: ', err);\n      });\n\n      return deferred.promise;\n    }\n\n    // main /////////////////////////////////////////////////////////////////////////////\n\n    vm.importTextfile = function (isValid, formData) {\n\n      if (!isValid) {\n        return;\n      }\n\n      importTextfile(user.id, formData);\n    };\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ImportCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('ImportCtrl', ImportCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:CollectionsService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').factory('CollectionsService', CollectionsService);\n\n  function CollectionsService($http) {\n\n    var CollectionsServiceBase = {};\n\n    CollectionsServiceBase.getAll = function (userId) {\n      return $http.get('/api/collections/' + userId);\n    };\n\n    CollectionsServiceBase.create = function (collection) {\n      return $http.post('/api/collections', collection);\n    };\n\n    CollectionsServiceBase.get = function (collectionId) {\n      return $http.get('/api/collections/' + collectionId);\n    };\n\n    CollectionsServiceBase.merge = function (collectionId, newCollectionId) {\n      return $http.put('/api/collections/merge/' + collectionId, newCollectionId);\n    };\n\n    CollectionsServiceBase.update = function (collectionId, newCollection) {\n      return $http.put('/api/collections/' + collectionId, newCollection);\n    };\n\n    CollectionsServiceBase['delete'] = function (collectionId) {\n      return $http['delete']('/api/collections/' + collectionId);\n    };\n\n    return CollectionsServiceBase;\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var CollectionsCtrl = function CollectionsCtrl(CollectionsService, WordsService, $timeout, user, $q) {\n    _classCallCheck(this, CollectionsCtrl);\n\n    var vm = this;\n\n    // config ///////////////////////////////////////////////////////////////////////////\n\n    vm.formData = {};\n    vm.placeholder = {\n      collectionTitle: 'Enter Collection name here'\n    };\n    vm.btnState = {\n      loading: false,\n      success: false\n    };\n    vm.user = user;\n    vm.checks = {};\n    vm.showEdit = false;\n    vm.notification = {\n      success: false,\n      error: false\n    };\n    vm.msg = {\n      success: 'Success!',\n      error: 'Something went wrong - please try again.',\n      mergeError: 'Please select two or more collections.',\n      noneSelectedError: 'Please select one or more collections.'\n    };\n    vm.showModal = false;\n\n    // init /////////////////////////////////////////////////////////////////////////////\n\n    getAllCollections(user);\n\n    // helper functions //////////////////////////////////////////////////////////////////\n\n    function getAllCollections(user) {\n      CollectionsService.getAll(user.id).then(function (res) {\n        vm.collectionList = angular.fromJson(res).data;\n\n        // intiialize checks to all false\n        vm.checks = initChecks(vm.collectionList);\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n      });\n    }\n\n    function mergeCollections(collectionIds) {\n      var mainCollectionId = collectionIds[0];\n      var remainingCollectionIds = collectionIds.filter(function (collectionId) {\n        return collectionId !== mainCollectionId;\n      });\n\n      var promises = [];\n\n      remainingCollectionIds.forEach(function (collectionId) {\n        promises.push(CollectionsService.merge(collectionId, { newCollectionId: mainCollectionId }));\n      });\n\n      return $q.all(promises);\n    }\n\n    function deleteCollections(collectionIds) {\n      var promises = [];\n\n      collectionIds.forEach(function (collectionId) {\n        promises.push(CollectionsService['delete'](collectionId));\n      });\n\n      return $q.all(promises);\n    }\n\n    function initChecks(collections) {\n      var checks = {};\n\n      collections.forEach(function (collection) {\n        checks[collection.id] = false;\n      });\n\n      return checks;\n    }\n\n    function resetForm() {\n      vm.addCollectionForm.collectionTitle.$touched = false;\n      vm.addCollectionForm.$submitted = false;\n      vm.formData = {};\n    }\n\n    // main /////////////////////////////////////////////////////////////////////////////\n\n    vm.toggleEdit = function () {\n      vm.showEdit = !vm.showEdit;\n    };\n\n    vm.toggleSuccessNotification = function (successMessage) {\n      vm.notification.success = true;\n      vm.notificationSuccessMsg = successMessage;\n    };\n\n    vm.toggleErrorNotification = function (errorMessage) {\n      vm.notification.error = true;\n      vm.notificationErrorMsg = errorMessage;\n    };\n\n    vm.createCollection = function (isValid, collection) {\n      if (!isValid) {\n        return;\n      }\n\n      vm.btnState.loading = true;\n\n      CollectionsService.create(collection).then(function () {\n        vm.btnState.loading = false;\n        vm.btnState.success = true;\n        getAllCollections(user);\n        resetForm();\n\n        $timeout(function () {\n          vm.btnState.success = false;\n        }, 1500);\n      })['catch'](function (err) {\n        vm.btnState.loading = false;\n        console.log('Something went wrong: ', err);\n      });\n    };\n\n    vm.mergeCollections = function (collections, checks) {\n\n      var mergeList = [];\n\n      collections.forEach(function (collection) {\n        if (checks[collection.id] === true) {\n          mergeList.push(collection.id);\n        }\n      });\n\n      if (mergeList.length >= 2) {\n        mergeCollections(mergeList).then(function () {\n          vm.toggleSuccessNotification(vm.msg.success);\n          getAllCollections(user);\n        })['catch'](function (err) {\n          vm.toggleErrorNotification(vm.msg.error);\n          console.log('Something went wrong: ', err);\n        });\n      } else {\n        vm.toggleErrorNotification(vm.msg.mergeError);\n      }\n    };\n\n    vm.deleteCollections = function (collections, checks) {\n\n      var deleteList = [];\n\n      collections.forEach(function (collection) {\n        if (checks[collection.id] === true) {\n          deleteList.push(collection.id);\n        }\n      });\n\n      if (deleteList.length >= 1) {\n        deleteCollections(deleteList).then(function () {\n          vm.toggleSuccessNotification(vm.msg.success);\n          getAllCollections(user);\n        })['catch'](function (err) {\n          vm.toggleErrorNotification(vm.msg.error);\n          console.log('Something went wrong: ', err);\n        });\n      } else {\n        vm.toggleErrorNotification(vm.msg.noneSelectedError);\n      }\n    };\n\n    vm.showConfirmDeleteModal = function (collections, checks) {\n      var deleteList = [];\n\n      collections.forEach(function (collection) {\n        if (checks[collection.id] === true) {\n          deleteList.push(collection.id);\n        }\n      });\n\n      if (deleteList.length >= 1) {\n        vm.showModal = true;\n      } else {\n        vm.toggleErrorNotification(vm.msg.noneSelectedError);\n      }\n    };\n\n    vm.confirmModal = function () {\n      vm.deleteCollections(vm.collectionList, vm.checks);\n    };\n\n    vm.closeModal = function () {\n      vm.showModal = false;\n    };\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:CollectionsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('CollectionsCtrl', CollectionsCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var AddWordsCtrl = function AddWordsCtrl(ConfigService, DictionaryService, WordsService, $stateParams, $timeout, $moment) {\n    _classCallCheck(this, AddWordsCtrl);\n\n    var vm = this;\n\n    // config //////////////////////////////////////////////////////////////////////////\n\n    vm.formData = {};\n    vm.placeholder = {\n      word: 'i.e. audacious',\n      definition: 'i.e. Fearlessly, often recklessly daring; bold. See Synonyms at adventurous, brave.'\n    };\n    vm.btnState = {\n      loading: false,\n      success: false\n    };\n    var collectionId = $stateParams.collectionId;\n\n    // helper functions /////////////////////////////////////////////////////////////////\n\n    function addWord(word) {\n      vm.btnState.loading = true;\n\n      vm.definitions = []; // reset definition list\n\n      WordsService.create(word).then(function () {\n        vm.btnState.loading = false;\n        vm.btnState.success = true;\n        $timeout(function () {\n          vm.btnState.success = false;\n        }, 1500);\n      })['catch'](function (err) {\n        vm.btnState.loading = false;\n        console.log('Something went wrong: ', err);\n      });\n    }\n\n    function getPronunciation(forvoKey, word) {\n      if (word !== undefined) {\n        return DictionaryService.getPronunciation(forvoKey, word);\n      }\n    }\n\n    function resetForm() {\n      vm.addWordForm.word.$touched = false;\n      vm.addWordForm.definition.$touched = false;\n      vm.addWordForm.$submitted = false;\n      vm.formData = {};\n    }\n\n    // main /////////////////////////////////////////////////////////////////////////////\n\n    vm.getDefinition = function (word) {\n      if (word !== undefined) {\n        DictionaryService.getDefinition(ConfigService.mashapeKey, word).then(function (res) {\n          vm.definitions = res.data.definitions;\n        })['catch'](function (err) {\n          console.log('Something went wrong; ', err);\n        });\n      }\n    };\n\n    vm.addWord = function (isValid, formData) {\n      if (!isValid) {\n        return;\n      }\n\n      getPronunciation(ConfigService.forvoKey, formData.word).then(function (res) {\n        var pronunciationData = angular.fromJson(res).data;\n        var pronunciationPath = pronunciationData.attributes.total !== 0 ? pronunciationData.items[0].pathmp3 : null;\n\n        var lastReviewed = $moment();\n        var lastReviewedEpochTime = lastReviewed.unix();\n        var nextReview = $moment().add(1, 'minutes');\n        var nextReviewEpochTime = nextReview.unix();\n\n        var word = {\n          word: formData.word,\n          definition: formData.definition,\n          collectionId: collectionId,\n          lastReviewedEpochTime: lastReviewedEpochTime,\n          interval: 1,\n          nextReviewEpochTime: nextReviewEpochTime,\n          phase: 'learning',\n          pronunciationPath: pronunciationPath,\n          reviewRes: {\n            again: 0,\n            hard: 0,\n            good: 0,\n            easy: 0\n          },\n          easeFactor: 2.5\n        };\n\n        addWord(word);\n\n        resetForm();\n      })['catch'](function (err) {\n        console.log('Something went wrong; ', err);\n      });\n    };\n\n    vm.copyDefinition = function (definition) {\n      vm.formData.definition = definition;\n    };\n\n    vm.resetForm = function () {\n      resetForm();\n    };\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:AddWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('AddWordsCtrl', AddWordsCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name home\n   * @description\n   *\n   */\n  angular.module('home', ['ui.router']);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var NavHomeCtrl = function NavHomeCtrl(AuthService, $window) {\n    _classCallCheck(this, NavHomeCtrl);\n\n    var vm = this;\n\n    // config //////////////////////////////////////////////////////////////////////////\n\n    vm.user = false;\n\n    vm.setActive = function (page) {\n      vm.active = page;\n    };\n\n    // init ////////////////////////////////////////////////////////////////////////////\n\n    AuthService.isLoggedIn().then(function (user) {\n      if (user.data !== false) {\n        vm.user = true;\n        $window.location = '/#/main-app/collections';\n      }\n\n      console.log('Logged in?', vm.user);\n    })['catch'](function (err) {\n      console.log('Something went wrong: ', err);\n    });\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:NavHomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('home').controller('NavHomeCtrl', NavHomeCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('home').config(config);\n\n  function config($stateProvider) {\n    $stateProvider.state('root', {\n      abstract: true,\n      views: {\n        '': {\n          templateUrl: 'home/root.tpl.html'\n        },\n        'nav-home@root': {\n          templateUrl: 'home/nav-home.tpl.html',\n          controller: 'NavHomeCtrl',\n          controllerAs: 'navHome'\n        }\n      }\n    }).state('root.home', {\n      url: '/home',\n      templateUrl: 'home/home.tpl.html',\n      controller: 'HomeCtrl',\n      controllerAs: 'home'\n    });\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var HomeCtrl = function HomeCtrl() {\n    _classCallCheck(this, HomeCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'HomeCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:HomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('home').controller('HomeCtrl', HomeCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name common\n   * @description\n   *\n   */\n  angular.module('common', []);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:spinner\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <example module=\"common\">\r\n       <file name=\"index.html\">\r\n        <spinner></spinner>\r\n       </file>\r\n     </example>\r\n   *\r\n   */\n  angular.module('common').directive('spinner', spinner);\n\n  function spinner() {\n    return {\n      restrict: 'EA',\n      scope: {},\n      templateUrl: 'common/spinner-directive.tpl.html',\n      replace: true,\n      link: function link(scope, element, attrs) {\n        /*jshint unused:false */\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\n        scope.width = attrs.width;\n      }\n    };\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:Sm2Service\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('common').factory('Sm2Service', Sm2Service);\n\n  function Sm2Service($moment) {\n    var Sm2ServiceBase = {};\n\n    /*    \r\n      SM2 (Super Memo 2) Algorithm\r\n        Learning phase: 1min / 10min\r\n      Review phase default: 4 days\r\n      I(n) = I(n-1) * EF\r\n      Minimum EF: 1.3\r\n        Review response:\r\n      Again: reset phase to learning + -20% to EF\r\n      Hard: -15% to EF\r\n      Good: do nothing\r\n      Easy: +15% to EF\r\n    */\n\n    // main //////////////////////////////////////////////////////////////////////////////\n\n    // calcEaseFactor :: Float -> String -> Float\n    Sm2ServiceBase.calcEaseFactor = function (easeFactor, choice) {\n      var oldEaseFactor = easeFactor;\n      var newEaseFactor = undefined;\n      var minEaseFactor = 1.3;\n\n      switch (choice) {\n        case 'again':\n          newEaseFactor = oldEaseFactor - 0.2;\n          newEaseFactor = newEaseFactor < minEaseFactor ? minEaseFactor : newEaseFactor;\n          break;\n        case 'hard':\n          newEaseFactor = oldEaseFactor - 0.15;\n          newEaseFactor = newEaseFactor < minEaseFactor ? minEaseFactor : newEaseFactor;\n          break;\n        case 'good':\n          newEaseFactor = oldEaseFactor;\n          break;\n        case 'easy':\n          newEaseFactor = oldEaseFactor + 0.15;\n          break;\n      }\n\n      return newEaseFactor;\n    };\n\n    // calcPhase :: String -> Integer -> String -> String\n    Sm2ServiceBase.calcPhase = function (phase, interval, choice) {\n      if (choice === 'again') {\n        return 'learning';\n      }\n\n      if (phase === 'learning') {\n        if (interval === 1) {\n          return 'learning';\n        } else if (interval === 10) {\n          return 'review';\n        }\n      }\n\n      if (phase === 'review') {\n        return 'review';\n      }\n    };\n\n    // calcInterval :: String -> Integer -> Float -> String -> Integer\n    // note: interval is in minutes\n    Sm2ServiceBase.calcInterval = function (phase, interval, easeFactor, choice) {\n      if (choice === 'again') {\n        return 1;\n      }\n\n      if (phase === 'learning') {\n        switch (interval) {\n          case 1:\n            return 10;\n          case 10:\n            return 4 * 24 * 60;\n        }\n      } else if (phase === 'review') {\n        return interval * easeFactor;\n      }\n    };\n\n    Sm2ServiceBase.calcNextReview = function (newInterval) {\n      return $moment().add(newInterval, 'minutes');\n    };\n\n    return Sm2ServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:notification\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <notification show=\"collections.showNotification\" color=\"green\">Some message</notification>\r\n   *\r\n   */\n  angular.module('common').directive('notification', notification);\n\n  function notification($timeout) {\n    return {\n      restrict: 'EA',\n      scope: {\n        show: '=',\n        color: '@'\n      },\n      templateUrl: 'common/notification-directive.tpl.html',\n      transclude: true,\n      replace: false,\n      link: function link(scope, element, attrs) {\n        /*jshint unused:false */\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\n        scope.$watch('show', function () {\n          $timeout(function () {\n            scope.show = false;\n          }, 2500);\n        });\n      }\n    };\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:modal\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <modal show=\"collections.showModal\" \r\n            modal-bg=\"bg-red\" \r\n            yes-cb=\"collections.confirmModal()\" \r\n            no-cb=\"collections.closeModal()\" \r\n            yes-message=\"Yes, delete\" \r\n            no-message=\"No, abort\">\r\n     </modal>\r\n   *\r\n   */\n  angular.module('common').directive('modal', modal);\n\n  function modal() {\n    return {\n      restrict: 'EA',\n      scope: {\n        show: '=',\n        yesCb: '&?',\n        noCb: '&?'\n      },\n      templateUrl: 'common/modal-directive.tpl.html',\n      replace: false,\n      transclude: true,\n      link: function link(scope, element, attrs) {\n        /*jshint unused:false */\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\n        scope.modalBg = attrs.modalBg || '';\n        scope.yesMessage = attrs.yesMessage || 'Yes';\n        scope.noMessage = attrs.noMessage || 'No';\n\n        if (scope.yesCb !== undefined && scope.noCb !== undefined) {\n          scope.showButtons = true;\n        } else {\n          scope.showButtons = false;\n        }\n      }\n    };\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\n   * @ngdoc service\n   * @name common.factory:ImportService\n   *\n   * @description\n   *\n   */\n  angular.module('common').factory('ImportService', ImportService);\n\n  function ImportService($http) {\n    var ImportServiceBase = {};\n\n    // anki :: String -> { collectionTitle, [files] } -> {dbRes}\n    ImportServiceBase.anki = function (userId, data) {\n      return $http.post('/api/import/anki/' + userId, data);\n    };\n\n    return ImportServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:fileread\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <example module=\"common\">\r\n       <file name=\"index.html\">\r\n        <fileread></fileread>\r\n       </file>\r\n     </example>\r\n   *\r\n   */\n  angular.module('common').directive('fileread', fileread);\n\n  function fileread() {\n    return {\n      restrict: 'A',\n      scope: {\n        fileread: '='\n      },\n      replace: false,\n      link: function link(scope, element, attrs) {\n        /*jshint unused:false */\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\n\n        element.bind('change', function (changeEvent) {\n          scope.fileread = [];\n          var files = changeEvent.target.files;\n\n          for (var i = 0, f = undefined; f = files[i]; i++) {\n            var reader = new FileReader();\n\n            reader.onload = (function (file) {\n              return function (loadEvent) {\n                scope.$apply(function () {\n                  scope.fileread.push({ name: file.name, content: loadEvent.target.result });\n                });\n              };\n            })(f);\n\n            reader.readAsText(f);\n          }\n        });\n      }\n    };\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:DictionaryService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('common').factory('DictionaryService', DictionaryService);\n\n  function DictionaryService($http) {\n\n    var DictionaryServiceBase = {};\n\n    DictionaryServiceBase.getDefinition = function (mashapeKey, word) {\n      return $http.get('https://montanaflynn-dictionary.p.mashape.com/define?word=' + word, {\n        headers: { 'X-Mashape-Key': mashapeKey }\n      });\n    };\n\n    DictionaryServiceBase.getPronunciation = function (forvoKey, word) {\n      return $http.jsonp('http://apifree.forvo.com/action/word-pronunciations/format/json/word/' + word + '/language/en/order/rate-desc/limit/1/key/' + forvoKey + '?callback=JSON_CALLBACK');\n    };\n\n    return DictionaryServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:ConfigService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('common').factory('ConfigService', ConfigService);\n\n  function ConfigService() {\n\n    var ConfigServiceBase = {};\n\n    ConfigServiceBase.mashapeKey = 'S4DvXSr43Cmsh5Kww0kOuX9QxNbXp1hjhkYjsn84TFraf8SlG3';\n    ConfigServiceBase.forvoKey = 'f850390038cd293954cb5bdf7dc36d8a';\n\n    return ConfigServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name auth\n   * @description\n   *\n   */\n  angular.module('auth', ['ui.router']);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var RegisterCtrl = function RegisterCtrl() {\n    _classCallCheck(this, RegisterCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'RegisterCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:RegisterCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('auth').controller('RegisterCtrl', RegisterCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var LoginCtrl = function LoginCtrl() {\n    _classCallCheck(this, LoginCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'LoginCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:LoginCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('auth').controller('LoginCtrl', LoginCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name auth.factory:AuthService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('auth').factory('AuthService', AuthService);\n\n  function AuthService(ConfigService, $http, $q, $window) {\n\n    var AuthServiceBase = {};\n\n    // only check login status\n    // used in nav\n    AuthServiceBase.isLoggedIn = function () {\n      return $http.get('/auth/loggedin');\n    };\n\n    // check login status and redirect if not logged in\n    // used for route resolve for protected paths\n    AuthServiceBase.checkLoggedIn = function () {\n\n      var deferred = $q.defer();\n\n      $http.get('/auth/loggedin').then(function (user) {\n        var user = angular.fromJson(user).data;\n        if (user !== false) {\n          deferred.resolve(user);\n        } else {\n          deferred.reject();\n          $window.location = '/#/login';\n        }\n      })['catch'](function (err) {\n        deferred.reject();\n        $window.location = '/#/';\n        console.log('Something went wrong: ', err);\n      });\n\n      return deferred.promise;\n    };\n\n    AuthServiceBase.logout = function () {\n      return $http.get('/auth/logout');\n    };\n\n    return AuthServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('auth').config(config);\n\n  function config($stateProvider) {\n    $stateProvider.state('root.auth', {\n      abstract: true,\n      views: {\n        '': {\n          templateUrl: 'auth/auth.tpl.html'\n        }\n      }\n    }).state('root.auth.login', {\n      url: '/login',\n      templateUrl: 'auth/login.tpl.html',\n      controller: 'LoginCtrl',\n      controllerAs: 'login'\n    }).state('root.auth.register', {\n      url: '/register',\n      templateUrl: 'auth/register.tpl.html',\n      controller: 'RegisterCtrl',\n      controllerAs: 'register'\n    }).state('root.auth.logout', {\n      url: '/logout',\n      templateUrl: 'auth/logout.tpl.html',\n      controller: 'LogoutCtrl',\n      controllerAs: 'logout'\n    });\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('bigvocab').config(config);\n\n  function config($urlRouterProvider) {\n    $urlRouterProvider.otherwise('/home');\n  }\n})();","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name bigvocab\n   * @description\n   *\n   */\n  angular\n    .module('bigvocab', [\n      'ngAria',\n      'ngAnimate',\n      'ngMessages',\n      'ui.router',\n      '720kb.tooltips',\n      'ngAudio',\n      'angular-momentjs',\n      'home',\n      'auth',\n      'mainApp',\n      // 'ramda',\n      'common'\n    ]);\n\n  // ramda module\n  // angular.module('ramda', []);\n  // angular.module('ramda').factory('R', function ($window) {\n  //   return $window.R;\n  // });\n\n}());\n","<div class=\"container\">\r\n\t<div class=\"clearfix center\">\r\n\r\n\t\t<h1 class=\"mt1 mb3\">Test Time!</h1>\r\n\r\n\t\t<div class=\"mb2 bold\"><span class=\"gray\">Today's Quota:</span> 78 <span class=\"gray\">/ 123 words left</span></div>\r\n\r\n\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"h2 px2 py4 bg-white rounded\">Hello</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"clearfix mxn1\">\r\n\t\t\t\t<div class=\"col col-6 px1\">\r\n\t\t\t\t\t<a class=\"btn mt2 bg-red block white\">Not sure<span class=\"ti-close ml1\"></span></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-6 px1\">\r\n\t\t\t\t\t<a class=\"btn mt2 bg-green block white\">Easy<span class=\"ti-check ml1\"></span></a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</div>\r\n</div>","<!--/////////// DESKTOP ONLY ///////////-->\r\n<div class=\"sm-show\" style=\"margin-right: 63px;\">\r\n\r\n\t<div class=\"bg-navy fixed white z1\" style=\"height: 100vh;\">\r\n\t\t<div class=\"flex flex-column flex-center py3\">\r\n\t\t\t\r\n\t\t\t<a ui-sref=\"mainApp.collections\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></a>\r\n\t\t\t<a ui-sref=\"{{ navItem.link }}\" tooltips title=\"{{ navItem.title }}\" tooltip-placement=\"right\" class=\"btn btn-icon h2 center p2\" ng-repeat=\"navItem in sidebar.navItems | orderBy:'id'\" tabindex=\"-1\">\r\n\t\t\t\t<span class=\"{{ navItem.icon }}\"></span>\r\n\t\t\t</a>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>\r\n<!--/////////// end: DESKTOP ONLY ///////////-->\r\n\r\n<!--/////////// MOBILE ONLY ///////////-->\r\n<div class=\"sm-hide\">\r\n\r\n\t<!-- toggle button background -->\r\n\t<div class=\"fixed z2\" style=\"background-color: rgba(255,255,255,0.93); width: 58px; height:58px;\"></div>\r\n\t<!-- toggle button background -->\r\n\r\n\t<!-- toggle button -->\r\n\t<div class=\"fixed z3\">\r\n\t\t<a ng-click=\"sidebar.toggleSidebar()\" class=\"btn btn-icon p2 h3\" ng-class=\"{'black': sidebar.toggle === false, 'white': sidebar.toggle === true}\"><span class=\"ti-menu\"></span></a>\r\n\t</div>\r\n\t<!-- end: toggle button -->\r\n\r\n\t<!-- menu items -->\r\n\t<div class=\"bg-navy fixed white z2 translateX-n-100 transition-all-300\" ng-class=\"{'translateX-n-100': sidebar.toggle === false, 'translateX-0': sidebar.toggle === true }\" style=\"height: 100vh;\">\r\n\t\t<div class=\"flex flex-column py2 mt4\">\r\n\t\t\t\r\n\t\t\t<div style=\"margin-left:20px\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></div>\r\n\t\t\t<a ui-sref=\"{{ navItem.link }}\" ng-click=\"sidebar.toggleSidebar();\" class=\"btn btn-icon py2 px3 flex flex-center\" ng-repeat=\"navItem in sidebar.navItems | orderBy:'id'\" tabindex=\"-1\">\r\n\t\t\t\t<div class=\"{{ navItem.icon }} h3 mr2\"></div>\r\n\t\t\t\t<div class=\"h5\">{{ navItem.title }}</div>\r\n\t\t\t</a>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\t<!-- end: menu items -->\r\n\r\n</div>\r\n<!--/////////// end: MOBILE ONLY ///////////-->\r\n","<div class=\"container\">\r\n\t<div class=\"clearfix center\">\r\n\r\n\t\t<h1 class=\"mt1 mb3\">Study Time!</h1>\r\n\r\n\t\t<div class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"flex flex-justify\">\r\n\t\t\t\t<div class=\"mb2 bold\">\r\n\t\t\t\t\t<span class=\"gray\">Today's Quota:</span> {{ reviewWords.totalWordsCount - reviewWords.wordCounter }} <span class=\"gray\">/ {{ reviewWords.totalWordsCount }} words left</span>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<a ng-click=\"reviewWords.toggleEdit()\" class=\"h5 gray underline\">Edit</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- edit word -->\r\n\t\t<div class=\"sm-col-6 mx-auto px2 bg-darken-1 rounded py2 mb2\" ng-if=\"reviewWords.editToggle\">\r\n\t\t\t<form>\r\n\t\t\t\t<input type=\"text\" name=\"editWord\" ng-model=\"reviewWords.formData.word\" class=\"field col-12 mb1\" required>\r\n\t\t\t\t<textarea name=\"editDefinition\" ng-model=\"reviewWords.formData.definition\" class=\"field col-12\" style=\"height: 80px;\"></textarea>\r\n\t\t\t\t<button ng-click=\"reviewWords.submitEdit(reviewWords.currentWord.id, reviewWords.formData.word, reviewWords.formData.definition)\" class=\"btn btn-green btn-form col-12 mt1\">Save Changes</button>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t<!-- end: edit word -->\r\n\r\n\t\t<div class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"p3 bg-white rounded flex flex-column flex-center-justified\" style=\"min-height: 184px\">\r\n\t\t\t\t<div class=\"h2 mb1\">{{ reviewWords.currentWord.word }}</div>\r\n\t\t\t\t<div ng-if=\"reviewWords.showAnswer\" class=\"h4 dark-gray\">{{ reviewWords.currentWord.definition }}</div>\r\n\r\n\t\t\t\t<!-- pronunciation -->\r\n\t\t\t\t<button ng-if=\"reviewWords.pronunciation !== null && reviewWords.showAnswer\" \r\n\t\t\t\t\t\t\t\tng-click=\"reviewWords.playPronunciation()\" \r\n\t\t\t\t\t\t\t\tclass=\"btn btn-blue-outline btn-sm mt2 mx-auto center\" style=\"width: 48px; height: 48px; border-radius: 50%;\">\r\n\t\t\t\t\t<span class=\"ti-control-play\" style=\"margin-left:4px\"></span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<!-- end: pronunciation -->\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<!-- show answer button -->\r\n\t\t<div ng-if=\"!reviewWords.showAnswer\" class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t<button ng-click=\"reviewWords.toggleAnswer()\" \r\n\t\t\t\t\t\t\tng-disabled=\"reviewWords.currentWord === undefined\"\r\n\t\t\t\t\t\t\tclass=\"btn btn-primary mt2 col-12\">Show Answer</button>\r\n\t\t</div>\r\n\t\t<!-- end: show answer button -->\r\n\r\n\t\t<!-- review response buttons -->\r\n\t\t<div ng-if=\"reviewWords.showAnswer\" class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"clearfix mxn1\">\r\n\t\t\t\t<div class=\"col col-3 px1 red\">\r\n\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, 'again')\" \r\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-red mt2 col-12\">Again</button>\r\n\t\t\t\t\t<div class=\"h6 gray center mt1\">Can't recall</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-3 px1 green\">\r\n\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, 'hard')\" \r\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-yellow-green mt2 col-12\">Hard</button>\r\n\t\t\t\t\t<div class=\"h6 gray center mt1\">Challenging</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-3 px1 green\">\r\n\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, 'good')\" \r\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-green mt2 col-12\">Good</button>\r\n\t\t\t\t\t<div class=\"h6 gray center mt1\">Just right</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-3 px1 green\">\r\n\t\t\t\t\t<button ng-click=\"reviewWords.submitRes(reviewWords.currentWord, 'easy')\" \r\n\t\t\t\t\t\t\t\t\tclass=\"btn btn-green mt2 col-12\">Easy</button>\r\n\t\t\t\t\t<div class=\"h6 gray center mt1\">Too easy</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t\t<!-- end: review response buttons -->\r\n\r\n\t</div>\r\n</div>","<div class=\"flex\">\n\t<div ui-view=\"sidebar\"></div>\n\t<div ui-view class=\"flex-auto bg-darken-1 py4\" style=\"min-height: 100vh\"></div>\n</div>\n","<div class=\"container\">\r\n\t<div class=\"clearfix\">\r\n\r\n\t\t<div class=\"sm-col-10 md-col-6 mx-auto center px2\">\r\n\t\r\n\t\t\t<h1 class=\"mt1 mb2\">Log Out</h1>\r\n\r\n\t\t\t<div class=\"mb3 h4\">Are you sure you want to sign out from Big Vocab?</div>\r\n\r\n\t\t\t<button class=\"btn btn-blue-outline\" ng-click=\"logout.logout()\">Yes, log me out</button>&nbsp;&nbsp;\r\n\t\t\t<button class=\"btn btn-primary\" ng-click=\"logout.goBack()\">No, send me back</button>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n</div>","<div class=\"container\">\r\n\t<div class=\"clearfix\">\r\n\r\n\t\t<h1 class=\"mt1 mb3 center\">List of All Words in <span class=\"italic\">{{ listWords.collectionTitle }}</span></h1>\r\n\r\n\t\t<!-- search words form -->\r\n\t\t<div class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t\r\n\t\t\t<form name=\"listWordsForm\" class=\"center\">\r\n\t\t\t\t<input name=\"searchWords\" type=\"text\" ng-model=\"listWords.searchWords\" class=\"field col-12 mb3\" placeholder=\"Search any word or definition\">\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t\t<!-- end: search words form -->\r\n\r\n\t\t<!-- list of words -->\r\n\t\t<div class=\"sm-col-10 mx-auto px2\">\r\n\t\t\t\r\n\t\t\t<div ng-repeat=\"word in listWords.words | filter: listWords.searchWords\" class=\"clearfix mb2\">\r\n\t\t\t\t<div class=\"sm-col sm-col-3\">{{ word.word }}</div>\r\n\t\t\t\t<div class=\"sm-col sm-col-9 gray\">{{ word.definition }}</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<!-- end: list of words -->\r\n\r\n\t</div>\r\n</div>","<div class=\"container\">\r\n\t<div class=\"clearfix\">\r\n\r\n\t\t<div class=\"sm-col-10 md-col-6 mx-auto center px2\">\r\n\t\r\n\t\t\t<h1 class=\"mt1 mb2\">Import from Anki</h1>\r\n\r\n\t\t\t<div class=\"mb3\">If you upload multiple files, it will merge them and input it into a single collection. If you want each text file to have its own collection, upload one file at a time.</div>\r\n\r\n\t\t\t<form name=\"import.importForm\" \r\n\t\t\t\t\t\tng-submit=\"import.importTextfile(import.importForm.$valid, import.formData)\"\r\n\t\t\t\t\t\tnovalidate>\r\n\r\n\t\t\t\t<div class=\"mb1 bold\">Title of the collection to be imported</div>\r\n\t\t\t\t<input name=\"collectionTitle\" type=\"text\" ng-model=\"import.formData.collectionTitle\" class=\"field col-12\" placeholder=\"{{ import.placeholder.collectionTitle }}\" autofocus required>\r\n\r\n\t\t\t\t<!-- error handling -->\r\n\t\t\t\t<div ng-messages=\"import.importForm.collectionTitle.$error\" \r\n\t\t\t\t\t\t ng-if=\"import.importForm.$submitted && import.importForm.collectionTitle.$touched\" \r\n\t\t\t\t\t\t class=\"red bold h6 mt1\">\r\n\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: error handling -->\r\n\r\n\t\t\t\t<div class=\"mt3 mb1 bold\">Anki text file (i.e. anki-collection-2015.txt)</div>\r\n\t\t\t\t<div class=\"file-input\">\r\n\t\t\t\t\tClick here to upload your files<span class=\"ti-folder ml1\">\r\n\t\t\t\t\t<input name=\"files\" type=\"file\" multiple=\"multiple\" accept=\".txt\" fileread=\"import.formData.files\" class=\"field col-12\" style=\"cursor: pointer; margin-bottom: none\" placeholder=\"{{ import.placeholder.files }}\" required>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- file names -->\r\n\t\t\t\t<div class=\"mt1\">\r\n\t\t\t\t\t<div ng-repeat=\"file in import.formData.files\" track by $index>{{ file.name }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: file names -->\r\n\r\n\t\t\t\t<!-- error handling -->\r\n\t\t\t\t<div ng-messages=\"import.importForm.files.$error\" \r\n\t\t\t\t\t\t ng-if=\"import.importForm.$submitted\" \r\n\t\t\t\t\t\t class=\"red bold h6 mt1\">\r\n\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: error handling -->\r\n\r\n\t\t\t\t<!-- submit button -->\r\n\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mt3 mb2\" ng-disabled=\"import.btnState.success || import.btnState.loading\">\r\n\t\t\t\t\t<span ng-if=\"!import.btnState.loading && !import.btnState.success\">Import Anki Text File<span class=\"ti-import ml1\"></span></span>\r\n\t\t\t\t\t<span ng-if=\"import.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\r\n\t\t\t\t\t<span ng-if=\"import.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<!-- end: submit button -->\r\n\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n</div>","<div class=\"clearfix\">\r\n\r\n\t<h1 class=\"mt1 center\">My Collections&nbsp;&nbsp;<a ng-click=\"collections.toggleEdit()\" ng-if=\"collections.collectionList.length >= 1\" class=\"h5 gray underline\">Edit</a></h1>\r\n\r\n\t<!-- edit collection options -->\r\n\t<div class=\"md-col-10 lg-col-8 mx-auto px2\" ng-if=\"collections.showEdit\">\r\n\t\t<button class=\"btn btn-sm btn-yellow-green h6 mb2\" ng-click=\"collections.mergeCollections(collections.collectionList, collections.checks)\">Merge Selected</button>\r\n\t\t<button class=\"btn btn-sm btn-red h6 ml1 mb2\" ng-click=\"collections.showConfirmDeleteModal(collections.collectionList, collections.checks)\">Delete Selected</button>\r\n\t</div>\r\n\t<!-- end: edit collection options -->\r\n\r\n\t<div class=\"md-col-10 lg-col-8 mx-auto px2\">\r\n\r\n\t\t<!-- collection list -->\r\n\t\t<div class=\"clearfix bg-white rounded p1 mb2 ng-animation-fadeInUp\" ng-repeat=\"collection in collections.collectionList | orderBy: 'id'\">\r\n\r\n\t\t\t<div class=\"sm-col sm-col-7\">\r\n\t\t\t\t\r\n\t\t\t\t<!-- select collection -->\r\n\t\t\t\t<input type=\"checkbox\" style=\"margin-left: 8px; margin-right: -16px;\" ng-model=\"collections.checks[collection.id]\" ng-if=\"collections.showEdit\">\r\n\t\t\t\t<!-- end: select collection -->\r\n\r\n\t\t\t\t<div class=\"btn btn-md bold ml1 mt1 mb1\" style=\"cursor: text\">{{ collection.title }} <span class=\"gray\">(due: {{ collection.dueWordCount }}, new: {{ collection.newWordCount }} )</span></div>\r\n\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"sm-col sm-col-5 flex flex-wrap\">\r\n\t\t\t\t<a ui-sref=\"mainApp.review-words({ collectionId: collection.id })\" class=\"btn btn-md btn-primary flex-auto center m1 h5\">Study<span class=\"ti-arrow-right ml1\"></span></a>\r\n\t\t\t\t<a ui-sref=\"mainApp.add-words({ collectionId: collection.id })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"Add Words\" tooltip-placement=\"top\"><span class=\"ti-plus\"></span></a>\r\n\t\t\t\t<a ui-sref=\"mainApp.list-words({ collectionId: collection.id, collectionTitle: collection.title })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"View All Words\" tooltip-placement=\"top\"><span class=\"ti-folder\"></span></a>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t<!-- end: collection list -->\r\n\r\n\t\t<!-- add collection -->\r\n\t\t<div class=\"clearfix bg-light-green px2 py2 mt3 rounded\">\r\n\r\n\t\t\t<div class=\"center\">\r\n\t\t\t\t<div class=\"caps bold m1\">Add Collection</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<form name=\"collections.addCollectionForm\" \r\n\t\t\t\t\t\tng-submit=\"collections.createCollection(collections.addCollectionForm.$valid, { \r\n\t\t\t\t\t\t\tuserId: collections.user.id,\r\n\t\t\t\t\t\t\ttitle: collections.formData.collectionTitle \r\n\t\t\t\t\t\t})\"\r\n\t\t\t\t\t\tnovalidate>\r\n\r\n\t\t\t\t<div class=\"sm-col sm-col-8 p1\">\r\n\t\t\t\t\t<input name=\"collectionTitle\" type=\"text\" ng-model=\"collections.formData.collectionTitle\" class=\"field col-12\" placeholder=\"{{ collections.placeholder.collectionTitle }}\" required>\r\n\r\n\t\t\t\t\t<!-- error handling -->\r\n\t\t\t\t\t<div ng-messages=\"collections.addCollectionForm.collectionTitle.$error\" \r\n\t\t\t\t\t\t\t ng-if=\"collections.addCollectionForm.$submitted && collections.addCollectionForm.collectionTitle.$touched\" \r\n\t\t\t\t\t\t\t class=\"red bold h6 mt1\">\r\n\t\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- end: error handling -->\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- submit button -->\r\n\t\t\t\t<div class=\"sm-col sm-col-4 p1\">\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-form btn-green col-12\" ng-disabled=\"collections.btnState.success || collections.btnState.loading\">\r\n\t\t\t\t\t\t<span ng-if=\"!collections.btnState.loading && !collections.btnState.success\">Add Collection</span>\r\n\t\t\t\t\t\t<span ng-if=\"collections.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\r\n\t\t\t\t\t\t<span ng-if=\"collections.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: submit button -->\r\n\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t<!-- end: add collection -->\r\n\r\n\t</div>\r\n\r\n</div>\r\n\r\n<!-- notification -->\r\n<notification color=\"green\" show=\"collections.notification.success\"><span class=\"ti-check mr1\"></span>{{ collections.notificationSuccessMsg }}</notification>\r\n<notification color=\"red\" show=\"collections.notification.error\"><span class=\"ti-alert mr1\"></span>{{ collections.notificationErrorMsg }}</notification>\r\n<!-- end: notification -->\r\n\r\n<!-- modal -->\r\n<modal show=\"collections.showModal\" \r\n\t      modal-bg=\"bg-white\" \r\n\t      yes-cb=\"collections.confirmModal()\" \r\n\t      no-cb=\"collections.closeModal()\" \r\n\t      yes-message=\"Yes, delete\" \r\n\t      no-message=\"No, abort\">\r\n\t<div class=\"center h3\">Are you sure you want to delete the selected collection(s)?</div>\r\n</modal>\r\n<!-- end: modal -->","<div class=\"container\">\r\n\t<div class=\"clearfix\">\r\n\r\n\t\t<h1 class=\"mt1 mb3 center\">Add New Words</h1>\r\n\r\n\t\t<!-- add words form -->\r\n\t\t<div class=\"md-col md-col-6 px2\">\r\n\r\n\t\t\t<form name=\"addWords.addWordForm\" \r\n\t\t\t\t\t\tng-submit=\"addWords.addWord(addWords.addWordForm.$valid, addWords.formData)\"\r\n\t\t\t\t\t\tnovalidate>\r\n\r\n\t\t\t\t<div class=\"mb1 bold\">WORD</div>\r\n\t\t\t\t<input name=\"word\" type=\"text\" ng-model=\"addWords.formData.word\" ng-blur=\"addWords.getDefinition(addWords.formData.word)\" class=\"field col-12\" placeholder=\"{{ addWords.placeholder.word }}\" autofocus required>\r\n\r\n\t\t\t\t<!-- error handling -->\r\n\t\t\t\t<div ng-messages=\"addWords.addWordForm.word.$error\" \r\n\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.word.$touched\" \r\n\t\t\t\t\t\t class=\"red bold h6 mt1\">\r\n\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: error handling -->\r\n\r\n\t\t\t\t<div class=\"mb1 mt2 bold\">MEANING</div>\r\n\t\t\t\t<textarea name=\"definition\" ng-model=\"addWords.formData.definition\" class=\"field col-12\" style=\"height: 160px;\" placeholder=\"{{ addWords.placeholder.definition }}\"></textarea>\r\n\r\n\t\t\t\t<!-- error handling -->\r\n\t\t\t\t<div ng-messages=\"addWords.addWordForm.definition.$error\" \r\n\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.definition.$touched\" \r\n\t\t\t\t\t\t class=\"red bold h6\">\r\n\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: error handling -->\r\n\r\n\t\t\t\t<div class=\"flex flex-justify\">\r\n\t\t\t\t\t<button ng-click=\"addWords.resetForm()\" class=\"btn btn-outline mt2 mb2\">Reset Form</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- submit button -->\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mt2 mb2\" ng-disabled=\"addWords.btnState.success || addWords.btnState.loading\">\r\n\t\t\t\t\t\t<span ng-if=\"!addWords.btnState.loading && !addWords.btnState.success\"><span class=\"ti-plus mr1\"></span>Add Word</span>\r\n\t\t\t\t\t\t<span ng-if=\"addWords.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\r\n\t\t\t\t\t\t<span ng-if=\"addWords.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<!-- end: submit button -->\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t\t<!-- end: add words form -->\r\n\r\n\t\t<!-- definitions from dictionary API -->\r\n\t\t<div class=\"md-col md-col-6 px2\">\r\n\r\n\t\t\t<div class=\"bold gray mb2\">Word definitions from <span class=\"italic\">The American Heritage® Dictionary of the English Language, 4th Edition</span></div>\r\n\r\n\t\t\t<div class=\"bg-light-green rounded p2 mb2 near-black ng-animation-fadeInUp\" ng-repeat=\"definition in addWords.definitions\">\r\n\t\t\t\t<div class=\"flex flex-center\">\r\n\t\t\t\t\t<div class=\"flex-none\" style=\"width: 52px\">\r\n\t\t\t\t\t\t<a ng-click=\"addWords.copyDefinition(definition.text)\" class=\"btn btn-sm btn-green-outline\" tabindex=\"-1\"><span class=\"ti-check\"></span></a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"h5\">{{ definition.text }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t<!-- definitions from dictionary API -->\r\n\r\n\t</div>\r\n</div>\r\n","<div ui-view=\"nav-home\"></div>\r\n<div ui-view></div>","<div class=\"fixed white border-bottom border-lighten-2\" style=\"width: 100%\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"flex flex-center\">\r\n\t\t\t<a class=\"btn btn-sm\" ui-sref=\"root.home\">\r\n\t\t\t\t<img src=\"../images/logo/bigvocab-logo-white.svg\" width=\"50px\" />\r\n\t\t\t</a>\r\n\r\n\t\t\t<div class=\"flex-auto\"></div>\r\n\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<!-- nav items -->\r\n\t\t\t\t<a ui-sref=\"root.home\" ng-click=\"navHome.setActive('home')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{'bold muted-0': navHome.active === 'home'}\">Home</a>\r\n\t\t\t\t<a ui-sref=\"root.features\" ng-click=\"navHome.setActive('features')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{'bold muted-0': navHome.active === 'features'}\">How it works</a>\r\n\t\t\t\t<!--<a ui-sref=\"root.about\" ng-click=\"navHome.setActive('about')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{'bold muted-0': navHome.active === 'about'}\">About</a>-->\r\n\t\t\t\t<!-- end: nav items -->\r\n\r\n\t\t\t\t<!-- login button -->\r\n\t\t\t\t<a href=\"/auth/google\" ng-if=\"!navHome.user\" class=\"btn btn-outline btn-sm ml2 mr2 py2 h6\">Login&nbsp;&rarr;</a>\r\n\t\t\t\t<!-- end: login button -->\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","<div class=\"bg-cover bg-gradient-home\">\r\n\r\n\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\r\n\t\t<div class=\"container flex-auto\">\r\n\t\t\t<div class=\"clearfix\">\r\n\r\n\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\r\n\t\t\t\t\t<div class=\"h1 light\">Big Vocab</div>\r\n\t\t\t\t\t<p>Big Vocab uses a method called Spaced Repetition to improve word recall. Think of it as a virtual flash card that's optimized to help you remember more words.</p>\r\n\t\t\t\t\t<a ui-sref=\"root.auth.register\" class=\"btn btn-red\">Sign Up</a>&nbsp;&nbsp;\r\n\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline\">Login</a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>","<img src=\"../images/spinner/oval-sm.svg\" class=\"mr1\" width=\"{{ width }}\">","<div ng-if=\"show\" class=\"rounded bg-{{color}} px3 py2 fixed white h5 ng-animation-fadeInUp\" style=\"top: 24px; right: 24px; max-width: 240px;\">\n\t<div ng-transclude></div>\n</div>","<!-- overlay -->\n<div ng-if=\"show\" class=\"fixed z2 top-0 right-0 bottom-0 left-0 bg-darken-3\" ng-click=\"noCb()\">\n</div>\n<!-- end: overlay -->\n\n<div ng-if=\"show\" class=\"fixed z3 top-0 right-0 bottom-0 left-0 ng-animation-fadeInUp\">\n\t<div class=\"flex flex-center flex-center-justified px2\" style=\"width: 100%; height: 100vh;\">\n\t\t<div class=\"sm-col-8 md-col-7 lg-col-5 relative {{ modalBg }}\">\n\t\t\t\n\t\t\t<!-- close button -->\n\t\t\t<div>\n\t\t\t\t<a class=\"ti-close absolute right-0 h3 p3\" ng-click=\"noCb()\"></a>\n\t\t\t</div>\n\t\t\t<!-- end: close button -->\n\n\t\t\t<!-- content -->\n\t\t\t<div class=\"px4 py3 mt1\">\n\t\t\t\t<div ng-transclude></div>\n\t\t\t\t<!-- end: content -->\n\n\t\t\t\t<!-- buttons -->\n\t\t\t\t<div class=\"center mt2 mb1\" ng-if=\"showButtons\">\n\t\t\t\t\t<button class=\"btn btn-primary\" ng-click=\"yesCb()\">{{ yesMessage }}</button>&nbsp;&nbsp;\n\t\t\t\t\t<button class=\"btn btn-primary\" ng-click=\"noCb()\">{{ noMessage }}</button>\n\t\t\t\t</div>\n\t\t\t\t<!-- end: buttons -->\n\t\t\t</div>\n\n\t\t</div>\n\t</div>\n</div>","<div class=\"bg-cover bg-gradient-navy\">\r\n\r\n\t<div class=\"flex flex-center\" style=\"min-height: 100vh\">\r\n\t\t<div class=\"container-sm flex-auto\">\r\n\t\t\t<div class=\"clearfix white\">\r\n\r\n\t\t\t\t<div class=\"sm-col sm-col-8 px2 mb3\">\r\n\t\t\t\t\t<div class=\"h2 light mb2\">Sign Up</div>\r\n\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-primary\">Sign up with Your Google Account</a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"sm-col sm-col-4 px2\">\r\n\t\t\t\t\t<div class=\"border border-lighten-3 p2\">\r\n\t\t\t\t\t\t<p>Already have an account?</p>\r\n\t\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline block\">Login with Google</a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>","<div class=\"bg-cover bg-gradient-navy\">\r\n\r\n\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\r\n\t\t<div class=\"container flex-auto\">\r\n\t\t\t<div class=\"clearfix\">\r\n\r\n\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\r\n\t\t\t\t\t<div class=\"h1 light mb2\">Login to Big Vocab</div>\r\n\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-red\">Login with Google</a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>","<div ui-view=\"root.nav-home\"></div>\r\n<div ui-view></div>","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name mainApp\n   * @description\n   *\n   */\n  angular\n    .module('mainApp', [\n      'ui.router'\n    ]);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:WordsService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .factory('WordsService', WordsService);\r\n\r\n  function WordsService($http) {\r\n\r\n    let WordsServiceBase = {};\r\n\r\n    WordsServiceBase.getAll = collectionId => {\r\n      return $http.get('/api/words/' + collectionId);\r\n    };\r\n\r\n    WordsServiceBase.create = word => {\r\n      return $http.post('/api/words', word);\r\n    };\r\n\r\n    WordsServiceBase.get = wordId => {\r\n      return $http.get('/api/words/' + wordId);\r\n    };\r\n\r\n    // get only the words to be reviewed today\r\n    WordsServiceBase.getDue = collectionId => {\r\n      return $http.get('/api/words/' + collectionId + '/?filter=dueToday');\r\n    };\r\n\r\n    WordsServiceBase.update = (wordId, wordUpdate) => {\r\n      return $http.put('/api/words/' + wordId, wordUpdate);\r\n    };\r\n\r\n    WordsServiceBase.delete = wordId => {\r\n      return $http.delete('/api/words/' + wordId);\r\n    };\r\n\r\n    return WordsServiceBase;\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class TestWordsCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'TestWordsCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:TestWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('TestWordsCtrl', TestWordsCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class SidebarCtrl {\r\n    constructor() {\r\n\r\n      let vm = this;\r\n\r\n      vm.toggle = false;\r\n      vm.toggleSidebar = () => {\r\n        vm.toggle = !vm.toggle;\r\n      };\r\n\r\n      vm.navItems = [\r\n        {\r\n          id: 1,\r\n          title: 'Collections',\r\n          icon: 'ti-layers-alt',\r\n          link: 'mainApp.collections'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Test',\r\n          icon: 'ti-check-box',\r\n          link: 'mainApp.test-words'\r\n        },\r\n        {\r\n          id: 3,\r\n          title: 'Import',\r\n          icon: 'ti-import',\r\n          link: 'mainApp.import'\r\n        },\r\n        {\r\n          id: 4,\r\n          title: 'Log Out',\r\n          icon: 'ti-arrow-left',\r\n          link: 'mainApp.logout'\r\n        }\r\n      ];\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:SidebarCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('SidebarCtrl', SidebarCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class ReviewWordsCtrl {\r\n    constructor(WordsService, $stateParams, $moment, Sm2Service, ConfigService, DictionaryService, $sce, ngAudio) {\r\n\r\n      let vm = this;\r\n\r\n      // config ////////////////////////////////////////////////////////////////////////////\r\n\r\n      let collectionId = $stateParams.collectionId;\r\n      vm.wordCounter = 0; // keeps track of which word user is reviewing\r\n      vm.showAnswer = false;\r\n      vm.editToggle = false;\r\n      vm.formData = {};\r\n\r\n      // init //////////////////////////////////////////////////////////////////////////////\r\n\r\n      WordsService.getDue(collectionId)\r\n        .then(res => {\r\n          vm.words = angular.fromJson(res).data;\r\n          vm.totalWordsCount = vm.words.length;\r\n          vm.currentWord = vm.words[vm.wordCounter];\r\n          vm.pronunciation = vm.currentWord !== undefined ? getPronunciation(vm.currentWord) : null;\r\n          initEditWord(vm.currentWord);\r\n        })\r\n        .catch(err => {\r\n          console.log('Something went wrong: ', err);\r\n        });\r\n\r\n      // helper functions /////////////////////////////////////////////////////////////////\r\n\r\n      function getPronunciation (word) {\r\n        if (word === undefined || \r\n            word.pronunciationPath === undefined || \r\n            word.pronunciationPath === null) { return null; }\r\n\r\n        return ngAudio.load(word.pronunciationPath);\r\n      }\r\n\r\n      function initEditWord (currentWord) {\r\n        vm.formData.word = currentWord.word;\r\n        vm.formData.definition = currentWord.definition;\r\n      }\r\n\r\n      // main //////////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.toggleAnswer = () => {\r\n        vm.showAnswer = !vm.showAnswer;\r\n      };\r\n\r\n      vm.toggleEdit = () => {\r\n        vm.editToggle = !vm.editToggle;\r\n      };\r\n\r\n      vm.playPronunciation = () => {\r\n        vm.pronunciation.play();\r\n      };\r\n\r\n      vm.submitEdit = (wordId, word, definition) => {\r\n        let wordUpdate = {\r\n          word: word,\r\n          definition: definition\r\n        };\r\n\r\n        WordsService.update(wordId, wordUpdate)\r\n          .then(() => {\r\n            vm.toggleEdit();\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      };\r\n\r\n      vm.submitRes = (word, choice) => {\r\n\r\n        let newEaseFactor = Sm2Service.calcEaseFactor(word.easeFactor, choice);\r\n        let newPhase = Sm2Service.calcPhase(word.phase, word.interval, choice);\r\n        let newInterval = Sm2Service.calcInterval(word.phase, word.interval, word.easeFactor, choice);\r\n        let lastReviewed = $moment();\r\n        let lastReviewedEpochTime = lastReviewed.unix();\r\n        let newNextReview = Sm2Service.calcNextReview(newInterval);\r\n        let newNextReviewEpochTime = newNextReview.unix();\r\n\r\n        let newReviewRes = angular.copy(word.reviewRes);\r\n        newReviewRes[choice]++;\r\n\r\n        let wordUpdate = {\r\n          reviewRes: newReviewRes,\r\n          lastReviewedEpochTime: lastReviewedEpochTime,\r\n          easeFactor: newEaseFactor,\r\n          phase: newPhase,\r\n          interval: newInterval,\r\n          nextReviewEpochTime: newNextReviewEpochTime\r\n        };\r\n\r\n        console.log('word id: ', word.id);\r\n\r\n        WordsService.update(word.id, wordUpdate)\r\n          .then(() => {\r\n            vm.wordCounter++;\r\n            vm.currentWord = vm.words[vm.wordCounter];\r\n            vm.pronunciation = getPronunciation(vm.currentWord);\r\n            vm.toggleAnswer();\r\n\r\n            // intialize edit fields\r\n            initEditWord(vm.currentWord);\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n            vm.toggleAnswer();\r\n          });\r\n      \r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ReviewWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('ReviewWordsCtrl', ReviewWordsCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  angular\n    .module('mainApp')\n    .config(config);\n\n  function config($stateProvider) {\n    $stateProvider\n      .state('mainApp', {\n        abstract: true,\n        url: '/main-app',\n        views: {\n          '': {\n            templateUrl: 'main-app/main-app.tpl.html',\n          },\n          'sidebar@mainApp': {\n            templateUrl: 'main-app/sidebar.tpl.html',\n            controller: 'SidebarCtrl',\n            controllerAs: 'sidebar'\n          }\n        },\n        resolve: {\n          user: AuthService => {\n            return AuthService.checkLoggedIn();\n          }\n        }\n      })\n      .state('mainApp.collections', {\n        url: '/collections',\n        templateUrl: 'main-app/collections.tpl.html',\n        controller: 'CollectionsCtrl',\n        controllerAs: 'collections'\n      })\n      .state('mainApp.add-words', {\n        url: '/collections/:collectionId/add-words',\n        templateUrl: 'main-app/add-words.tpl.html',\n        controller: 'AddWordsCtrl',\n        controllerAs: 'addWords'\n      })\n      .state('mainApp.review-words', {\n        url: '/collections/:collectionId/review-words',\n        templateUrl: 'main-app/review-words.tpl.html',\n        controller: 'ReviewWordsCtrl',\n        controllerAs: 'reviewWords'\n      })\n      .state('mainApp.list-words', {\n        url: '/collections/:collectionId/list-words',\n        templateUrl: 'main-app/list-words.tpl.html',\n        controller: 'ListWordsCtrl',\n        controllerAs: 'listWords',\n        params: { collectionTitle: null }\n      })\n      .state('mainApp.test-words', {\n        url: '/test-words',\n        templateUrl: 'main-app/test-words.tpl.html',\n        controller: 'TestWordsCtrl',\n        controllerAs: 'testWords'\n      })\n      .state('mainApp.logout', {\n        url: '/logout',\n        templateUrl: 'main-app/logout.tpl.html',\n        controller: 'LogoutCtrl',\n        controllerAs: 'logout'\n      })\n      .state('mainApp.import', {\n        url: '/import',\n        templateUrl: 'main-app/import.tpl.html',\n        controller: 'ImportCtrl',\n        controllerAs: 'import'\n      });\n  }\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class LogoutCtrl {\r\n    constructor(AuthService, $window) {\r\n\r\n      let vm = this;\r\n      \r\n      vm.logout = () => {\r\n        AuthService.logout()\r\n          .then(() => {\r\n            console.log('User logged out successfully');\r\n            $window.location = '/#/home';\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      };\r\n\r\n      vm.goBack = () => {\r\n        $window.history.go(-1);\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:LogoutCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('LogoutCtrl', LogoutCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class ListWordsCtrl {\r\n    constructor($stateParams, WordsService) {\r\n\r\n      let vm = this;\r\n\r\n      // config\r\n      vm.collectionTitle = $stateParams.collectionTitle;\r\n      let collectionId = $stateParams.collectionId;\r\n\r\n      // main\r\n      WordsService.getAll(collectionId)\r\n        .then(words => {\r\n          console.log(angular.fromJson(words).data);\r\n          vm.words = angular.fromJson(words).data;\r\n        })\r\n        .catch(err => {\r\n          console.log('Something went wrong: ', err);\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ListWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('ListWordsCtrl', ListWordsCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class ImportCtrl {\r\n    constructor(ImportService, WordsService, DictionaryService, ConfigService, user, $timeout, $window, $q) {\r\n\r\n      let vm = this;\r\n      \r\n      // config ///////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.formData = {};\r\n      vm.btnState = {\r\n        loading: false,\r\n        success: false\r\n      };\r\n      vm.placeholder = {\r\n        files: 'Click to upload anki text files',\r\n        collectionTitle: 'Add collection title here'\r\n      };\r\n\r\n      // helper functions /////////////////////////////////////////////////////////////////\r\n\r\n      function importTextfile (userId, data) {\r\n        \r\n        vm.btnState.loading = true;\r\n\r\n        ImportService.anki(userId, data)\r\n          .then(dbRes => {\r\n            let dbResData = angular.fromJson(dbRes).data;\r\n            let collectionId = dbResData.generated_keys[0];\r\n\r\n            return WordsService.getAll(collectionId);\r\n          })\r\n          .then(res => {\r\n            let words = angular.fromJson(res).data;\r\n            let promises = [];\r\n\r\n            words.forEach(word => {\r\n              promises.push(addPronunciation(ConfigService.forvoKey, word));\r\n            });\r\n\r\n            return $q.all(promises);\r\n          })\r\n          .then(() => {\r\n            vm.btnState.loading = false;\r\n            vm.btnState.success = true;\r\n            \r\n            $timeout(() => {\r\n              vm.btnState.success = false;\r\n              $window.location.href = '/#/main-app/collections';\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            vm.btnState.loading = false;\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n\r\n      }\r\n\r\n      function addPronunciation (forvoKey, word) {\r\n        let deferred = $q.defer();\r\n\r\n        DictionaryService.getPronunciation(forvoKey, word.word)\r\n          .then(res => {\r\n            let pronunciationData = angular.fromJson(res).data;\r\n            let pronunciationPath = pronunciationData.attributes.total !== 0 ? pronunciationData.items[0].pathmp3 : null;\r\n\r\n            let wordUpdate = {\r\n              pronunciationPath: pronunciationPath\r\n            };\r\n\r\n            return WordsService.update(word.id, wordUpdate);\r\n          })\r\n          .then(dbRes => {\r\n            deferred.resolve(dbRes);\r\n          })\r\n          .catch(err => {\r\n            deferred.reject(err);\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n\r\n        return deferred.promise;\r\n      }\r\n\r\n      // main /////////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.importTextfile = (isValid, formData) => {\r\n\r\n        if (!isValid) { return; }\r\n\r\n        importTextfile(user.id, formData);\r\n\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ImportCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('ImportCtrl', ImportCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:CollectionsService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .factory('CollectionsService', CollectionsService);\r\n\r\n  function CollectionsService($http) {\r\n\r\n    let CollectionsServiceBase = {};\r\n\r\n    CollectionsServiceBase.getAll = userId => {\r\n      return $http.get('/api/collections/' + userId);\r\n    };\r\n\r\n    CollectionsServiceBase.create = collection => {\r\n      return $http.post('/api/collections', collection);\r\n    };\r\n\r\n    CollectionsServiceBase.get = collectionId => {\r\n      return $http.get('/api/collections/' + collectionId);\r\n    };\r\n\r\n    CollectionsServiceBase.merge = (collectionId, newCollectionId) => {\r\n      return $http.put('/api/collections/merge/' + collectionId, newCollectionId);\r\n    };\r\n\r\n    CollectionsServiceBase.update = (collectionId, newCollection) => {\r\n      return $http.put('/api/collections/' + collectionId, newCollection);\r\n    };\r\n\r\n    CollectionsServiceBase.delete = collectionId => {\r\n      return $http.delete('/api/collections/' + collectionId);\r\n    };\r\n\r\n    return CollectionsServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class CollectionsCtrl {\r\n    constructor(CollectionsService, WordsService, $timeout, user, $q) {\r\n\r\n      let vm = this;\r\n\r\n      // config ///////////////////////////////////////////////////////////////////////////\r\n      \r\n      vm.formData = {};\r\n      vm.placeholder = {\r\n        collectionTitle: 'Enter Collection name here'\r\n      };\r\n      vm.btnState = {\r\n        loading: false,\r\n        success: false\r\n      };\r\n      vm.user = user;\r\n      vm.checks = {};\r\n      vm.showEdit = false;\r\n      vm.notification = {\r\n        success: false,\r\n        error: false\r\n      };\r\n      vm.msg = {\r\n        success: 'Success!',\r\n        error: 'Something went wrong - please try again.',\r\n        mergeError: 'Please select two or more collections.',\r\n        noneSelectedError: 'Please select one or more collections.'\r\n      };\r\n      vm.showModal = false;\r\n\r\n      // init /////////////////////////////////////////////////////////////////////////////\r\n      \r\n      getAllCollections(user);\r\n\r\n      // helper functions //////////////////////////////////////////////////////////////////\r\n      \r\n      function getAllCollections (user) {\r\n        CollectionsService.getAll(user.id)\r\n          .then(res => {\r\n            vm.collectionList = angular.fromJson(res).data;\r\n\r\n            // intiialize checks to all false\r\n            vm.checks = initChecks(vm.collectionList);\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      }\r\n\r\n      function mergeCollections (collectionIds) {\r\n        let mainCollectionId = collectionIds[0];\r\n        let remainingCollectionIds = collectionIds.filter(collectionId => {\r\n          return collectionId !== mainCollectionId;\r\n        });\r\n\r\n        let promises = [];\r\n\r\n        remainingCollectionIds.forEach(collectionId => {\r\n          promises.push(CollectionsService.merge(collectionId, { newCollectionId: mainCollectionId }));\r\n        });\r\n\r\n        return $q.all(promises);\r\n      }\r\n\r\n      function deleteCollections (collectionIds) {\r\n        let promises = [];\r\n\r\n        collectionIds.forEach(collectionId => {\r\n          promises.push(CollectionsService.delete(collectionId));\r\n        });\r\n\r\n        return $q.all(promises);\r\n      }\r\n\r\n      function initChecks(collections) {\r\n        let checks = {};\r\n\r\n        collections.forEach(collection => {\r\n          checks[collection.id] = false;\r\n        });\r\n\r\n        return checks;\r\n      }\r\n\r\n      function resetForm () {\r\n        vm.addCollectionForm.collectionTitle.$touched = false;\r\n        vm.addCollectionForm.$submitted = false;\r\n        vm.formData = {};\r\n      }\r\n\r\n      // main /////////////////////////////////////////////////////////////////////////////\r\n      \r\n      vm.toggleEdit = () => {\r\n        vm.showEdit = !vm.showEdit;\r\n      };\r\n\r\n      vm.toggleSuccessNotification = (successMessage) => {\r\n        vm.notification.success = true;\r\n        vm.notificationSuccessMsg = successMessage;\r\n      };\r\n\r\n      vm.toggleErrorNotification = (errorMessage) => {\r\n        vm.notification.error = true;\r\n        vm.notificationErrorMsg = errorMessage;\r\n      };\r\n\r\n      vm.createCollection = (isValid, collection) => {\r\n        if (!isValid) { return; }\r\n\r\n        vm.btnState.loading = true;\r\n\r\n        CollectionsService.create(collection)\r\n          .then(() => {\r\n            vm.btnState.loading = false;\r\n            vm.btnState.success = true;\r\n            getAllCollections(user);\r\n            resetForm();\r\n\r\n            $timeout(() => {\r\n              vm.btnState.success = false;\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            vm.btnState.loading = false;\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      };\r\n\r\n      vm.mergeCollections = (collections, checks) => {\r\n\r\n        let mergeList = [];\r\n\r\n        collections.forEach((collection) => {\r\n          if (checks[collection.id] === true) {\r\n            mergeList.push(collection.id);\r\n          }\r\n        });\r\n\r\n        if (mergeList.length >= 2) {\r\n          mergeCollections(mergeList)\r\n            .then(() => {\r\n              vm.toggleSuccessNotification(vm.msg.success);\r\n              getAllCollections(user);\r\n            })\r\n            .catch(err => {\r\n              vm.toggleErrorNotification(vm.msg.error);\r\n              console.log('Something went wrong: ', err);\r\n            });\r\n        } else {\r\n          vm.toggleErrorNotification(vm.msg.mergeError);\r\n        }\r\n\r\n      };\r\n\r\n      vm.deleteCollections = (collections, checks) => {\r\n\r\n        let deleteList = [];\r\n\r\n        collections.forEach((collection) => {\r\n          if (checks[collection.id] === true) {\r\n            deleteList.push(collection.id);\r\n          }\r\n        });\r\n\r\n        if (deleteList.length >= 1) {\r\n          deleteCollections(deleteList)\r\n            .then(() => {\r\n              vm.toggleSuccessNotification(vm.msg.success);\r\n              getAllCollections(user);\r\n            })\r\n            .catch(err => {\r\n              vm.toggleErrorNotification(vm.msg.error);\r\n              console.log('Something went wrong: ', err);\r\n            });\r\n        } else {\r\n          vm.toggleErrorNotification(vm.msg.noneSelectedError);\r\n        }\r\n\r\n      };\r\n\r\n      vm.showConfirmDeleteModal = (collections, checks) => {\r\n        let deleteList = [];\r\n\r\n        collections.forEach((collection) => {\r\n          if (checks[collection.id] === true) {\r\n            deleteList.push(collection.id);\r\n          }\r\n        });\r\n\r\n        if (deleteList.length >= 1) {\r\n          vm.showModal = true;\r\n        } else {\r\n          vm.toggleErrorNotification(vm.msg.noneSelectedError);\r\n        }\r\n      };\r\n\r\n      vm.confirmModal = () => {\r\n        vm.deleteCollections(vm.collectionList, vm.checks);\r\n      };\r\n\r\n      vm.closeModal = () => {\r\n        vm.showModal = false;\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:CollectionsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('CollectionsCtrl', CollectionsCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class AddWordsCtrl {\r\n    constructor(ConfigService, DictionaryService, WordsService, $stateParams, $timeout, $moment) {\r\n\r\n      let vm = this;\r\n\r\n      // config //////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.formData = {};\r\n      vm.placeholder = {\r\n        word: 'i.e. audacious',\r\n        definition: 'i.e. Fearlessly, often recklessly daring; bold. See Synonyms at adventurous, brave.'\r\n      };\r\n      vm.btnState = {\r\n        loading: false,\r\n        success: false\r\n      };\r\n      let collectionId = $stateParams.collectionId;\r\n\r\n      // helper functions /////////////////////////////////////////////////////////////////\r\n\r\n      function addWord (word) {\r\n        vm.btnState.loading = true;\r\n\r\n        vm.definitions = []; // reset definition list\r\n\r\n        WordsService.create(word)\r\n          .then(() => {\r\n            vm.btnState.loading = false;\r\n            vm.btnState.success = true;\r\n            $timeout(() => {\r\n              vm.btnState.success = false;\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            vm.btnState.loading = false;\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      }\r\n\r\n      function getPronunciation (forvoKey, word) {\r\n        if (word !== undefined) {\r\n          return DictionaryService.getPronunciation(forvoKey, word);\r\n        }\r\n      }\r\n\r\n      function resetForm () {\r\n        vm.addWordForm.word.$touched = false;\r\n        vm.addWordForm.definition.$touched = false;\r\n        vm.addWordForm.$submitted = false;\r\n        vm.formData = {};\r\n      }\r\n\r\n      // main /////////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.getDefinition = word => {\r\n        if (word !== undefined) {\r\n          DictionaryService.getDefinition(ConfigService.mashapeKey, word)\r\n            .then(res => {\r\n              vm.definitions = res.data.definitions;\r\n            })\r\n            .catch(err => {\r\n              console.log('Something went wrong; ', err);\r\n            });\r\n        }\r\n      };\r\n\r\n      vm.addWord = (isValid, formData) => {\r\n        if (!isValid) { return; }\r\n        \r\n        getPronunciation(ConfigService.forvoKey, formData.word)\r\n          .then(res => {\r\n            let pronunciationData = angular.fromJson(res).data;\r\n            let pronunciationPath = pronunciationData.attributes.total !== 0 ? pronunciationData.items[0].pathmp3 : null;\r\n\r\n            let lastReviewed = $moment();\r\n            let lastReviewedEpochTime = lastReviewed.unix();\r\n            let nextReview = $moment().add(1, 'minutes');\r\n            let nextReviewEpochTime = nextReview.unix();\r\n\r\n            let word = {\r\n              word: formData.word,\r\n              definition: formData.definition,\r\n              collectionId: collectionId,\r\n              lastReviewedEpochTime: lastReviewedEpochTime,\r\n              interval: 1,\r\n              nextReviewEpochTime: nextReviewEpochTime,\r\n              phase: 'learning',\r\n              pronunciationPath: pronunciationPath,\r\n              reviewRes: {\r\n                again: 0,\r\n                hard: 0,\r\n                good: 0,\r\n                easy: 0\r\n              },\r\n              easeFactor: 2.5\r\n            };\r\n\r\n            addWord(word);\r\n            \r\n            resetForm();\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong; ', err);\r\n          });\r\n\r\n      };\r\n\r\n      vm.copyDefinition = definition => {\r\n        vm.formData.definition = definition;\r\n      };\r\n\r\n      vm.resetForm = () => {\r\n        resetForm();\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:AddWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('AddWordsCtrl', AddWordsCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name home\n   * @description\n   *\n   */\n  angular\n    .module('home', [\n      'ui.router'\n    ]);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class NavHomeCtrl {\r\n    constructor(AuthService, $window) {\r\n\r\n      let vm = this;\r\n\r\n      // config //////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.user = false;\r\n\r\n      vm.setActive = page => {\r\n        vm.active = page;\r\n      };\r\n\r\n      // init ////////////////////////////////////////////////////////////////////////////\r\n      \r\n      AuthService.isLoggedIn()\r\n        .then(user => {\r\n          if (user.data !== false) {\r\n            vm.user = true;\r\n            $window.location = '/#/main-app/collections';\r\n          } \r\n\r\n          console.log('Logged in?', vm.user);\r\n        })\r\n        .catch(err => {\r\n          console.log('Something went wrong: ', err);\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:NavHomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('home')\r\n    .controller('NavHomeCtrl', NavHomeCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  angular\n    .module('home')\n    .config(config);\n\n  function config($stateProvider) {\n    $stateProvider\n      .state('root', {\n        abstract: true,\n        views: {\n          '': {\n            templateUrl: 'home/root.tpl.html',\n          },\n          'nav-home@root': {\n            templateUrl: 'home/nav-home.tpl.html',\n            controller: 'NavHomeCtrl',\n            controllerAs: 'navHome'\n          }\n        }\n      })\n      .state('root.home', {\n        url: '/home',\n        templateUrl: 'home/home.tpl.html',\n        controller: 'HomeCtrl',\n        controllerAs: 'home'\n      });\n  }\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class HomeCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'HomeCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:HomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('home')\r\n    .controller('HomeCtrl', HomeCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name common\n   * @description\n   *\n   */\n  angular\n    .module('common', []);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:spinner\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <example module=\"common\">\r\n       <file name=\"index.html\">\r\n        <spinner></spinner>\r\n       </file>\r\n     </example>\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .directive('spinner', spinner);\r\n\r\n  function spinner() {\r\n    return {\r\n      restrict: 'EA',\r\n      scope: {},\r\n      templateUrl: 'common/spinner-directive.tpl.html',\r\n      replace: true,\r\n      link(scope, element, attrs) {\r\n        /*jshint unused:false */\r\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\r\n        scope.width = attrs.width;\r\n      }\r\n    };\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:Sm2Service\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .factory('Sm2Service', Sm2Service);\r\n\r\n  function Sm2Service($moment) {\r\n    let Sm2ServiceBase = {};\r\n\r\n    /*    \r\n      SM2 (Super Memo 2) Algorithm\r\n\r\n      Learning phase: 1min / 10min\r\n      Review phase default: 4 days\r\n      I(n) = I(n-1) * EF\r\n      Minimum EF: 1.3\r\n\r\n      Review response:\r\n      Again: reset phase to learning + -20% to EF\r\n      Hard: -15% to EF\r\n      Good: do nothing\r\n      Easy: +15% to EF\r\n    */\r\n   \r\n    // main //////////////////////////////////////////////////////////////////////////////\r\n\r\n    // calcEaseFactor :: Float -> String -> Float\r\n    Sm2ServiceBase.calcEaseFactor = (easeFactor, choice) => {\r\n      let oldEaseFactor = easeFactor;\r\n      let newEaseFactor;\r\n      let minEaseFactor = 1.3;\r\n\r\n      switch (choice) {\r\n        case 'again':\r\n          newEaseFactor = oldEaseFactor - 0.2;\r\n          newEaseFactor = newEaseFactor < minEaseFactor ? minEaseFactor : newEaseFactor;\r\n          break;\r\n        case 'hard':\r\n          newEaseFactor = oldEaseFactor - 0.15;\r\n          newEaseFactor = newEaseFactor < minEaseFactor ? minEaseFactor : newEaseFactor;\r\n          break;\r\n        case 'good':\r\n          newEaseFactor = oldEaseFactor;\r\n          break;\r\n        case 'easy':\r\n          newEaseFactor = oldEaseFactor + 0.15;\r\n          break;\r\n      }\r\n\r\n      return newEaseFactor;\r\n    };\r\n\r\n    // calcPhase :: String -> Integer -> String -> String\r\n    Sm2ServiceBase.calcPhase = (phase, interval, choice) => {\r\n      if (choice === 'again') {\r\n        return 'learning';\r\n      }\r\n\r\n      if (phase === 'learning') {\r\n        if  (interval === 1) {\r\n          return 'learning';\r\n        } else if (interval === 10) {\r\n          return 'review';\r\n        }\r\n      }\r\n\r\n      if (phase === 'review') {\r\n        return 'review';\r\n      }\r\n    };\r\n\r\n    // calcInterval :: String -> Integer -> Float -> String -> Integer\r\n    // note: interval is in minutes\r\n    Sm2ServiceBase.calcInterval = (phase, interval, easeFactor, choice) => {\r\n      if (choice === 'again') {\r\n        return 1;\r\n      }\r\n\r\n      if (phase === 'learning') {\r\n        switch (interval) {\r\n          case 1:\r\n            return 10;\r\n          case 10:\r\n            return 4 * 24 * 60;\r\n        }\r\n      } else if (phase === 'review') {\r\n        return interval * easeFactor;\r\n      }\r\n    };\r\n\r\n    Sm2ServiceBase.calcNextReview = (newInterval) => {\r\n      return $moment().add(newInterval, 'minutes');\r\n    };\r\n\r\n    return Sm2ServiceBase;\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:notification\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <notification show=\"collections.showNotification\" color=\"green\">Some message</notification>\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .directive('notification', notification);\r\n\r\n  function notification($timeout) {\r\n    return {\r\n      restrict: 'EA',\r\n      scope: {\r\n        show: '=',\r\n        color: '@'\r\n      },\r\n      templateUrl: 'common/notification-directive.tpl.html',\r\n      transclude: true,\r\n      replace: false,\r\n      link(scope, element, attrs) {\r\n        /*jshint unused:false */\r\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\r\n        scope.$watch('show', function () {\r\n          $timeout(() => {\r\n            scope.show = false;\r\n          }, 2500);\r\n        });\r\n      }\r\n    };\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:modal\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <modal show=\"collections.showModal\" \r\n            modal-bg=\"bg-red\" \r\n            yes-cb=\"collections.confirmModal()\" \r\n            no-cb=\"collections.closeModal()\" \r\n            yes-message=\"Yes, delete\" \r\n            no-message=\"No, abort\">\r\n     </modal>\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .directive('modal', modal);\r\n\r\n  function modal() {\r\n    return {\r\n      restrict: 'EA',\r\n      scope: {\r\n        show: '=',\r\n        yesCb: '&?',\r\n        noCb: '&?'\r\n      },\r\n      templateUrl: 'common/modal-directive.tpl.html',\r\n      replace: false,\r\n      transclude: true,\r\n      link(scope, element, attrs) {\r\n        /*jshint unused:false */\r\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\r\n        scope.modalBg = attrs.modalBg || '';\r\n        scope.yesMessage = attrs.yesMessage || 'Yes';\r\n        scope.noMessage = attrs.noMessage || 'No';\r\n\r\n        if (scope.yesCb !== undefined && scope.noCb !== undefined) {\r\n          scope.showButtons = true;\r\n        } else {\r\n          scope.showButtons = false;\r\n        }\r\n      }\r\n    };\r\n  }\r\n}());\r\n","(() => {\n  'use strict';\n\n  /**\n   * @ngdoc service\n   * @name common.factory:ImportService\n   *\n   * @description\n   *\n   */\n  angular\n    .module('common')\n    .factory('ImportService', ImportService);\n\n  function ImportService($http) {\n    let ImportServiceBase = {};\n\n    // anki :: String -> { collectionTitle, [files] } -> {dbRes}\n    ImportServiceBase.anki = (userId, data) => {\n      return $http.post('/api/import/anki/' + userId, data);\n    };\n\n    return ImportServiceBase;\n  }\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:fileread\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <example module=\"common\">\r\n       <file name=\"index.html\">\r\n        <fileread></fileread>\r\n       </file>\r\n     </example>\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .directive('fileread', fileread);\r\n\r\n  function fileread() {\r\n    return {\r\n      restrict: 'A',\r\n      scope: {\r\n        fileread: '='\r\n      },\r\n      replace: false,\r\n      link(scope, element, attrs) {\r\n        /*jshint unused:false */\r\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\r\n\r\n        element.bind(\"change\", function (changeEvent) {\r\n          scope.fileread = [];\r\n          var files = changeEvent.target.files;\r\n\r\n          for (let i = 0, f; f = files[i]; i++) {\r\n            var reader = new FileReader();\r\n\r\n            reader.onload = (function (file) {\r\n              return function (loadEvent) {\r\n                scope.$apply(function () {\r\n                  scope.fileread.push({ name: file.name, content: loadEvent.target.result });\r\n                });\r\n              };\r\n            })(f);\r\n\r\n            reader.readAsText(f);\r\n          }\r\n        });      \r\n      }\r\n    };\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:DictionaryService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .factory('DictionaryService', DictionaryService);\r\n\r\n  function DictionaryService($http) {\r\n\r\n    let DictionaryServiceBase = {};\r\n    \r\n    DictionaryServiceBase.getDefinition = (mashapeKey, word) => {\r\n      return $http.get('https://montanaflynn-dictionary.p.mashape.com/define?word=' + word, {\r\n        headers: { 'X-Mashape-Key': mashapeKey }\r\n      });\r\n    };\r\n\r\n    DictionaryServiceBase.getPronunciation = (forvoKey, word) => {\r\n      return $http.jsonp('http://apifree.forvo.com/action/word-pronunciations/format/json/word/' + word + '/language/en/order/rate-desc/limit/1/key/' + forvoKey + '?callback=JSON_CALLBACK');\r\n    };\r\n    \r\n    return DictionaryServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:ConfigService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .factory('ConfigService', ConfigService);\r\n\r\n  function ConfigService() {\r\n\r\n    let ConfigServiceBase = {};\r\n    \r\n    ConfigServiceBase.mashapeKey = 'S4DvXSr43Cmsh5Kww0kOuX9QxNbXp1hjhkYjsn84TFraf8SlG3';\r\n    ConfigServiceBase.forvoKey = 'f850390038cd293954cb5bdf7dc36d8a';\r\n    \r\n    return ConfigServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name auth\n   * @description\n   *\n   */\n  angular\n    .module('auth', [\n      'ui.router'\n    ]);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class RegisterCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'RegisterCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:RegisterCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('auth')\r\n    .controller('RegisterCtrl', RegisterCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class LoginCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'LoginCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:LoginCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('auth')\r\n    .controller('LoginCtrl', LoginCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name auth.factory:AuthService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('auth')\r\n    .factory('AuthService', AuthService);\r\n\r\n  function AuthService(ConfigService, $http, $q, $window) {\r\n\r\n    let AuthServiceBase = {};\r\n\r\n    // only check login status\r\n    // used in nav\r\n    AuthServiceBase.isLoggedIn = () => {\r\n      return $http.get('/auth/loggedin');\r\n    };\r\n\r\n    // check login status and redirect if not logged in\r\n    // used for route resolve for protected paths\r\n    AuthServiceBase.checkLoggedIn = () => {\r\n\r\n      var deferred = $q.defer();\r\n\r\n      $http.get('/auth/loggedin')\r\n        .then(user => {\r\n          var user = angular.fromJson(user).data;\r\n          if (user !== false) {\r\n            deferred.resolve(user);\r\n          } else {\r\n            deferred.reject();\r\n            $window.location = '/#/login';\r\n          }\r\n        })\r\n        .catch(err => {\r\n          deferred.reject();\r\n          $window.location = '/#/';\r\n          console.log('Something went wrong: ', err);\r\n        });\r\n\r\n      return deferred.promise;\r\n      \r\n    };\r\n\r\n    AuthServiceBase.logout = () => {\r\n      return $http.get('/auth/logout');\r\n    };\r\n    \r\n    return AuthServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\n  'use strict';\n\n  angular\n    .module('auth')\n    .config(config);\n\n  function config($stateProvider) {\n    $stateProvider\n      .state('root.auth', {\n        abstract: true,\n        views: {\n          '': {\n            templateUrl: 'auth/auth.tpl.html'\n          }\n        }\n      })\n      .state('root.auth.login', {\n        url: '/login',\n        templateUrl: 'auth/login.tpl.html',\n        controller: 'LoginCtrl',\n        controllerAs: 'login'\n      })\n      .state('root.auth.register', {\n        url: '/register',\n        templateUrl: 'auth/register.tpl.html',\n        controller: 'RegisterCtrl',\n        controllerAs: 'register'\n      })\n      .state('root.auth.logout', {\n        url: '/logout',\n        templateUrl: 'auth/logout.tpl.html',\n        controller: 'LogoutCtrl',\n        controllerAs: 'logout'\n      });\n  }\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('bigvocab')\r\n    .config(config);\r\n\r\n  function config($urlRouterProvider) {\r\n    $urlRouterProvider.otherwise('/home');\r\n  }\r\n}());\r\n"],"sourceRoot":"/source/"}