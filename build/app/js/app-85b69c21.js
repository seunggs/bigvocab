"use strict";function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}function _classCallCheck(n,t){if(!(n instanceof t))throw new TypeError("Cannot call a class as a function")}!function(){angular.module("bigvocab",["ngAria","ngAnimate","ngMessages","ui.router","720kb.tooltips","ngAudio","angular-momentjs","angularUtils.directives.dirPagination","home","auth","mainApp","common"])}(),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/top-menu.tpl.html",'<div class="p2">\n	<form name="topMenu.topMenuForm" ng-submit="topMenu.submitSearch(topMenu.topMenuForm.$valid, topMenu.formData.searchString)">\n		<input type="text" name="search" ng-model="topMenu.formData.searchString" class="field field-search col-8 sm-col-6 md-col-4 lg-col-3 col-right">\n		\n		<!-- hidden button -->\n		<button type="submit" style="visibility: hidden"></button>\n		<!-- end: hidden button -->\n	</form>\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/test-words.tpl.html",'<div class="container">\n	<div class="clearfix center">\n\n		<h1 class="mt1 mb3">Test Time!</h1>\n\n		<div class="mb2 bold"><span class="gray">Today\'s Quota:</span> 78 <span class="gray">/ 123 words left</span></div>\n\n		<div class="md-col-4 sm-col-6 mx-auto px2">\n			<div class="h2 px2 py4 bg-white rounded">Hello</div>\n		</div>\n\n		<div class="md-col-4 sm-col-6 mx-auto px2">\n			<div class="clearfix mxn1">\n				<div class="col col-6 px1">\n					<a class="btn mt2 bg-red block white">Not sure<span class="ti-close ml1"></span></a>\n				</div>\n				<div class="col col-6 px1">\n					<a class="btn mt2 bg-green block white">Easy<span class="ti-check ml1"></span></a>\n				</div>\n			</div>\n		</div>\n\n	</div>\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/sidebar.tpl.html",'<!--/////////// DESKTOP ONLY ///////////-->\n<div class="sm-show" style="margin-right: 63px;">\n\n	<div class="bg-navy fixed white z1" style="height: 100vh;">\n		<div class="flex flex-column flex-center py3">\n			\n			<a ui-sref="mainApp.collections"><img class="mb2" src="../images/logo/bigvocab-logo-color.svg" width="56px"></a>\n			<a ui-sref="{{ navItem.link }}" tooltips title="{{ navItem.title }}" tooltip-placement="right" class="btn btn-icon h2 center p2" ng-repeat="navItem in sidebar.navItems | orderBy:\'id\'" tabindex="-1">\n				<span class="{{ navItem.icon }}"></span>\n			</a>\n\n		</div>\n	</div>\n\n</div>\n<!--/////////// end: DESKTOP ONLY ///////////-->\n\n<!--/////////// MOBILE ONLY ///////////-->\n<div class="sm-hide">\n\n	<!-- toggle button background -->\n	<div class="fixed z2" style="background-color: rgba(255,255,255,0.93); width: 58px; height:58px;"></div>\n	<!-- toggle button background -->\n\n	<!-- toggle button -->\n	<div class="fixed z3">\n		<a ng-click="sidebar.toggleSidebar()" class="btn btn-icon p2 h3" ng-class="{\'black\': sidebar.toggle === false, \'white\': sidebar.toggle === true}"><span class="ti-menu"></span></a>\n	</div>\n	<!-- end: toggle button -->\n\n	<!-- menu items -->\n	<div class="bg-navy fixed white z2 translateX-n-100 transition-all-300" ng-class="{\'translateX-n-100\': sidebar.toggle === false, \'translateX-0\': sidebar.toggle === true }" style="height: 100vh;">\n		<div class="flex flex-column py2 mt4">\n			\n			<div style="margin-left:20px"><img class="mb2" src="../images/logo/bigvocab-logo-color.svg" width="56px"></div>\n			<a ui-sref="{{ navItem.link }}" ng-click="sidebar.toggleSidebar();" class="btn btn-icon py2 px3 flex flex-center" ng-repeat="navItem in sidebar.navItems | orderBy:\'id\'" tabindex="-1">\n				<div class="{{ navItem.icon }} h3 mr2"></div>\n				<div class="h5">{{ navItem.title }}</div>\n			</a>\n\n		</div>\n	</div>\n	<!-- end: menu items -->\n\n</div>\n<!--/////////// end: MOBILE ONLY ///////////-->\n')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/settings.tpl.html",'<div class="container">\n	<div class="clearfix">\n\n		<div class="sm-col-8 md-col-4 mx-auto center px2">\n	\n			<h1 class="mt1 mb2">Settings</h1>\n\n			<form name="settings.settingsForm" \n						ng-submit="settings.saveSettings(settings.formData.maxDailyWords)"\n						novalidate>\n\n				<div class="mb1 bold">Max # of study words per day</div>\n				<input name="maxDailyWords" type="number" ng-model="settings.formData.maxDailyWords" class="field col-12" placeholder="{{ settings.placeholder.maxDailyWords }}" autofocus>\n\n				<button type="submit"\n								class="btn btn-primary col-12 mt2"\n								ng-disabled="settings.btnState.success || settings.btnState.loading">\n						<span ng-if="!settings.btnState.loading && !settings.btnState.success">Save Changes</span>\n						<span ng-if="settings.btnState.loading"><spinner width="16px"></spinner>Please wait...</span>\n						<span ng-if="settings.btnState.success"><span class="ti-check mr1"></span>Success!</span>\n				</button>\n\n			</form>\n\n		</div>\n\n	</div>\n</div>\n\n<!-- notification -->\n<notification color="green" show="settings.notification.success"><span class="ti-check mr1"></span>{{ settings.notificationSuccessMsg }}</notification>\n<notification color="red" show="settings.notification.error"><span class="ti-alert mr1"></span>{{ settings.notificationErrorMsg }}</notification>\n<!-- end: notification -->\n\n')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/review-words.tpl.html",'<div class="container">\n	<div class="clearfix center">\n\n		<h1 class="mt1 mb3">Study Time!</h1>\n\n		<div class="sm-col-6 mx-auto px2">\n			<div class="flex flex-justify">\n				<div class="mb2 bold">\n					<span class="gray">Today\'s Quota:</span> {{ reviewWords.totalWordsCount - reviewWords.wordCounter }} <span class="gray">/ {{ reviewWords.totalWordsCount }} words left</span>\n				</div>\n				<div>\n					<a ng-click="reviewWords.toggleEdit()" ng-if="!reviewWords.finished" class="h5 gray underline">Edit</a>\n				</div>\n			</div>\n		</div>\n\n		<!-- edit word -->\n		<div class="sm-col-6 mx-auto px2 bg-lighten-3 rounded py2 mb2 ng-animation-fadeInDown" ng-if="reviewWords.editToggle && !reviewWords.finished">\n			<form>\n\n				<div class="col-12 flex mb1">\n					<input type="text" name="editWord" ng-model="reviewWords.formData.word" class="field flex-auto mr1" required>\n					<button class="btn btn-form btn-red-outline" ng-click="reviewWords.submitDelete(reviewWords.currentWord.id)"><span class="ti-trash"></span></button>\n				</div>\n\n				<textarea name="editDefinition" ng-model="reviewWords.formData.definition" class="field col-12" style="height: 80px;"></textarea>\n\n				<button ng-click="reviewWords.submitEdit(reviewWords.currentWord.id, reviewWords.formData.word, reviewWords.formData.definition)" class="btn btn-green btn-form col-12 mt1">Save Changes</button>\n\n			</form>\n		</div>\n		<!-- end: edit word -->\n\n		<div class="sm-col-6 mx-auto px2">\n			<div class="p3 bg-white rounded flex flex-column flex-center-justified" style="min-height: 184px">\n\n				<!-- word -->\n				<div ng-if="reviewWords.showWord" class="h2 mb1">{{ reviewWords.currentWord.word }}</div>\n				<!-- end: word -->\n\n				<div ng-if="reviewWords.showAnswer">\n					<!-- definition -->\n					<div class="h4 dark-gray" style="white-space: pre-wrap;">{{ reviewWords.currentWord.definition }}</div>\n					<!-- end: definition -->\n\n					<!-- pronunciation -->\n					<div ng-if="reviewWords.pronunciations !== [ ] && !reviewWords.finished" \n							 class="mt2 mx-auto">\n						<button ng-repeat="pronunciation in reviewWords.pronunciations" \n										ng-click="reviewWords.playPronunciation(pronunciation)" \n										class="btn btn-blue-outline btn-sm ml1 mr1" style="width: 48px; height: 48px; border-radius: 50%;">\n							<span class="ti-control-play" style="margin-left:4px"></span>\n						</button>\n					</div>\n					<!-- end: pronunciation -->\n				</div>\n\n				<!-- finish message -->\n				<div class="h2 mb1" ng-if="reviewWords.finished">All done for the day!</div>\n				<!-- finish message -->\n\n			</div>\n		</div>\n\n		<!-- show answer button -->\n		<div ng-if="!reviewWords.showAnswer && !reviewWords.finished" class="sm-col-6 mx-auto px2">\n			<button ng-click="reviewWords.revealAnswer()" \n							class="btn btn-primary mt2 col-12">Show Answer</button>\n		</div>\n		<!-- end: show answer button -->\n\n		<!-- review response buttons -->\n		<div ng-if="reviewWords.showAnswer && !reviewWords.finished" class="sm-col-6 mx-auto px2">\n			<div class="clearfix mxn1">\n				<div class="col col-3 px1 red">\n					<button ng-click="reviewWords.submitRes(reviewWords.currentWord, \'again\')" \n									class="btn btn-red mt2 col-12">Again</button>\n					<div class="h6 gray center mt1">Can\'t recall</div>\n				</div>\n				<div class="col col-3 px1 green">\n					<button ng-click="reviewWords.submitRes(reviewWords.currentWord, \'hard\')" \n									class="btn btn-yellow-green mt2 col-12">Hard</button>\n					<div class="h6 gray center mt1">Challenging</div>\n				</div>\n				<div class="col col-3 px1 green">\n					<button ng-click="reviewWords.submitRes(reviewWords.currentWord, \'good\')" \n									class="btn btn-green mt2 col-12">Good</button>\n					<div class="h6 gray center mt1">Just right</div>\n				</div>\n				<div class="col col-3 px1 green">\n					<button ng-click="reviewWords.submitRes(reviewWords.currentWord, \'easy\')" \n									class="btn btn-green mt2 col-12">Easy</button>\n					<div class="h6 gray center mt1">Too easy</div>\n				</div>\n			</div>\n		</div>\n		<!-- end: review response buttons -->\n\n	</div>\n</div>\n\n<!-- notification -->\n<notification color="green" show="reviewWords.notification.success"><span class="ti-check mr1"></span>{{ reviewWords.notificationSuccessMsg }}</notification>\n<notification color="red" show="reviewWords.notification.error"><span class="ti-alert mr1"></span>{{ reviewWords.notificationErrorMsg }}</notification>\n<!-- end: notification -->\n\n<!-- modal -->\n<modal show="reviewWords.showModal" \n	      modal-bg="bg-white" \n	      yes-cb="reviewWords.deleteWord(reviewWords.deleteId)" \n	      no-cb="reviewWords.closeModal()"\n	      yes-message="Yes, delete it"\n	      no-message="No, cancel">\n	<div class="center h3">You already have this word in your collection. Are you sure you want to overwrite the existing word?</div>\n</modal>\n<!-- end: modal -->')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/main-app.tpl.html",'<div class="flex">\n	<div ui-view="sidebar"></div>\n	<div class="flex-auto flex flex-column bg-darken-1">\n		<div ui-view="top-menu"></div>\n		<div ui-view class="py3" style="min-height: 100vh"></div>\n	</div>\n</div>\n')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/logout.tpl.html",'<div class="container">\n	<div class="clearfix">\n\n		<div class="sm-col-10 md-col-6 mx-auto center px2">\n	\n			<h1 class="mt1 mb2">Log Out</h1>\n\n			<div class="mb3 h4">Are you sure you want to sign out from Big Vocab?</div>\n\n			<button class="btn btn-blue-outline" ng-click="logout.logout()">Yes, log me out</button>&nbsp;&nbsp;\n			<button class="btn btn-primary" ng-click="logout.goBack()">No, send me back</button>\n\n		</div>\n\n	</div>\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/list-words.tpl.html",'<div class="container">\n	<div class="clearfix">\n\n		<h1 class="mt1 mb2 center">List of All Words</h1>\n\n		<!-- search words form -->\n		<div class="sm-col-6 mx-auto px2">\n			\n			<form name="listWords.listWordsForm" class="center">\n				<span class="center bold gray">Total word count: {{ listWords.wordsCount }}</span>\n				<input name="searchWords" id="searchWords" type="text" ng-model="listWords.formData.searchWords" class="field col-12 mt1 mb3" placeholder="Search any word or definition">\n			</form>\n\n		</div>\n		<!-- end: search words form -->\n\n		<!-- update all words with pronunciations -->\n		<div class="clearfix">\n			<div class="sm-col-10 mx-auto">\n				<button class="btn btn-sm btn-primary mb1 h6 right" \n								ng-click="listWords.addAllPronunciations(listWords.words)"\n								ng-disabled="listWords.pronunciationBtnState.success || listWords.pronunciationBtnState.loading">\n					<span ng-if="!listWords.pronunciationBtnState.loading && !listWords.pronunciationBtnState.success">Update All Pronunciations</span>\n					<span ng-if="listWords.pronunciationBtnState.loading"><spinner width="12px"></spinner>Please wait...</span>\n					<span ng-if="listWords.pronunciationBtnState.success"><span class="ti-check mr1"></span>Success!</span>\n				</button>\n			</div>\n		</div>\n		<!-- end: update all words with pronunciations -->\n\n		<!-- list of words -->\n		<div class="clearfix sm-col-10 mx-auto bg-lighten-2 rounded mb2">\n			\n			<div dir-paginate="word in listWords.words | filter: listWords.formData.searchWords | orderBy: \'word\' | itemsPerPage: 50" class="clearfix col col-12 p2" ng-class="{ \'border-bottom\': !$last }" track by word.id>\n				<form name="listWords.listWordsForm" ng-submit="listWords.saveChanges(listWords.listWordsForm.$valid, word, listWords.formData)">\n\n					<!-- word -->\n					<div class="sm-col sm-col-3 flex flex-center">\n\n						<!-- pronunciation -->\n						<a ng-click="listWords.playPronunciation(word)" \n							 ng-if="!listWords.showEdit[word.id] && word.pronunciations !== [ ] && word.pronunciations !== undefined"  \n							 class="btn btn-blue-outline mr2 center" style="padding: 0.3em 0.24em; border-radius: 50%; width: 22px;">\n							<span class="ti-control-play" style="margin-left:4px"></span>\n						</a>\n\n						<div ng-if="!listWords.showEdit[word.id] && (word.pronunciations === [ ] || word.pronunciations === undefined)" \n								 class="inline mr2" style="width: 32px">&nbsp;</div>\n						<!-- end: pronunciation -->\n\n						<a ng-click="listWords.toggleEdit(word)" class="link bold" ng-if="!listWords.showEdit[word.id]">{{ word.word }}</a>\n\n						<!-- edit form -->\n						<a ng-if="listWords.showEdit[word.id]" class="ti-close mr1" ng-click="listWords.toggleEdit(word)"></a>\n						<input name="word" \n									 type="text" \n									 ng-model="listWords.formData.word" \n									 ng-if="listWords.showEdit[word.id]" \n									 class="field flex-auto mr1" \n									 placeholder="{{ listWords.placeholder.word }}" \n									 autofocus required>\n						<!-- end: edit form -->\n	\n						<!-- error handling -->\n						<div ng-messages="listWords.listWordsForm.word.$error" \n								 ng-if="listWords.listWordsForm.$submitted && listWords.listWordsForm.word.$touched" \n								 class="red bold h6 mt1">\n							<div ng-message="required"><span class="ti-alert mr1"></span>This field is required</div>\n						</div>\n						<!-- end: error handling -->\n\n					</div>\n					<!-- word -->\n\n					<!-- definition -->\n					<div class="sm-col sm-col-9 dark-gray flex flex-start flex-wrap">\n\n						<div class="flex flex-center flex-justify col-12">\n							<span ng-if="!listWords.showEdit[word.id]" class="flex-auto" style="white-space: pre-wrap;">{{ word.definition }}</span>\n							<!-- delete button -->\n							<a ng-click="listWords.submitDelete(word.id)"\n								 ng-disabled="listWords.btnState.success || listWords.btnState.loading"\n								 ng-if="!listWords.showEdit[word.id]" \n								 class="ti-trash red inline-block ml2">\n							</a>\n							<!-- end: delete button -->\n						</div>\n\n						<!-- edit form -->\n						<textarea name="definition" \n											ng-model="listWords.formData.definition" \n											ng-if="listWords.showEdit[word.id]" \n											class="field flex-auto" \n											style="height: 96px;" \n											placeholder="{{ listWords.placeholder.definition }}">\n						</textarea>\n						<div class="sm-col-4 flex flex-wrap">\n							<!-- save button -->\n							<button type="submit" \n											ng-if="listWords.showEdit[word.id]" \n											ng-disabled="listWords.btnState.success || listWords.btnState.loading"\n											class="btn btn-form btn-primary col-12 ml1">\n								<span ng-if="!listWords.btnState.loading && !listWords.btnState.success">Save Changes</span>\n								<span ng-if="listWords.btnState.loading"><spinner width="16px"></spinner>Please wait...</span>\n								<span ng-if="listWords.btnState.success"><span class="ti-check mr1"></span>Success!</span>\n							</button>\n							<!-- end: save button -->\n						</div>\n						<!-- end: edit form -->\n\n					</div>\n					<!-- end: definition -->\n\n				</form>\n			</div>\n			\n		</div>\n		<!-- end: list of words -->\n\n		<!-- pagination controls -->\n		<dir-pagination-controls class="h5 mx-auto"></dir-pagination-controls>\n		<!-- end: pagination controls -->\n\n	</div>\n</div>\n\n<!-- notification -->\n<notification color="green" show="listWords.notification.success"><span class="ti-check mr1"></span>{{ listWords.notificationSuccessMsg }}</notification>\n<notification color="red" show="listWords.notification.error"><span class="ti-alert mr1"></span>{{ listWords.notificationErrorMsg }}</notification>\n<!-- end: notification -->\n\n<!-- modal -->\n<modal show="listWords.showModal" \n	      modal-bg="bg-white" \n	      yes-cb="listWords.modalYes(listWords.selectedWordId)" \n	      no-cb="listWords.modalClose()"\n	      yes-message="Yes, delete"\n	      no-message="No, cancel">\n	<div class="center h3">You already have this word in your collection. Are you sure you want to overwrite the existing word?</div>\n</modal>\n<!-- end: modal -->')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/import.tpl.html",'<div class="container">\n	<div class="clearfix">\n\n		<div class="sm-col-10 md-col-6 mx-auto center px2">\n	\n			<h1 class="mt1 mb2">Import from Anki</h1>\n\n			<div class="mb3">If you upload multiple files, it will merge them and input it into a single collection. If you want each text file to have its own collection, upload one file at a time.</div>\n\n			<form name="import.importForm" \n						ng-submit="import.importTextfile(import.importForm.$valid, import.formData)"\n						novalidate>\n\n				<div class="mb1 bold">Title of the collection to be imported</div>\n				<input name="collectionTitle" type="text" ng-model="import.formData.collectionTitle" class="field col-12" placeholder="{{ import.placeholder.collectionTitle }}" autofocus required>\n\n				<!-- error handling -->\n				<div ng-messages="import.importForm.collectionTitle.$error" \n						 ng-if="import.importForm.$submitted && import.importForm.collectionTitle.$touched" \n						 class="red bold h6 mt1">\n					<div ng-message="required"><span class="ti-alert mr1"></span>This field is required</div>\n				</div>\n				<!-- end: error handling -->\n\n				<div class="mt3 mb1 bold">Anki text file (i.e. anki-collection-2015.txt)</div>\n				<div class="file-input">\n					Click here to upload your files<span class="ti-folder ml1">\n					<input name="files" type="file" multiple="multiple" accept=".txt" fileread="import.formData.files" class="field col-12" style="cursor: pointer; margin-bottom: none" placeholder="{{ import.placeholder.files }}" required>\n				</div>\n\n				<!-- file names -->\n				<div class="mt1">\n					<div ng-repeat="file in import.formData.files" track by $index>{{ file.name }}</div>\n				</div>\n				<!-- end: file names -->\n\n				<!-- error handling -->\n				<div ng-messages="import.importForm.files.$error" \n						 ng-if="import.importForm.$submitted" \n						 class="red bold h6 mt1">\n					<div ng-message="required"><span class="ti-alert mr1"></span>This field is required</div>\n				</div>\n				<!-- end: error handling -->\n\n				<!-- submit button -->\n				<button type="submit" class="btn btn-primary mt3 mb2" ng-disabled="import.btnState.success || import.btnState.loading">\n					<span ng-if="!import.btnState.loading && !import.btnState.success">Import Anki Text File<span class="ti-import ml1"></span></span>\n					<span ng-if="import.btnState.loading"><spinner width="16px"></spinner>Please wait...</span>\n					<span ng-if="import.btnState.success"><span class="ti-check mr1"></span>Success!</span>\n				</button>\n				<!-- end: submit button -->\n\n			</form>\n\n		</div>\n\n	</div>\n</div>\n\n<!-- notification -->\n<notification color="green" show="import.notification.success"><span class="ti-check mr1"></span>{{ import.notificationSuccessMsg }}</notification>\n<notification color="red" show="import.notification.error"><span class="ti-alert mr1"></span>{{ import.notificationErrorMsg }}</notification>\n<!-- end: notification -->\n')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/collections.tpl.html",'<div class="clearfix">\n\n	<h1 class="mt1 center">My Collections&nbsp;&nbsp;<a ng-click="collections.toggleEdit()" ng-if="collections.collectionList.length >= 1" class="h5 gray underline">Edit</a></h1>\n\n	<!-- edit collection options -->\n	<div class="md-col-10 lg-col-8 mx-auto px2" ng-if="collections.showEdit">\n		<button class="btn btn-sm btn-yellow-green h6 mb2" ng-click="collections.mergeCollections(collections.collectionList, collections.checks)">Merge Selected</button>\n		<button class="btn btn-sm btn-red h6 ml1 mb2" ng-click="collections.showConfirmDeleteModal(collections.collectionList, collections.checks)">Delete Selected</button>\n	</div>\n	<!-- end: edit collection options -->\n\n	<div class="md-col-10 lg-col-8 mx-auto px2">\n\n		<!-- collection list -->\n		<div class="clearfix bg-white rounded p1 mb2 ng-animation-fadeInUp" ng-repeat="collection in collections.collectionList | orderBy: \'id\'">\n\n			<div class="sm-col sm-col-7">\n				\n				<!-- select collection -->\n				<input type="checkbox" style="margin-left: 8px; margin-right: -16px;" ng-model="collections.checks[collection.id]" ng-if="collections.showEdit">\n				<!-- end: select collection -->\n\n				<div class="btn btn-md bold ml1 mt1 mb1" style="cursor: text">{{ collection.title }} <span class="gray">(due: {{ collection.dueWordCount }}, new: {{ collection.newWordCount }} )</span></div>\n\n			</div>\n\n			<div class="sm-col sm-col-5 flex flex-wrap">\n				<a ui-sref="mainApp.review-words({ collectionId: collection.id })" class="btn btn-md btn-primary flex-auto center m1 h5">Study<span class="ti-arrow-right ml1"></span></a>\n				<a ui-sref="mainApp.add-words({ collectionId: collection.id })" class="btn btn-md btn-blue-outline center dark-gray m1 h5"><span class="ti-plus"></span></a>\n				<a ui-sref="mainApp.list-words" class="btn btn-md btn-blue-outline center dark-gray m1 h5"><span class="ti-list"></span></a>\n			</div>\n\n		</div>\n		<!-- end: collection list -->\n\n		<!-- add collection -->\n		<div class="clearfix bg-light-green px2 py2 mt3 rounded">\n\n			<div class="center">\n				<div class="caps bold m1">Add Collection</div>\n			</div>\n\n			<form name="collections.addCollectionForm" \n						ng-submit="collections.createCollection(collections.addCollectionForm.$valid, { \n							userId: collections.user.id,\n							title: collections.formData.collectionTitle \n						})"\n						novalidate>\n\n				<div class="sm-col sm-col-8 p1">\n					<input name="collectionTitle" type="text" ng-model="collections.formData.collectionTitle" class="field col-12" placeholder="{{ collections.placeholder.collectionTitle }}" required>\n\n					<!-- error handling -->\n					<div ng-messages="collections.addCollectionForm.collectionTitle.$error" \n							 ng-if="collections.addCollectionForm.$submitted && collections.addCollectionForm.collectionTitle.$touched" \n							 class="red bold h6 mt1">\n						<div ng-message="required"><span class="ti-alert mr1"></span>This field is required</div>\n					</div>\n					<!-- end: error handling -->\n				</div>\n\n				<!-- submit button -->\n				<div class="sm-col sm-col-4 p1">\n					<button type="submit" class="btn btn-form btn-green col-12" ng-disabled="collections.btnState.success || collections.btnState.loading">\n						<span ng-if="!collections.btnState.loading && !collections.btnState.success">Add Collection</span>\n						<span ng-if="collections.btnState.loading"><spinner width="16px"></spinner>Please wait...</span>\n						<span ng-if="collections.btnState.success"><span class="ti-check mr1"></span>Success!</span>\n					</button>\n				</div>\n				<!-- end: submit button -->\n\n			</form>\n		</div>\n		<!-- end: add collection -->\n\n	</div>\n\n</div>\n\n<!-- notification -->\n<notification color="green" show="collections.notification.success"><span class="ti-check mr1"></span>{{ collections.notificationSuccessMsg }}</notification>\n<notification color="red" show="collections.notification.error"><span class="ti-alert mr1"></span>{{ collections.notificationErrorMsg }}</notification>\n<!-- end: notification -->\n\n<!-- modal -->\n<modal show="collections.showModal" \n	      modal-bg="bg-white" \n	      yes-cb="collections.confirmModal()" \n	      no-cb="collections.closeModal()" \n	      yes-message="Yes, delete" \n	      no-message="No, abort">\n	<div class="center h3">Are you sure you want to delete the selected collection(s)?</div>\n</modal>\n<!-- end: modal -->')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("main-app/add-words.tpl.html",'<div class="container">\n	<div class="clearfix">\n\n		<h1 class="mt1 mb3 center">Add New Words</h1>\n\n		<!-- add words form -->\n		<div class="md-col md-col-6 px2">\n\n			<form name="addWords.addWordForm" \n						ng-submit="addWords.submit(addWords.addWordForm.$valid, addWords.collectionId, addWords.formData)"\n						novalidate>\n\n				<div class="mb1 bold">WORD</div>\n				<input id="addWords" name="word" type="text" ng-model="addWords.formData.word" ng-blur="addWords.getDefinition(addWords.formData.word)" class="field col-12" placeholder="{{ addWords.placeholder.word }}" autofocus required>\n\n				<!-- error handling -->\n				<div ng-messages="addWords.addWordForm.word.$error" \n						 ng-if="addWords.addWordForm.$submitted && addWords.addWordForm.word.$touched" \n						 class="red bold h6 mt1">\n					<div ng-message="required"><span class="ti-alert mr1"></span>This field is required</div>\n				</div>\n				<!-- end: error handling -->\n\n				<div class="mb1 mt2 bold">MEANING</div>\n				<textarea name="definition" ng-model="addWords.formData.definition" class="field col-12" style="height: 160px;" placeholder="{{ addWords.placeholder.definition }}"></textarea>\n\n				<div class="flex flex-justify">\n					<button ng-click="addWords.resetForm()" class="btn btn-outline mt2 mb2">Reset Form</button>\n					\n					<!-- submit button -->\n					<button type="submit" class="btn btn-primary mt2 mb2" ng-disabled="addWords.btnState.success || addWords.btnState.loading">\n						<span ng-if="!addWords.btnState.loading && !addWords.btnState.success"><span class="ti-plus mr1"></span>Add Word</span>\n						<span ng-if="addWords.btnState.loading"><spinner width="16px"></spinner>Please wait...</span>\n						<span ng-if="addWords.btnState.success"><span class="ti-check mr1"></span>Success!</span>\n					</button>\n					<!-- end: submit button -->\n				</div>\n\n			</form>\n\n		</div>\n		<!-- end: add words form -->\n\n		<!-- definitions from dictionary API -->\n		<div class="md-col md-col-6 px2">\n\n			<div class="bold gray mb2">Word definitions from <span class="italic">The American Heritage® Dictionary of the English Language, 4th Edition</span></div>\n\n			<div class="bg-light-green rounded p2 mb2 near-black ng-animation-fadeInUp" ng-repeat="definition in addWords.definitions">\n				<div class="flex flex-center">\n					<div class="flex-none" style="width: 52px">\n						<a ng-click="addWords.copyDefinition(definition.text)" class="btn btn-sm btn-green-outline" tabindex="-1"><span class="ti-plus"></span></a>\n					</div>\n					<div class="h5">{{ definition.text }}</div>\n				</div>\n			</div>\n\n		</div>\n		<!-- definitions from dictionary API -->\n\n	</div>\n</div>\n\n<!-- notification -->\n<notification color="green" show="addWords.notification.success"><span class="ti-check mr1"></span>{{ addWords.notificationSuccessMsg }}</notification>\n<notification color="red" show="addWords.notification.error"><span class="ti-alert mr1"></span>{{ addWords.notificationErrorMsg }}</notification>\n<!-- end: notification -->\n\n<!-- modal -->\n<modal show="addWords.showModal" \n	      modal-bg="bg-white" \n	      yes-cb="addWords.modalYes(addWords.collectionId, addWords.formData)" \n	      no-cb="addWords.modalNo(addWords.collectionId, addWords.formData)"\n	      yes-message="Yes, overwrite"\n	      no-message="No, add new"\n	      add-abort-button>\n	<div class="center h3">You already have this word in your collection. Are you sure you want to overwrite the existing word?</div>\n</modal>\n<!-- end: modal -->')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("home/root.tpl.html",'<div ui-view="nav-home"></div>\n<div ui-view></div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("home/nav-home.tpl.html",'<div class="fixed white border-bottom border-lighten-2" style="width: 100%">\n	<div class="container">\n		<div class="flex flex-center">\n			<a class="btn btn-sm" ui-sref="root.home">\n				<img src="../images/logo/bigvocab-logo-white.svg" width="50px" />\n			</a>\n\n			<div class="flex-auto"></div>\n\n			<div>\n\n				<!-- nav items -->\n				<a ui-sref="root.home" ng-click="navHome.setActive(\'home\')" class="btn btn-narrow btn-text py2 h6" ng-class="{\'bold muted-0\': navHome.active === \'home\'}">Home</a>\n				<a ui-sref="root.features" ng-click="navHome.setActive(\'features\')" class="btn btn-narrow btn-text py2 h6" ng-class="{\'bold muted-0\': navHome.active === \'features\'}">How it works</a>\n				<!--<a ui-sref="root.about" ng-click="navHome.setActive(\'about\')" class="btn btn-narrow btn-text py2 h6" ng-class="{\'bold muted-0\': navHome.active === \'about\'}">About</a>-->\n				<!-- end: nav items -->\n\n				<!-- login button -->\n				<a href="/auth/google" ng-if="!navHome.user" class="btn btn-outline btn-sm ml2 mr2 py2 h6">Login&nbsp;&rarr;</a>\n				<!-- end: login button -->\n\n			</div>\n		</div>\n	</div>\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("home/home.tpl.html",'<div class="bg-cover bg-gradient-home">\n\n	<div class="flex flex-center" style="min-height: 100vh;">\n		<div class="container flex-auto">\n			<div class="clearfix">\n\n				<div class="sm-col-6 p2 mx-auto white center">\n					<div class="h1 light">Big Vocab</div>\n					<p>Big Vocab uses a method called Spaced Repetition to improve word recall. Think of it as a virtual flash card that\'s optimized to help you remember more words.</p>\n					<a ui-sref="root.auth.register" class="btn btn-red">Sign Up</a>&nbsp;&nbsp;\n					<a href="/auth/google" class="btn btn-outline">Login</a>\n				</div>\n\n			</div>\n		</div>\n	</div>\n\n</div>');

}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("common/spinner-directive.tpl.html",'<img src="../images/spinner/oval-sm.svg" class="mr1" width="{{ width }}">')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("common/notification-directive.tpl.html",'<div ng-if="show" class="rounded bg-{{color}} px3 py2 fixed white h5 ng-animation-fadeInUp" style="top: 24px; right: 24px; max-width: 240px;">\n	<div ng-transclude></div>\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("common/modal-directive.tpl.html",'<!-- overlay -->\n<div ng-if="show" class="fixed z2 top-0 right-0 bottom-0 left-0 bg-darken-3" ng-click="closeModal()">\n</div>\n<!-- end: overlay -->\n\n<div ng-if="show" class="fixed z3 top-0 right-0 bottom-0 left-0 ng-animation-fadeInUp">\n	<div class="flex flex-center flex-center-justified px2" style="width: 100%; height: 100vh;">\n		<div class="sm-col-8 md-col-7 lg-col-5 relative {{ modalBg }}">\n			\n			<!-- close button -->\n			<div>\n				<a class="ti-close absolute right-0 h3 p3" ng-click="closeModal()"></a>\n			</div>\n			<!-- end: close button -->\n\n			<!-- content -->\n			<div class="px4 py3 mt1">\n				<div ng-transclude></div>\n				<!-- end: content -->\n\n				<!-- buttons -->\n				<div class="center mt1 mb1">\n					<button class="btn btn-primary mt2" ng-click="yesCb(); closeModal()" ng-if="showYesBtn">{{ yesMessage }}</button>&nbsp;&nbsp;\n					<button class="btn btn-primary mt2" ng-click="noCb(); closeModal()" ng-if="showNoBtn">{{ noMessage }}</button>&nbsp;&nbsp;\n					<button class="btn btn-red mt2" ng-click="closeModal()" ng-if="showAbortBtn">Cancel</button>\n				</div>\n				<!-- end: buttons -->\n			</div>\n\n		</div>\n	</div>\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("auth/register.tpl.html",'<div class="bg-cover bg-gradient-navy">\n\n	<div class="flex flex-center" style="min-height: 100vh">\n		<div class="container-sm flex-auto">\n			<div class="clearfix white">\n\n				<div class="sm-col sm-col-8 px2 mb3">\n					<div class="h2 light mb2">Sign Up</div>\n					<a href="/auth/google" class="btn btn-primary">Sign up with Your Google Account</a>\n				</div>\n\n				<div class="sm-col sm-col-4 px2">\n					<div class="border border-lighten-3 p2">\n						<p>Already have an account?</p>\n						<a href="/auth/google" class="btn btn-outline block">Login with Google</a>\n					</div>\n				</div>\n\n			</div>\n		</div>\n	</div>\n\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("auth/login.tpl.html",'<div class="bg-cover bg-gradient-navy">\n\n	<div class="flex flex-center" style="min-height: 100vh;">\n		<div class="container flex-auto">\n			<div class="clearfix">\n\n				<div class="sm-col-6 p2 mx-auto white center">\n					<div class="h1 light mb2">Login to Big Vocab</div>\n					<a href="/auth/google" class="btn btn-red">Login with Google</a>\n				</div>\n\n			</div>\n		</div>\n	</div>\n\n</div>')}]),angular.module("bigvocab").run(["$templateCache",function(n){n.put("auth/auth.tpl.html",'<div ui-view="root.nav-home"></div>\n<div ui-view></div>')}]),function(){angular.module("mainApp",["ui.router"])}(),function(){function n(n){var t={};return t.getUserAll=function(t){return n.get("/api/words/all/"+t)},t.getAll=function(t){return n.get("/api/"+t+"/words")},t.getDue=function(t){return n.get("/api/"+t+"/words/?filter=dueToday")},t.create=function(t){return n.post("/api/words",t)},t.get=function(t){return n.get("/api/words/"+t)},t.find=function(t,o){return n.get("/api/"+t+"/words/"+o)},t.exists=function(t,o){return n.get("/api/"+t+"/words/"+o+"/?exists")},t.update=function(t,o){return n.put("/api/words/"+t,o)},t["delete"]=function(t){return n["delete"]("/api/words/"+t)},t}angular.module("mainApp").factory("WordsService",n),n.$inject=["$http"]}(),function(){function n(n){var t={};return t.update=function(t,o){return n.put("/api/users/"+t,o)},t}angular.module("mainApp").factory("UsersService",n),n.$inject=["$http"]}(),function(){var n=function t(n){function o(){e.formData={}}_classCallCheck(this,t);var e=this;e.formData={},e.submitSearch=function(t,e){t&&(o(),n.go("mainApp.list-words",{searchString:e}))}};n.$inject=["$state"],angular.module("mainApp").controller("TopMenuCtrl",n)}(),function(){var n=function t(){_classCallCheck(this,t);var n=this;n.ctrlName="TestWordsCtrl"};angular.module("mainApp").controller("TestWordsCtrl",n)}(),function(){var n=function t(){_classCallCheck(this,t);var n=this;n.toggle=!1,n.toggleSidebar=function(){n.toggle=!n.toggle},n.navItems=[{id:1,title:"Collections",icon:"ti-layers-alt",link:"mainApp.collections"},{id:2,title:"View All Words",icon:"ti-list",link:"mainApp.list-words"},{id:4,title:"Import",icon:"ti-import",link:"mainApp.import"},{id:5,title:"Settings",icon:"ti-settings",link:"mainApp.settings"},{id:6,title:"Log Out",icon:"ti-arrow-left",link:"mainApp.logout"}]};angular.module("mainApp").controller("SidebarCtrl",n)}(),function(){var n=function t(n,o,e){function i(t,o){var e={maxDailyWords:o};return console.log(e),n.update(t,e)}_classCallCheck(this,t);var s=this;s.formData={},s.formData.maxDailyWords=o.maxDailyWords,s.placeholder={maxDailyWords:"i.e. 100 (default: 150)"},s.btnState={loading:!1,success:!1},s.notification={success:!1,error:!1},s.msg={success:"Change successfully saved!",error:"Something went wrong. Please try again."},s.notificationSuccessMsg=s.msg.success,s.notificationErrorMsg=s.msg.error,s.saveSettings=function(n){i(o.id,n).then(function(n){console.log(n),s.btnState.loading=!1,s.btnState.success=!0,s.notification.success=!0,e(function(){s.btnState.success=!1},1500)})["catch"](function(){s.btnState.loading=!1,s.notification.error=!0})}};n.$inject=["UsersService","user","$timeout"],angular.module("mainApp").controller("SettingsCtrl",n)}(),function(){var n=function t(n,o,e,i,s,a,r,l,c,d,u,m){function g(n){b.notification.error=!0,console.log("Something went wrong: ",n)}function f(n){return{word:n.word,definition:n.definition}}function p(n,t){var o=t[n];return void 0===o?void 0:(o.definition=c.fromHtml(o.definition),o)}function h(n){return void 0===n?!0:!1}function v(n){l.updatePronunciationMw(n).then(function(n){b.pronunciations=angular.fromJson(n).data,console.log("Successfully added pronunciations")})["catch"](function(n){console.log("Adding pronunciations failed: ",n)})}_classCallCheck(this,t);var b=this,w=e.collectionId;b.wordCounter=0,b.showWord=!0,b.showAnswer=!1,b.showModal=!1,b.editToggle=!1,b.formData={},b.finished=!1,b.notification={success:!1,error:!1},b.msg={success:"Change successfully saved!",error:"Something went wrong. Please try again."},b.notificationSuccessMsg=b.msg.success,b.notificationErrorMsg=b.msg.error,b.studyCountToday=m.studyCountToday||0,n.getDue(w).then(function(n){b.words=angular.fromJson(n).data,b.totalWordsCount=b.words.length,b.currentWord=p(b.wordCounter,b.words),b.finished=h(b.currentWord),b.finished||(void 0!==b.currentWord.pronunciations?b.pronunciations=b.currentWord.pronunciations:v(b.currentWord),b.formData=f(b.currentWord))})["catch"](g),b.revealWord=function(){b.showWord=!0},b.hideWord=function(){b.showWord=!1},b.revealAnswer=function(){b.showAnswer=!0},b.hideAnswer=function(){b.showAnswer=!1},b.toggleEdit=function(){b.editToggle=!b.editToggle},b.deleteWord=function(t){n["delete"](t).then(function(){b.notification.success=!0,b.toggleEdit(),p()})["catch"](g)},b.closeModal=function(){b.showModal=!1},b.playPronunciation=function(n){var t=u.load(n);t.play()},b.submitDelete=function(n){b.deleteId=n,b.showModal=!0},b.submitEdit=function(t,o,e){var i={word:o,definition:c.toHtml(e)};n.update(t,i).then(function(){b.currentWord.word=o,b.currentWord.definition=c.fromHtml(e),b.notification.success=!0,b.toggleEdit()})["catch"](g)},b.submitRes=function(t,e){b.hideWord(),b.hideAnswer();var s=a.calcEaseFactor(t.easeFactor,e),r=a.calcPhase(t.phase,t.interval,e),l=a.calcInterval(t.phase,t.interval,t.easeFactor,e),c=i(),d=c.unix(),u=a.calcNextReview(l),w=u.unix(),y=angular.copy(t.reviewRes);y[e]++;var W={reviewRes:y,lastReviewedEpochTime:d,easeFactor:s,phase:r,interval:l,nextReviewEpochTime:w};n.update(t.id,W).then(function(){b.wordCounter++,b.currentWord=p(b.wordCounter,b.words),b.finished=h(b.currentWord),b.finished||(void 0!==b.currentWord.pronunciations?b.pronunciations=b.currentWord.pronunciations:v(b.currentWord),b.formData=f(b.currentWord),b.hideAnswer(),b.revealWord())})["catch"](g),b.studyCountToday++,console.log("vm.studyCountToday: ",b.studyCountToday),o.update(m.id,{studyCountToday:b.studyCountToday})["catch"](function(n){console.log("Something went wrong while updating study count for today: ",n)})}};n.$inject=["WordsService","UsersService","$stateParams","$moment","$timeout","Sm2Service","ConfigService","DictionaryService","TextConvertService","$sce","ngAudio","user"],angular.module("mainApp").controller("ReviewWordsCtrl",n)}(),function(){function n(n){n.state("mainApp",{"abstract":!0,url:"/main-app",views:{"":{templateUrl:"main-app/main-app.tpl.html"},"sidebar@mainApp":{templateUrl:"main-app/sidebar.tpl.html",controller:"SidebarCtrl",controllerAs:"sidebar"},"top-menu@mainApp":{templateUrl:"main-app/top-menu.tpl.html",controller:"TopMenuCtrl",controllerAs:"topMenu"}}}).state("mainApp.collections",{url:"/collections",templateUrl:"main-app/collections.tpl.html",controller:"CollectionsCtrl",controllerAs:"collections",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]}}).state("mainApp.add-words",{url:"/collections/:collectionId/add-words",templateUrl:"main-app/add-words.tpl.html",controller:"AddWordsCtrl",controllerAs:"addWords",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]}}).state("mainApp.review-words",{url:"/collections/:collectionId/review-words",templateUrl:"main-app/review-words.tpl.html",controller:"ReviewWordsCtrl",controllerAs:"reviewWords",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]}}).state("mainApp.list-words",{url:"/list-words",templateUrl:"main-app/list-words.tpl.html",controller:"ListWordsCtrl",controllerAs:"listWords",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]},params:{searchString:null}}).state("mainApp.test-words",{url:"/test-words",templateUrl:"main-app/test-words.tpl.html",controller:"TestWordsCtrl",controllerAs:"testWords",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]}}).state("mainApp.logout",{url:"/logout",templateUrl:"main-app/logout.tpl.html",controller:"LogoutCtrl",controllerAs:"logout",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]}}).state("mainApp.import",{url:"/import",templateUrl:"main-app/import.tpl.html",controller:"ImportCtrl",controllerAs:"import",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]}}).state("mainApp.settings",{url:"/settings",templateUrl:"main-app/settings.tpl.html",controller:"SettingsCtrl",controllerAs:"settings",resolve:{user:["AuthService",function(n){return n.checkLoggedIn()}]}})}angular.module("mainApp").config(n),n.$inject=["$stateProvider"]}(),function(){var n=function t(n,o){_classCallCheck(this,t);var e=this;e.logout=function(){n.logout().then(function(){console.log("User logged out successfully"),o.location="/#/home"})["catch"](function(n){console.log("Something went wrong: ",n)})},e.goBack=function(){o.history.go(-1)}};n.$inject=["AuthService","$window"],angular.module("mainApp").controller("LogoutCtrl",n)}(),function(){var n=function t(n,o,e,i,s,a,r,l,c,d){function u(n){f.btnState.loading=!1,f.notification.error=!0,console.log("Something went wrong: ",n)}function m(n){e.getUserAll(n).then(function(n){var t=angular.fromJson(n).data;f.words=t,f.wordsCount=t.length,f.words.map(function(n){return n.definition=i.fromHtml(n.definition),n}),g(t)})["catch"](u)}function g(n){n.map(function(n){return f.showEdit[n.id]=!1,n})}_classCallCheck(this,t);var f=this;f.formData={},f.showEdit={},f.displayLimit=200,f.btnState={loading:!1,success:!1},f.pronunciationBtnState={loading:!1,success:!1},f.notification={success:!1,error:!1},f.msg={success:"Change successfully saved!",deleteSuccess:"Word deleted succesfully",error:"Something went wrong. Please try again.",pronunciationError:"Sorry - pronunciation for this word cannot be found."},f.notificationSuccessMsg=f.msg.success,f.notificationErrorMsg=f.msg.error,m(l.id),null!==n.searchString&&(f.formData.searchWords=n.searchString),document.getElementById("searchWords").focus(),f.toggleEdit=function(n){f.formData.word=n.word,f.formData.definition=n.definition,f.showEdit[n.id]=!f.showEdit[n.id]},f.modalYes=function(n){e["delete"](n).then(function(){var t=f.words.filter(function(t){return t.id===n})[0],o=f.words.indexOf(t);f.words.splice(o,1),f.notificationSuccessMsg=f.msg.deleteSuccess,f.notification.success=!0})["catch"](u)},f.modalClose=function(){f.showModal=!1},f.playPronunciation=function(n){if(n.pronunciations!==[]&&void 0!==n.pronunciations){var t=c.load(n.pronunciations[0]);t.play()}},f.saveChanges=function(n,t,o){n&&e.update(t.id,o).then(function(){f.btnState.loading=!1,f.btnState.success=!0,f.notificationSuccessMsg=f.msg.success,f.notification.success=!0,r(function(){f.btnState.success=!1,f.showEdit[t.id]=!f.showEdit[t.id],f.words.map(function(n){return n.id===t.id&&(n.word=f.formData.word,n.definition=i.fromHtml(f.formData.definition)),n})},1500)})["catch"](u)},f.submitDelete=function(n){f.showModal=!0,f.selectedWordId=n},f.addAllPronunciations=function(n){f.pronunciationBtnState.loading=!0;var t=0,o=n.reduce(function(n,o){return t++,n.concat(a.updatePronunciationMw(o))},[]);d.all(o).then(function(){f.pronunciationBtnState.loading=!1,f.pronunciationBtnState.success=!0,f.notificationSuccessMsg=f.msg.success,f.notification.success=!0,r(function(){f.pronunciationBtnState.success=!1},1500),m(l.id)})["catch"](function(n){console.log("Adding pronunciations failed: ",n)})}};n.$inject=["$stateParams","CollectionsService","WordsService","TextConvertService","ConfigService","DictionaryService","$timeout","user","ngAudio","$q"],angular.module("mainApp").controller("ListWordsCtrl",n)}(),function(){var n=function t(n,o,e,i,s,a){function r(t,e){l.btnState.loading=!0,n.anki(t,e).then(function(n){var t=angular.fromJson(n).data,e=t.generated_keys[0];return o.getAll(e)}).then(function(){l.btnState.loading=!1,l.btnState.success=!0,l.notification.success=!0,s(function(){l.btnState.success=!1,a.location.href="/#/main-app/collections"},1500)})["catch"](function(n){l.btnState.loading=!1,l.notification.error=!0,console.log("Something went wrong with importing",n)})}_classCallCheck(this,t);var l=this;l.formData={},l.btnState={loading:!1,success:!1},l.placeholder={files:"Click to upload anki text files",collectionTitle:"Add collection title here"},l.notification={success:!1,error:!1},l.msg={success:"Words successfully imported!",error:"Something went wrong. Please try again."},l.notificationSuccessMsg=l.msg.success,l.notificationErrorMsg=l.msg.error,l.importTextfile=function(n,t){n&&r(i.id,t)}};n.$inject=["ImportService","WordsService","ConfigService","user","$timeout","$window"],angular.module("mainApp").controller("ImportCtrl",n)}(),function(){function n(n){var t={};return t.getAll=function(t){return n.get("/api/"+t+"/collections")},t.create=function(t){return n.post("/api/collections",t)},t.get=function(t){return n.get("/api/collections/"+t)},t.merge=function(t,o){return n.put("/api/collections/merge/"+t,o)},t.update=function(t,o){return n.put("/api/collections/"+t,o)},t["delete"]=function(t){return n["delete"]("/api/collections/"+t)},t}angular.module("mainApp").factory("CollectionsService",n),n.$inject=["$http"]}(),function(){var n=function t(n,o,e,i,s,a,r){function l(){function n(){var n=new Date,t=r().endOf("day");return t-n+1e3}function t(){e.update(s.id,{studyCountToday:0})["catch"](function(n){console.log("Something went wrong (attempt ",o,"): ",n),5>=o&&(o++,i(t,2e3))}).then(function(){i(t,n())})}console.log(n());var o=0;i(t,n())}function c(t){n.getAll(t.id).then(function(n){f.collectionList=angular.fromJson(n).data,f.checks=m(f.collectionList)})["catch"](function(n){console.log("Something went wrong: ",n)})}function d(t){var o=t[0],e=t.filter(function(n){return n!==o}),i=[];return e.forEach(function(t){i.push(n.merge(t,{newCollectionId:o}))}),a.all(i)}function u(t){var o=[];return t.forEach(function(t){o.push(n["delete"](t))}),a.all(o)}function m(n){var t={};return n.forEach(function(n){t[n.id]=!1}),t}function g(){f.addCollectionForm.collectionTitle.$touched=!1,f.addCollectionForm.$submitted=!1,f.formData={}}_classCallCheck(this,t);var f=this;f.formData={},f.placeholder={collectionTitle:"Enter Collection name here"},f.btnState={loading:!1,success:!1},f.user=s,f.checks={},f.showEdit=!1,f.notification={success:!1,error:!1},f.msg={success:"Success!",error:"Something went wrong - please try again.",mergeError:"Please select two or more collections.",noneSelectedError:"Please select one or more collections."},f.notificationSuccessMsg=f.msg.success,f.notificationErrorMsg=f.msg.error,f.showModal=!1,c(s),l(),f.toggleEdit=function(){f.showEdit=!f.showEdit},f.toggleSuccessNotification=function(n){f.notification.success=!0,f.notificationSuccessMsg=n},f.toggleErrorNotification=function(n){f.notification.error=!0,f.notificationErrorMsg=n},f.createCollection=function(t,o){t&&(f.btnState.loading=!0,n.create(o).then(function(){f.btnState.loading=!1,f.btnState.success=!0,f.toggleSuccessNotification(f.msg.success),c(s),g(),i(function(){f.btnState.success=!1},1500)})["catch"](function(n){f.btnState.loading=!1,f.toggleErrorNotification(f.msg.mergeError),console.log("Something went wrong: ",n)}))},f.mergeCollections=function(n,t){var o=[];n.forEach(function(n){t[n.id]===!0&&o.push(n.id)}),o.length>=2?d(o).then(function(){f.toggleSuccessNotification(f.msg.success),c(s)})["catch"](function(n){f.toggleErrorNotification(f.msg.error),console.log("Something went wrong: ",n)}):f.toggleErrorNotification(f.msg.mergeError)},f.deleteCollections=function(n,t){var o=[];n.forEach(function(n){t[n.id]===!0&&o.push(n.id)}),o.length>=1?u(o).then(function(){f.toggleSuccessNotification(f.msg.success),c(s)})["catch"](function(n){f.toggleErrorNotification(f.msg.error),console.log("Something went wrong: ",n)}):f.toggleErrorNotification(f.msg.noneSelectedError)},f.showConfirmDeleteModal=function(n,t){var o=[];n.forEach(function(n){t[n.id]===!0&&o.push(n.id)}),o.length>=1?f.showModal=!0:f.toggleErrorNotification(f.msg.noneSelectedError)},f.confirmModal=function(){f.deleteCollections(f.collectionList,f.checks)},f.closeModal=function(){f.showModal=!1}};n.$inject=["CollectionsService","WordsService","UsersService","$timeout","user","$q","$moment"],angular.module("mainApp").controller("CollectionsCtrl",n)}(),function(){var n=function t(n,o,e,i,s,a,r){function l(){p.btnState.loading=!1,p.btnState.success=!0,f(),p.definitions=[],p.notification.success=!0,document.getElementById("addWords").focus(),a(function(){p.btnState.success=!1},1500)}function c(n){p.btnState.loading=!1,p.notification.error=!0,console.log("Something went wrong: ",n)}function d(n,t){var o=r(),e=o.unix(),s=r().add(1,"minutes"),a=s.unix(),l=i.toHtml(t.definition),c={word:t.word,definition:l,collectionId:n,lastReviewedEpochTime:e,interval:1,nextReviewEpochTime:a,phase:"learning",reviewRes:{again:0,hard:0,good:0,easy:0},easeFactor:2.5};return c}function u(n,t){var o=d(n,t);e.create(o).then(l)["catch"](c)}function m(n,t){var o=d(n,t);e.find(n,t.word).then(function(n){var t=angular.fromJson(n).data[0].id;return e.update(t,o)}).then(l)["catch"](c)}function g(n,t){e.exists(n,t.word).then(function(o){var e=angular.fromJson(o).data;e?(p.showModal=!0,p.btnState.loading=!1):u(n,t)})["catch"](function(n){console.log("checkDuplicate err: ",n)})}function f(){p.addWordForm.word.$touched=!1,p.addWordForm.definition.$touched=!1,p.addWordForm.$submitted=!1,p.formData={}}_classCallCheck(this,t);var p=this;p.formData={},p.placeholder={word:"i.e. audacious",definition:"i.e. Fearlessly, often recklessly daring; bold. See Synonyms at adventurous, brave."},p.btnState={loading:!1,success:!1},p.collectionId=s.collectionId,p.notification={success:!1,error:!1},p.msg={success:"Word successfully added!",error:"Something went wrong. Please try again."},p.notificationSuccessMsg=p.msg.success,p.notificationErrorMsg=p.msg.error,p.showModal=!1,p.modalClose=function(){p.showModal=!1},p.modalYes=function(n,t){m(n,t)},p.modalNo=function(n,t){u(n,t)},p.getDefinition=function(t){void 0!==t&&o.getDefinitionFree(n.mashapeKey,t).then(function(n){p.definitions=n.data.definitions})["catch"](function(n){console.log("Something went wrong; ",n)})},p.submit=function(n,t,o){n&&(p.btnState.loading=!0,g(t,o))},p.copyDefinition=function(n){p.formData.definition=void 0!==p.formData.definition?p.formData.definition+"\n\n"+n:n},p.resetForm=function(){f()}};n.$inject=["ConfigService","DictionaryService","WordsService","TextConvertService","$stateParams","$timeout","$moment"],angular.module("mainApp").controller("AddWordsCtrl",n)}(),function(){angular.module("home",["ui.router"])}(),function(){var n=function t(n,o){_classCallCheck(this,t);var e=this;e.user=!1,e.setActive=function(n){e.active=n},n.isLoggedIn().then(function(n){n.data!==!1&&(e.user=!0,o.location="/#/main-app/collections"),console.log("Logged in?",e.user)})["catch"](function(n){console.log("Something went wrong: ",n)})};n.$inject=["AuthService","$window"],angular.module("home").controller("NavHomeCtrl",n)}(),function(){function n(n){n.state("root",{"abstract":!0,views:{"":{templateUrl:"home/root.tpl.html"},"nav-home@root":{templateUrl:"home/nav-home.tpl.html",controller:"NavHomeCtrl",controllerAs:"navHome"}}}).state("root.home",{url:"/home",templateUrl:"home/home.tpl.html",controller:"HomeCtrl",controllerAs:"home"})}angular.module("home").config(n),n.$inject=["$stateProvider"]}(),function(){var n=function t(){_classCallCheck(this,t);var n=this;n.ctrlName="HomeCtrl"};angular.module("home").controller("HomeCtrl",n)}(),function(){angular.module("common",[])}(),function(){function n(){var n={};return n.toHtml=function(n){if(void 0!==n){var t=n.replace(/\n/g,"<br>");return t}},n.fromHtml=function(n){if(void 0!==n){var t=n.replace(/<br>/g,"\n").replace(/<div>/g,"\n").replace(/<\/div>/g,"\n").replace(/&amp;/g,"&").replace(/&nbsp;/g," ").replace(/&gt;/g,">");return t}},n}angular.module("common").factory("TextConvertService",n)}(),function(){function n(){return{restrict:"EA",scope:{},templateUrl:"common/spinner-directive.tpl.html",replace:!0,link:function(n,t,o){n.width=o.width}}}angular.module("common").directive("spinner",n)}(),function(){function n(n){var t={};return t.calcEaseFactor=function(n,t){var o=n,e=void 0,i=1.3;switch(t){case"again":e=o-.2,e=i>e?i:e;break;case"hard":e=o-.15,e=i>e?i:e;break;case"good":e=o;break;case"easy":e=o+.15}return e},t.calcPhase=function(n,t,o){if("again"===o)return"learning";if("easy"===o)return"review";if("learning"===n){if(1===t)return"learning";if(10===t)return"review"}return"review"===n?"review":void 0},t.calcInterval=function(n,t,o,e){if("again"===e)return 1;if("easy"===e&&"learning"===n)return 5760;if("learning"===n)switch(t){case 1:return 10;case 10:return 5760}else if("review"===n)return t*o},t.calcNextReview=function(t){return n().add(t,"minutes")},t}angular.module("common").factory("Sm2Service",n),n.$inject=["$moment"]}(),function(){function n(n){return{restrict:"EA",scope:{show:"=",color:"@"},templateUrl:"common/notification-directive.tpl.html",transclude:!0,replace:!1,link:function(t,o,e){t.$watch("show",function(){n(function(){t.show=!1},2500)})}}}angular.module("common").directive("notification",n),n.$inject=["$timeout"]}(),function(){function n(){return{restrict:"EA",scope:{show:"=",yesCb:"&?",noCb:"&?"},templateUrl:"common/modal-directive.tpl.html",replace:!1,transclude:!0,link:function(n,t,o){n.modalBg=o.modalBg||"",n.yesMessage=o.yesMessage||"Yes",n.noMessage=o.noMessage||"No",n.showYesBtn=void 0!==n.yesCb?!0:!1,n.showNoBtn=void 0!==n.noCb?!0:!1,n.showAbortBtn=void 0!==o.addAbortButton?!0:!1,n.closeModal=function(){n.show=!1}}}}angular.module("common").directive("modal",n)}(),function(){function n(n){var t={};return t.anki=function(t,o){return n.post("/api/import/anki/"+t,o)},t}angular.module("common").factory("ImportService",n),n.$inject=["$http"]}(),function(){function n(){return{restrict:"A",scope:{fileread:"="},replace:!1,link:function(n,t,o){t.bind("change",function(t){n.fileread=[];for(var o=t.target.files,e=0,i=void 0;i=o[e];e++){var s=new FileReader;s.onload=function(t){return function(o){n.$apply(function(){n.fileread.push({name:t.name,content:o.target.result})})}}(i),s.readAsText(i)}})}}}angular.module("common").directive("fileread",n)}(),function(){function n(n,t){var o={};return o.getDefinitionFree=function(t,o){return n.get("https://montanaflynn-dictionary.p.mashape.com/define?word="+o,{headers:{"X-Mashape-Key":t}})},o.getPronunciationMw=function(t){return n.get("/api/pronunciations/"+t)},o.updatePronunciationMw=function(t){return n.put("/api/pronunciations/"+t.id,t)},o.getPronunciationForvo=function(o,e){var i=t.defer();return n.jsonp("http://apifree.forvo.com/action/word-pronunciations/format/json/word/"+e+"/language/en/order/rate-desc/limit/1/key/"+o+"?callback=JSON_CALLBACK").then(function(n){var t=angular.fromJson(n).data,o=void 0;o=0!==t.attributes.total?o.push(t.items[0].pathmp3):null,i.resolve(o)})["catch"](function(n){i.reject(n),console.log("Something went wrong: ",n)}),i.promise},o}angular.module("common").factory("DictionaryService",n),n.$inject=["$http","$q"]}(),function(){function n(){var n={};return n.mashapeKey="S4DvXSr43Cmsh5Kww0kOuX9QxNbXp1hjhkYjsn84TFraf8SlG3",n.forvoKey="f850390038cd293954cb5bdf7dc36d8a",n.mwKey="e1f9d411-f40e-40b0-bdae-7c1903daf229",n}angular.module("common").factory("ConfigService",n)}(),function(){angular.module("auth",["ui.router"])}(),function(){var n=function t(){_classCallCheck(this,t);var n=this;n.ctrlName="RegisterCtrl"};angular.module("auth").controller("RegisterCtrl",n)}(),function(){var n=function t(){_classCallCheck(this,t);var n=this;n.ctrlName="LoginCtrl"};angular.module("auth").controller("LoginCtrl",n)}(),function(){function n(n,t,o,e){var i={};return i.isLoggedIn=function(){return t.get("/auth/loggedin")},i.checkLoggedIn=function(){var n=o.defer();return t.get("/auth/loggedin").then(function(t){var t=t.data;t!==!1?n.resolve(t.new_val):(n.reject(),e.location="/#/login")})["catch"](function(t){n.reject(),e.location="/#/",console.log("Something went wrong: ",t)}),n.promise},i.logout=function(){return t.get("/auth/logout")},i}angular.module("auth").factory("AuthService",n),n.$inject=["ConfigService","$http","$q","$window"]}(),function(){function n(n){n.state("root.auth",{"abstract":!0,views:{"":{templateUrl:"auth/auth.tpl.html"}}}).state("root.auth.login",{url:"/login",templateUrl:"auth/login.tpl.html",controller:"LoginCtrl",controllerAs:"login"}).state("root.auth.register",{url:"/register",templateUrl:"auth/register.tpl.html",controller:"RegisterCtrl",controllerAs:"register"}).state("root.auth.logout",{url:"/logout",templateUrl:"auth/logout.tpl.html",controller:"LogoutCtrl",controllerAs:"logout"})}angular.module("auth").config(n),n.$inject=["$stateProvider"]}(),function(){function n(n){n.otherwise("/home")}angular.module("bigvocab").config(n),n.$inject=["$urlRouterProvider"]}();
//# sourceMappingURL=app-85b69c21.js.map