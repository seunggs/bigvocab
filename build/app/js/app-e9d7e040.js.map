{"version":3,"sources":["app.js","app-module.es6","main-app/test-words.tpl.html","main-app/sidebar.tpl.html","main-app/review-words.tpl.html","main-app/main-app.tpl.html","main-app/logout.tpl.html","main-app/list-words.tpl.html","main-app/collections.tpl.html","main-app/add-words.tpl.html","home/root.tpl.html","home/nav-home.tpl.html","home/home.tpl.html","common/spinner-directive.tpl.html","common/modal-directive.tpl.html","auth/register.tpl.html","auth/login.tpl.html","auth/auth.tpl.html","main-app/main-app-module.es6","main-app/words-service-factory.es6","main-app/test-words-controller.es6","main-app/sidebar-controller.es6","main-app/review-words-controller.es6","main-app/main-app-routes.es6","main-app/logout-controller.es6","main-app/list-words-controller.es6","main-app/collections-service-factory.es6","main-app/collections-controller.es6","main-app/add-words-controller.es6","home/home-module.es6","home/nav-home-controller.es6","home/home-routes.es6","home/home-controller.es6","common/common-module.es6","common/spinner-directive.es6","common/sm2-service-factory.es6","common/modal-directive.es6","common/dictionary-service-factory.es6","common/config-service-factory.es6","auth/auth-module.es6","auth/register-controller.es6","auth/login-controller.es6","auth/auth-service-factory.es6","auth/auth-routes.es6","app-routes.es6"],"names":["_classCallCheck","instance","Constructor","TypeError","angular","module","factory","$window","R","run","$templateCache","put","WordsService","$http","WordsServiceBase","getAll","collectionId","get","create","word","post","wordId","update","$inject","TestWordsCtrl","this","vm","ctrlName","controller","SidebarCtrl","toggle","toggleSidebar","navItems","id","title","icon","link","ReviewWordsCtrl","config","$stateProvider","state","abstract","url","views","templateUrl","sidebar@mainApp","controllerAs","resolve","user","AuthService","checkLoggedIn","params","collectionTitle","LogoutCtrl","logout","then","console","log","location","err","goBack","history","go","ListWordsCtrl","$stateParams","words","fromJson","data","CollectionsService","CollectionsServiceBase","userId","collection","newCollection","CollectionsCtrl","$timeout","getAllCollections","res","collectionList","formData","placeholder","btnState","loading","success","createCollection","isValid","dbRes","AddWordsCtrl","ConfigService","DictionaryService","$moment","definition","lastReviewed","nextReview","add","lapsedTime","diff","getDefinition","undefined","mashapeKey","definitions","addWord","copyDefinition","resetForm","addWordForm","$touched","$submitted","NavHomeCtrl","setActive","page","active","isLoggedIn","nav-home@root","HomeCtrl","spinner","restrict","scope","replace","element","attrs","width","directive","Sm2Service","Sm2ServiceBase","someMethod","modal","yesCb","noCb","transclude","modalBg","DictionaryServiceBase","headers","X-Mashape-Key","ConfigServiceBase","RegisterCtrl","LoginCtrl","$q","AuthServiceBase","deferred","defer","reject","promise","$urlRouterProvider","otherwise"],"mappings":"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","file":"app-e9d7e040.js","sourcesContent":["'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name bigvocab\n   * @description\n   *\n   */\n  angular.module('bigvocab', ['ngAria', 'ngAnimate', 'ngMessages', 'ui.router', '720kb.tooltips', 'angular-momentjs', 'home', 'auth', 'mainApp', 'ramda', 'common']);\n\n  // ramda module\n  angular.module('ramda', []);\n  angular.module('ramda').factory('R', function ($window) {\n    return $window.R;\n  });\n})();\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/test-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix center\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3\">Test Time!</h1>\\n' +\n    '\\n' +\n    '\t\t<div class=\"mb2 bold\"><span class=\"gray\">Today\\'s Quota:</span> 78 <span class=\"gray\">/ 123 words left</span></div>\\n' +\n    '\\n' +\n    '\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"h2 px2 py4 bg-white rounded\">Hello</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"clearfix mxn1\">\\n' +\n    '\t\t\t\t<div class=\"col col-6 px1\">\\n' +\n    '\t\t\t\t\t<a class=\"btn mt2 bg-red block white\">Not sure<span class=\"ti-close ml1\"></span></a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-6 px1\">\\n' +\n    '\t\t\t\t\t<a class=\"btn mt2 bg-green block white\">Easy<span class=\"ti-check ml1\"></span></a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/sidebar.tpl.html',\n    '<!--/////////// DESKTOP ONLY ///////////-->\\n' +\n    '<div class=\"sm-show\" style=\"margin-right: 63px;\">\\n' +\n    '\\n' +\n    '\t<div class=\"bg-navy fixed white z1\" style=\"height: 100vh;\">\\n' +\n    '\t\t<div class=\"flex flex-column flex-center py3\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<a ui-sref=\"mainApp.collections\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></a>\\n' +\n    '\t\t\t<a ui-sref=\"{{ navItem.link }}\" tooltips title=\"{{ navItem.title }}\" tooltip-placement=\"right\" class=\"btn btn-icon h2 center p2\" ng-repeat=\"navItem in sidebar.navItems | orderBy:\\'id\\'\" tabindex=\"-1\">\\n' +\n    '\t\t\t\t<span class=\"{{ navItem.icon }}\"></span>\\n' +\n    '\t\t\t</a>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '<!--/////////// end: DESKTOP ONLY ///////////-->\\n' +\n    '\\n' +\n    '<!--/////////// MOBILE ONLY ///////////-->\\n' +\n    '<div class=\"sm-hide\">\\n' +\n    '\\n' +\n    '\t<!-- toggle button -->\\n' +\n    '\t<div class=\"fixed z2\">\\n' +\n    '\t\t<a ng-click=\"sidebar.toggleSidebar()\" class=\"btn btn-icon p3 h3\" ng-class=\"{\\'black\\': sidebar.toggle === false, \\'white\\': sidebar.toggle === true}\"><span class=\"ti-menu\"></span></a>\\n' +\n    '\t</div>\\n' +\n    '\t<!-- end: toggle button -->\\n' +\n    '\\n' +\n    '\t<!-- menu items -->\\n' +\n    '\t<div class=\"bg-navy fixed white z1 translateX-n-100 transition-all-300\" ng-class=\"{\\'translateX-n-100\\': sidebar.toggle === false, \\'translateX-0\\': sidebar.toggle === true }\" style=\"height: 100vh;\">\\n' +\n    '\t\t<div class=\"flex flex-column py2 mt4\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<div style=\"margin-left:20px\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></div>\\n' +\n    '\t\t\t<a ui-sref=\"{{ navItem.link }}\" class=\"btn btn-icon py2 px3 flex flex-center\" ng-repeat=\"navItem in sidebar.navItems | orderBy:\\'id\\'\" tabindex=\"-1\">\\n' +\n    '\t\t\t\t<div class=\"{{ navItem.icon }} h3 mr2\"></div>\\n' +\n    '\t\t\t\t<div class=\"h5\">{{ navItem.title }}</div>\\n' +\n    '\t\t\t</a>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\t<!-- end: menu items -->\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '<!--/////////// end: MOBILE ONLY ///////////-->\\n' +\n    '');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/review-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix center\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3\">Study Time!</h1>\\n' +\n    '\\n' +\n    '\t\t<div class=\"mb2 bold\"><span class=\"gray\">Today\\'s Quota:</span> 78 <span class=\"gray\">/ 123 words left</span></div>\\n' +\n    '\\n' +\n    '\t\t<div class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"px2 py3 bg-white rounded\" style=\"min-height: 120px\">\\n' +\n    '\t\t\t\t<div class=\"h2 mb1\">Hello</div>\\n' +\n    '\t\t\t\t<div class=\"h4\">MeaningMeaningMeaningMeaningMeaning MeaningMeaningMeaning MeaningMeaning </div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t\t<div class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t<div class=\"clearfix mxn1\">\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 red\">\\n' +\n    '\t\t\t\t\t<a class=\"btn btn-red mt2 block white bold\">Again</span></a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 green\">\\n' +\n    '\t\t\t\t\t<a class=\"btn btn-yellow-green mt2 block white bold\">Hard</span></a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 green\">\\n' +\n    '\t\t\t\t\t<a class=\"btn btn-green mt2 block white bold\">Good</span></a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<div class=\"col col-3 px1 green\">\\n' +\n    '\t\t\t\t\t<a class=\"btn btn-green mt2 block white bold\">Easy</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/main-app.tpl.html',\n    '<div class=\"flex\">\\n' +\n    '\t<div ui-view=\"sidebar\"></div>\\n' +\n    '\t<div ui-view class=\"flex-auto bg-darken-1 py4\" style=\"min-height: 100vh\"></div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/logout.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t<div class=\"sm-col-10 md-col-6 mx-auto center px2\">\\n' +\n    '\t\\n' +\n    '\t\t\t<h1 class=\"mt1 mb2\">Log Out</h1>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"mb3 h4\">Are you sure you want to sign out from Big Vocab?</div>\\n' +\n    '\\n' +\n    '\t\t\t<button class=\"btn btn-blue-outline\" ng-click=\"logout.logout()\">Yes, log me out</button>&nbsp;&nbsp;\\n' +\n    '\t\t\t<button class=\"btn btn-primary\" ng-click=\"logout.goBack()\">No, send me back</button>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/list-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3 center\">List of All Words in <span class=\"italic\">{{ listWords.collectionTitle }}</span></h1>\\n' +\n    '\\n' +\n    '\t\t<!-- search words form -->\\n' +\n    '\t\t<div class=\"sm-col-6 mx-auto px2\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<form name=\"listWordsForm\" class=\"center\">\\n' +\n    '\t\t\t\t<input name=\"searchWords\" type=\"text\" ng-model=\"listWords.searchWords\" class=\"field col-12 mb3\" placeholder=\"Search any word or definition\">\\n' +\n    '\t\t\t</form>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: search words form -->\\n' +\n    '\\n' +\n    '\t\t<!-- list of words -->\\n' +\n    '\t\t<div class=\"sm-col-10 mx-auto px2\">\\n' +\n    '\t\t\t\\n' +\n    '\t\t\t<div ng-repeat=\"word in listWords.words | filter: listWords.searchWords\" class=\"clearfix mb2\">\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-3\">{{ word.word }}</div>\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-9 gray\">{{ word.definition }}</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t\t\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: list of words -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/collections.tpl.html',\n    '<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t<h1 class=\"mt1 center\">My Collections</h1>\\n' +\n    '\\n' +\n    '\t<div class=\"md-col-10 lg-col-8 mx-auto px2 mt3\">\\n' +\n    '\\n' +\n    '\t\t<!-- collection list -->\\n' +\n    '\t\t<div class=\"clearfix bg-white rounded p1 mb2 ng-animation-fadeInUp\" ng-repeat=\"collection in collections.collectionList | orderBy: \\'id\\'\">\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"sm-col sm-col-7\">\\n' +\n    '\t\t\t\t<div class=\"btn btn-md bold m1\" style=\"cursor: text\">{{ collection.title }} <span class=\"gray\">({{ collection.wordCount }} words)</span></div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"sm-col sm-col-5 flex flex-wrap\">\\n' +\n    '\t\t\t\t<a ui-sref=\"mainApp.review-words({ collectionId: collection.id })\" class=\"btn btn-md btn-primary flex-auto center m1 h5\">Study<span class=\"ti-arrow-right ml1\"></span></a>\\n' +\n    '\t\t\t\t<a ui-sref=\"mainApp.add-words({ collectionId: collection.id })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"Add Words\" tooltip-placement=\"top\"><span class=\"ti-plus\"></span></a>\\n' +\n    '\t\t\t\t<a ui-sref=\"mainApp.list-words({ collectionId: collection.id, collectionTitle: collection.title })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"View All Words\" tooltip-placement=\"top\"><span class=\"ti-folder\"></span></a>\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: collection list -->\\n' +\n    '\\n' +\n    '\t\t<!-- add collection -->\\n' +\n    '\t\t<div class=\"clearfix bg-light-green px2 py2 mt3 rounded\">\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"center\">\\n' +\n    '\t\t\t\t<div class=\"caps bold m1\">Add Collection</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t<form name=\"collections.addCollectionForm\" \\n' +\n    '\t\t\t\t\t\tng-submit=\"collections.createCollection(collections.addCollectionForm.$valid, { \\n' +\n    '\t\t\t\t\t\t\tuserId: collections.user.id, \\n' +\n    '\t\t\t\t\t\t\twordCount: 0, \\n' +\n    '\t\t\t\t\t\t\ttitle: collections.formData.collectionTitle \\n' +\n    '\t\t\t\t\t\t})\"\\n' +\n    '\t\t\t\t\t\tnovalidate>\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-8 p1\">\\n' +\n    '\t\t\t\t\t<input name=\"collectionTitle\" type=\"text\" ng-model=\"collections.formData.collectionTitle\" class=\"field col-12\" placeholder=\"{{ collections.placeholder.collectionTitle }}\" required>\\n' +\n    '\\n' +\n    '\t\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t\t<div ng-messages=\"collections.addCollectionForm.collectionTitle.$error\" \\n' +\n    '\t\t\t\t\t\t\t ng-if=\"collections.addCollectionForm.$submitted && collections.addCollectionForm.collectionTitle.$touched\" \\n' +\n    '\t\t\t\t\t\t\t class=\"red bold h6 mt1\">\\n' +\n    '\t\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t\t<!-- end: error handling -->\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- submit button -->\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-4 p1\">\\n' +\n    '\t\t\t\t\t<button type=\"submit\" class=\"btn btn-form btn-green col-12\" ng-disabled=\"collections.btnState.success || collections.btnState.loading\">\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"!collections.btnState.loading && !collections.btnState.success\">Add Collection</span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"collections.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"collections.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\\n' +\n    '\t\t\t\t\t</button>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: submit button -->\\n' +\n    '\\n' +\n    '\t\t\t</form>\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: add collection -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>\\n' +\n    '');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('main-app/add-words.tpl.html',\n    '<div class=\"container\">\\n' +\n    '\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t<h1 class=\"mt1 mb3 center\">Add New Words</h1>\\n' +\n    '\\n' +\n    '\t\t<!-- add words form -->\\n' +\n    '\t\t<div class=\"md-col md-col-6 px2\">\\n' +\n    '\\n' +\n    '\t\t\t<form name=\"addWords.addWordForm\" \\n' +\n    '\t\t\t\t\t\tng-submit=\"addWords.addWord(addWords.addWordForm.$valid, {\\n' +\n    '\t\t\t\t\t\t\tword: addWords.formData.word,\\n' +\n    '\t\t\t\t\t\t\tdefinition: addWords.formData.definition,\\n' +\n    '\t\t\t\t\t\t\tcollectionId: addWords.collectionId,\\n' +\n    '\t\t\t\t\t\t\tlastReviewed: addWords.lastReviewed,\\n' +\n    '\t\t\t\t\t\t\tnextReview: addWords.nextReview,\\n' +\n    '\t\t\t\t\t\t\tphase: \\'learning\\',\\n' +\n    '\t\t\t\t\t\t\treviewRes: {\\n' +\n    '\t\t\t\t\t\t\t\tagain: 0,\\n' +\n    '\t\t\t\t\t\t\t\thard: 0,\\n' +\n    '\t\t\t\t\t\t\t\tgood: 0,\\n' +\n    '\t\t\t\t\t\t\t\teasy: 0\\n' +\n    '\t\t\t\t\t\t\t},\\n' +\n    '\t\t\t\t\t\t\teaseFactor: 2.5,\\n' +\n    '\t\t\t\t\t\t\tlapsedTime: addWords.lapsedTime\\n' +\n    '\t\t\t\t\t\t}); addWords.resetForm()\"\\n' +\n    '\t\t\t\t\t\tnovalidate>\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"mb1 bold\">WORD</div>\\n' +\n    '\t\t\t\t<input name=\"word\" type=\"text\" ng-model=\"addWords.formData.word\" ng-blur=\"addWords.getDefinition(addWords.formData.word)\" class=\"field col-12\" placeholder=\"{{ addWords.placeholder.word }}\" autofocus required>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t<div ng-messages=\"addWords.addWordForm.word.$error\" \\n' +\n    '\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.word.$touched\" \\n' +\n    '\t\t\t\t\t\t class=\"red bold h6 mt1\">\\n' +\n    '\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: error handling -->\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"mb1 mt2 bold\">MEANING</div>\\n' +\n    '\t\t\t\t<textarea name=\"definition\" ng-model=\"addWords.formData.definition\" class=\"field col-12\" style=\"height: 160px;\" placeholder=\"{{ addWords.placeholder.definition }}\" required></textarea>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- error handling -->\\n' +\n    '\t\t\t\t<div ng-messages=\"addWords.addWordForm.definition.$error\" \\n' +\n    '\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.definition.$touched\" \\n' +\n    '\t\t\t\t\t\t class=\"red bold h6\">\\n' +\n    '\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t\t<!-- end: error handling -->\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"flex flex-justify\">\\n' +\n    '\t\t\t\t\t<button ng-click=\"addWords.resetForm()\" class=\"btn btn-outline mt2 mb2\">Reset Form</button>\\n' +\n    '\t\t\t\t\t\\n' +\n    '\t\t\t\t\t<!-- submit button -->\\n' +\n    '\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mt2 mb2\" ng-disabled=\"addWords.btnState.success || addWords.btnState.loading\">\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"!addWords.btnState.loading && !addWords.btnState.success\">Add Word<span class=\"ti-plus ml1\"></span></span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"addWords.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\\n' +\n    '\t\t\t\t\t\t<span ng-if=\"addWords.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\\n' +\n    '\t\t\t\t\t</button>\\n' +\n    '\t\t\t\t\t<!-- end: submit button -->\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</form>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: add words form -->\\n' +\n    '\\n' +\n    '\t\t<!-- definitions from dictionary API -->\\n' +\n    '\t\t<div class=\"md-col md-col-6 px2\">\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"bold gray mb2\">Word definitions from <span class=\"italic\">The American Heritage® Dictionary of the English Language, 4th Edition</span></div>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"bg-light-green rounded p2 mb2 near-black ng-animation-fadeInUp\" ng-repeat=\"definition in addWords.definitions\">\\n' +\n    '\t\t\t\t<div class=\"flex flex-center\">\\n' +\n    '\t\t\t\t\t<div class=\"flex-none\" style=\"width: 52px\">\\n' +\n    '\t\t\t\t\t\t<a ng-click=\"addWords.copyDefinition(definition.text)\" class=\"btn btn-sm btn-green-outline\" tabindex=\"-1\"><span class=\"ti-check\"></span></a>\\n' +\n    '\t\t\t\t\t</div>\\n' +\n    '\t\t\t\t\t<div class=\"h5\">{{ definition.text }}</div>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- definitions from dictionary API -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>\\n' +\n    '');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('home/root.tpl.html',\n    '<div ui-view=\"nav-home\"></div>\\n' +\n    '<div ui-view></div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('home/nav-home.tpl.html',\n    '<div class=\"fixed white border-bottom border-lighten-2\" style=\"width: 100%\">\\n' +\n    '\t<div class=\"container\">\\n' +\n    '\t\t<div class=\"flex flex-center\">\\n' +\n    '\t\t\t<a class=\"btn btn-sm\" ui-sref=\"root.home\">\\n' +\n    '\t\t\t\t<img src=\"../images/logo/bigvocab-logo-white.svg\" width=\"50px\" />\\n' +\n    '\t\t\t</a>\\n' +\n    '\\n' +\n    '\t\t\t<div class=\"flex-auto\"></div>\\n' +\n    '\\n' +\n    '\t\t\t<div>\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- nav items -->\\n' +\n    '\t\t\t\t<a ui-sref=\"root.home\" ng-click=\"navHome.setActive(\\'home\\')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{\\'bold muted-0\\': navHome.active === \\'home\\'}\">Home</a>\\n' +\n    '\t\t\t\t<a ui-sref=\"root.features\" ng-click=\"navHome.setActive(\\'features\\')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{\\'bold muted-0\\': navHome.active === \\'features\\'}\">How it works</a>\\n' +\n    '\t\t\t\t<a ui-sref=\"root.about\" ng-click=\"navHome.setActive(\\'about\\')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{\\'bold muted-0\\': navHome.active === \\'about\\'}\">About</a>\\n' +\n    '\t\t\t\t<!-- end: nav items -->\\n' +\n    '\\n' +\n    '\t\t\t\t<!-- login button -->\\n' +\n    '\t\t\t\t<a href=\"/auth/google\" ng-if=\"!navHome.user\" class=\"btn btn-outline btn-sm ml2 py2 h6\">Login&nbsp;&rarr;</a>\\n' +\n    '\t\t\t\t<!-- end: login button -->\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('home/home.tpl.html',\n    '<div class=\"bg-cover bg-gradient-home\">\\n' +\n    '\\n' +\n    '\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\\n' +\n    '\t\t<div class=\"container flex-auto\">\\n' +\n    '\t\t\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\\n' +\n    '\t\t\t\t\t<div class=\"h1 light\">Big Vocab</div>\\n' +\n    '\t\t\t\t\t<p>Big Vocab uses a method called Spaced Repetition to improve word recall. Think of it as a virtual flash card that\\'s optimized to help you remember more words.</p>\\n' +\n    '\t\t\t\t\t<a ui-sref=\"root.auth.register\" class=\"btn btn-red\">Sign Up</a>&nbsp;&nbsp;\\n' +\n    '\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline\">Login</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/spinner-directive.tpl.html',\n    '<img src=\"../images/spinner/oval-sm.svg\" class=\"mr1\" width=\"{{ width }}\">');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('common/modal-directive.tpl.html',\n    '<!-- overlay -->\\n' +\n    '<div class=\"fixed z2 top-0 right-0 bottom-0 left-0 bg-darken-1\">\\n' +\n    '</div>\\n' +\n    '<!-- end: overlay -->\\n' +\n    '\\n' +\n    '<div class=\"relative z3 flex flex-center\">\\n' +\n    '\t<div class=\"sm-col-10 md-col-6 mx-auto {{ modalBg }}\">\\n' +\n    '\t\t\\n' +\n    '\t\t<!-- close button -->\\n' +\n    '\t\t<div>\\n' +\n    '\t\t\t<span class=\"ti-close h4 right white mb2\"></span>\t\\n' +\n    '\t\t</div>\\n' +\n    '\t\t<!-- end: close button -->\\n' +\n    '\\n' +\n    '\t\t<!-- content -->\\n' +\n    '\t\t<div ng-transclude></div>\\n' +\n    '\t\t<!-- end: content -->\\n' +\n    '\\n' +\n    '\t</div>\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('auth/register.tpl.html',\n    '<div class=\"bg-cover bg-gradient-navy\">\\n' +\n    '\\n' +\n    '\t<div class=\"flex flex-center\" style=\"min-height: 100vh\">\\n' +\n    '\t\t<div class=\"container-sm flex-auto\">\\n' +\n    '\t\t\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-8 px2 white\">\\n' +\n    '\t\t\t\t\t<div class=\"h2 light mb2\">Sign Up</div>\\n' +\n    '\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-primary\">Sign up with Your Google Account</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col sm-col-4 px3 white border-left border-lighten-3 py2\">\\n' +\n    '\t\t\t\t\t<p>Already have an account?</p>\\n' +\n    '\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline\">Login with Google</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('auth/login.tpl.html',\n    '<div class=\"bg-cover bg-gradient-navy\">\\n' +\n    '\\n' +\n    '\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\\n' +\n    '\t\t<div class=\"container flex-auto\">\\n' +\n    '\t\t\t<div class=\"clearfix\">\\n' +\n    '\\n' +\n    '\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\\n' +\n    '\t\t\t\t\t<div class=\"h1 light mb2\">Login to Big Vocab</div>\\n' +\n    '\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-red\">Login with Google</a>\\n' +\n    '\t\t\t\t</div>\\n' +\n    '\\n' +\n    '\t\t\t</div>\\n' +\n    '\t\t</div>\\n' +\n    '\t</div>\\n' +\n    '\\n' +\n    '</div>');\n}]);\n\nangular.module('bigvocab').run(['$templateCache', function($templateCache) {\n  $templateCache.put('auth/auth.tpl.html',\n    '<div ui-view=\"root.nav-home\"></div>\\n' +\n    '<div ui-view></div>');\n}]);\n\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name mainApp\n   * @description\n   *\n   */\n  angular.module('mainApp', ['ui.router']);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:WordsService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').factory('WordsService', WordsService);\n\n  function WordsService($http) {\n\n    var WordsServiceBase = {};\n\n    WordsServiceBase.getAll = function (collectionId) {\n      return $http.get('/api/words/' + collectionId);\n    };\n\n    WordsServiceBase.create = function (word) {\n      return $http.post('/api/words', word);\n    };\n\n    WordsServiceBase.get = function (wordId) {\n      return $http.get('/api/words/' + wordId);\n    };\n\n    WordsServiceBase.update = function (wordId, word) {\n      return $http.put('/api/words/' + wordId, word);\n    };\n\n    WordsServiceBase['delete'] = function (wordId) {\n      return $http['delete']('/api/words/' + wordId);\n    };\n\n    return WordsServiceBase;\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var TestWordsCtrl = function TestWordsCtrl() {\n    _classCallCheck(this, TestWordsCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'TestWordsCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:TestWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('TestWordsCtrl', TestWordsCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var SidebarCtrl = function SidebarCtrl() {\n    _classCallCheck(this, SidebarCtrl);\n\n    var vm = this;\n\n    vm.toggle = false;\n    vm.toggleSidebar = function () {\n      vm.toggle = !vm.toggle;\n    };\n\n    vm.navItems = [{\n      id: 1,\n      title: 'Collections',\n      icon: 'ti-layers-alt',\n      link: 'mainApp.collections'\n    }, {\n      id: 2,\n      title: 'Test',\n      icon: 'ti-check-box',\n      link: 'mainApp.test-words'\n    }, {\n      id: 3,\n      title: 'Log Out',\n      icon: 'ti-arrow-left',\n      link: 'mainApp.logout'\n    }];\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:SidebarCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('SidebarCtrl', SidebarCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var ReviewWordsCtrl = function ReviewWordsCtrl() {\n    _classCallCheck(this, ReviewWordsCtrl);\n\n    var vm = this;\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ReviewWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('ReviewWordsCtrl', ReviewWordsCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('mainApp').config(config);\n\n  function config($stateProvider) {\n    $stateProvider.state('mainApp', {\n      abstract: true,\n      url: '/main-app',\n      views: {\n        '': {\n          templateUrl: 'main-app/main-app.tpl.html'\n        },\n        'sidebar@mainApp': {\n          templateUrl: 'main-app/sidebar.tpl.html',\n          controller: 'SidebarCtrl',\n          controllerAs: 'sidebar'\n        }\n      },\n      resolve: {\n        user: function user(AuthService) {\n          return AuthService.checkLoggedIn();\n        }\n      }\n    }).state('mainApp.collections', {\n      url: '/collections',\n      templateUrl: 'main-app/collections.tpl.html',\n      controller: 'CollectionsCtrl',\n      controllerAs: 'collections'\n    }).state('mainApp.add-words', {\n      url: '/collections/:collectionId/add-words',\n      templateUrl: 'main-app/add-words.tpl.html',\n      controller: 'AddWordsCtrl',\n      controllerAs: 'addWords'\n    }).state('mainApp.review-words', {\n      url: '/collections/:collectionId/review-words',\n      templateUrl: 'main-app/review-words.tpl.html',\n      controller: 'ReviewWordsCtrl',\n      controllerAs: 'reviewWords'\n    }).state('mainApp.list-words', {\n      url: '/collections/:collectionId/list-words',\n      templateUrl: 'main-app/list-words.tpl.html',\n      controller: 'ListWordsCtrl',\n      controllerAs: 'listWords',\n      params: { collectionTitle: null }\n    }).state('mainApp.test-words', {\n      url: '/test-words',\n      templateUrl: 'main-app/test-words.tpl.html',\n      controller: 'TestWordsCtrl',\n      controllerAs: 'testWords'\n    }).state('mainApp.logout', {\n      url: '/logout',\n      templateUrl: 'main-app/logout.tpl.html',\n      controller: 'LogoutCtrl',\n      controllerAs: 'logout'\n    });\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var LogoutCtrl = function LogoutCtrl(AuthService, $window) {\n    _classCallCheck(this, LogoutCtrl);\n\n    var vm = this;\n\n    vm.logout = function () {\n      AuthService.logout().then(function () {\n        console.log('User logged out successfully');\n        $window.location = '/#/home';\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n      });\n    };\n\n    vm.goBack = function () {\n      $window.history.go(-1);\n    };\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:LogoutCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('LogoutCtrl', LogoutCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var ListWordsCtrl = function ListWordsCtrl($stateParams, WordsService) {\n    _classCallCheck(this, ListWordsCtrl);\n\n    var vm = this;\n\n    // config\n    vm.collectionTitle = $stateParams.collectionTitle;\n    var collectionId = $stateParams.collectionId;\n\n    // main\n    WordsService.getAll(collectionId).then(function (words) {\n      console.log(angular.fromJson(words).data);\n      vm.words = angular.fromJson(words).data;\n    })['catch'](function (err) {\n      console.log('Something went wrong: ', err);\n    });\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ListWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('ListWordsCtrl', ListWordsCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:CollectionsService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').factory('CollectionsService', CollectionsService);\n\n  function CollectionsService($http) {\n\n    var CollectionsServiceBase = {};\n\n    CollectionsServiceBase.getAll = function (userId) {\n      return $http.get('/api/collections/' + userId);\n    };\n\n    CollectionsServiceBase.create = function (collection) {\n      return $http.post('/api/collections', collection);\n    };\n\n    CollectionsServiceBase.get = function (collectionId) {\n      return $http.get('/api/collections/' + collectionId);\n    };\n\n    CollectionsServiceBase.update = function (collectionId, newCollection) {\n      return $http.put('/api/collections/' + collectionId, newCollection);\n    };\n\n    CollectionsServiceBase['delete'] = function (collectionId) {\n      return $http['delete']('/api/collections/' + collectionId);\n    };\n\n    return CollectionsServiceBase;\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var CollectionsCtrl = function CollectionsCtrl(CollectionsService, $timeout, user) {\n    _classCallCheck(this, CollectionsCtrl);\n\n    var vm = this;\n\n    // setup\n    vm.formData = {};\n    vm.placeholder = {\n      collectionTitle: 'Enter Collection name here'\n    };\n    vm.btnState = {\n      loading: false,\n      success: false\n    };\n    vm.user = user;\n\n    // init\n    getAllCollections();\n\n    // main\n    vm.createCollection = function (isValid, collection) {\n      if (!isValid) {\n        return;\n      }\n\n      vm.btnState.loading = true;\n\n      CollectionsService.create(collection).then(function (dbRes) {\n        vm.btnState.success = true;\n        getAllCollections();\n\n        $timeout(function () {\n          vm.btnState.success = false;\n        }, 1500);\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n      })['finally'](function () {\n        vm.btnState.loading = false;\n      });\n    };\n\n    // helper functions\n    function getAllCollections() {\n      CollectionsService.getAll(user.id).then(function (res) {\n        vm.collectionList = angular.fromJson(res).data;\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n      });\n    }\n\n    function resetForm() {\n      vm.addCollectionForm.collectionTitle.$touched = false;\n      vm.addCollectionForm.$submitted = false;\n      vm.formData = {};\n    }\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:CollectionsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('CollectionsCtrl', CollectionsCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var AddWordsCtrl = function AddWordsCtrl(ConfigService, DictionaryService, WordsService, $stateParams, $timeout, $moment) {\n    _classCallCheck(this, AddWordsCtrl);\n\n    var vm = this;\n\n    // config\n    vm.formData = {};\n    vm.placeholder = {\n      word: 'i.e. audacious',\n      definition: 'i.e. Fearlessly, often recklessly daring; bold. See Synonyms at adventurous, brave.'\n    };\n    vm.btnState = {\n      loading: false,\n      success: false\n    };\n    vm.collectionId = $stateParams.collectionId;\n\n    vm.lastReviewed = $moment();\n    vm.nextReview = $moment().add(1, 'minutes');\n    vm.lapsedTime = vm.lastReviewed.diff(vm.nextReview);\n\n    // helper functions\n    vm.getDefinition = function (word) {\n      if (word !== undefined) {\n        DictionaryService.getDefinition(ConfigService.mashapeKey, word).then(function (res) {\n          vm.definitions = res.data.definitions;\n        });\n      }\n    };\n\n    vm.addWord = function (isValid, word) {\n      if (!isValid) {\n        return;\n      }\n\n      WordsService.create(word).then(function (dbRes) {\n        vm.btnState.success = true;\n        $timeout(function () {\n          vm.btnState.success = false;\n        }, 1500);\n      })['catch'](function (err) {\n        console.log('Something went wrong: ', err);\n      })['finally'](function () {\n        vm.btnState.loading = false;\n      });\n    };\n\n    vm.copyDefinition = function (definition) {\n      vm.formData.definition = definition;\n      vm.definitions = []; // reset definition list\n    };\n\n    vm.resetForm = function () {\n      vm.addWordForm.word.$touched = false;\n      vm.addWordForm.definition.$touched = false;\n      vm.addWordForm.$submitted = false;\n      vm.formData = {};\n    };\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:AddWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('mainApp').controller('AddWordsCtrl', AddWordsCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name home\n   * @description\n   *\n   */\n  angular.module('home', ['ui.router']);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var NavHomeCtrl = function NavHomeCtrl(AuthService, $window) {\n    _classCallCheck(this, NavHomeCtrl);\n\n    var vm = this;\n\n    // config\n    vm.user = false;\n\n    vm.setActive = function (page) {\n      vm.active = page;\n    };\n\n    // init\n    AuthService.isLoggedIn().then(function (user) {\n      if (user.data !== false) {\n        vm.user = true;\n        $window.location = '/#/main-app/collections';\n      }\n    })['catch'](function (err) {\n      console.log('Something went wrong: ', err);\n    });\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:NavHomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('home').controller('NavHomeCtrl', NavHomeCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('home').config(config);\n\n  function config($stateProvider) {\n    $stateProvider.state('root', {\n      abstract: true,\n      views: {\n        '': {\n          templateUrl: 'home/root.tpl.html'\n        },\n        'nav-home@root': {\n          templateUrl: 'home/nav-home.tpl.html',\n          controller: 'NavHomeCtrl',\n          controllerAs: 'navHome'\n        }\n      }\n    }).state('root.home', {\n      url: '/home',\n      templateUrl: 'home/home.tpl.html',\n      controller: 'HomeCtrl',\n      controllerAs: 'home'\n    });\n  }\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var HomeCtrl = function HomeCtrl() {\n    _classCallCheck(this, HomeCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'HomeCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:HomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('home').controller('HomeCtrl', HomeCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name common\n   * @description\n   *\n   */\n  angular.module('common', []);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:spinner\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <example module=\"common\">\r\n       <file name=\"index.html\">\r\n        <spinner></spinner>\r\n       </file>\r\n     </example>\r\n   *\r\n   */\n  angular.module('common').directive('spinner', spinner);\n\n  function spinner() {\n    return {\n      restrict: 'EA',\n      scope: {},\n      templateUrl: 'common/spinner-directive.tpl.html',\n      replace: true,\n      link: function link(scope, element, attrs) {\n        /*jshint unused:false */\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\n        scope.width = attrs.width;\n      }\n    };\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:Sm2Service\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('common').factory('Sm2Service', Sm2Service);\n\n  function Sm2Service() {\n    var Sm2ServiceBase = {};\n\n    // SM2 (Super Memo 2) Algorithm\n\n    // Learning phase: 1min / 10min\n    // Review phase default: 4 days\n    // I(n) = I(n-1) * EF\n\n    // Review response:\n    // Again: reset to learning + -20% to EF\n    // Hard: -15% to EF\n    // Good: do nothing\n    // Easy: +15% to EF\n\n    Sm2ServiceBase.someMethod = function () {\n      return 'Sm2Service';\n    };\n\n    return Sm2ServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:modal\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <modal modal-bg=\"bg-red\" yesCb=\"confirm()\" noCb=\"abort()\">\r\n     </modal>\r\n   *\r\n   */\n  angular.module('common').directive('modal', modal);\n\n  function modal() {\n    return {\n      restrict: 'EA',\n      scope: {\n        yesCb: '&',\n        noCb: '&'\n      },\n      templateUrl: 'common/modal-directive.tpl.html',\n      replace: false,\n      transclude: true,\n      link: function link(scope, element, attrs) {\n        /*jshint unused:false */\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\n        scope.modalBg = attrs.modalBg || '';\n\n        if (scope.yesCb === undefined && scope.noCb === undefined) {}\n      }\n    };\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:DictionaryService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('common').factory('DictionaryService', DictionaryService);\n\n  function DictionaryService($http) {\n\n    var DictionaryServiceBase = {};\n\n    DictionaryServiceBase.getDefinition = function (mashapeKey, word) {\n      return $http.get('https://montanaflynn-dictionary.p.mashape.com/define?word=' + word, {\n        headers: { 'X-Mashape-Key': mashapeKey }\n      });\n    };\n\n    return DictionaryServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:ConfigService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('common').factory('ConfigService', ConfigService);\n\n  function ConfigService() {\n\n    var ConfigServiceBase = {};\n\n    ConfigServiceBase.mashapeKey = 'S4DvXSr43Cmsh5Kww0kOuX9QxNbXp1hjhkYjsn84TFraf8SlG3';\n\n    return ConfigServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /* @ngdoc object\n   * @name auth\n   * @description\n   *\n   */\n  angular.module('auth', ['ui.router']);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var RegisterCtrl = function RegisterCtrl() {\n    _classCallCheck(this, RegisterCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'RegisterCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:RegisterCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('auth').controller('RegisterCtrl', RegisterCtrl);\n})();\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\n(function () {\n  'use strict';\n\n  var LoginCtrl = function LoginCtrl() {\n    _classCallCheck(this, LoginCtrl);\n\n    var vm = this;\n    vm.ctrlName = 'LoginCtrl';\n  };\n\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:LoginCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('auth').controller('LoginCtrl', LoginCtrl);\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  /**\r\n   * @ngdoc service\r\n   * @name auth.factory:AuthService\r\n   *\r\n   * @description\r\n   *\r\n   */\n  angular.module('auth').factory('AuthService', AuthService);\n\n  function AuthService(ConfigService, $http, $q, $window) {\n\n    var AuthServiceBase = {};\n\n    // only check login status\n    // used in nav\n    AuthServiceBase.isLoggedIn = function () {\n      return $http.get('/auth/loggedin');\n    };\n\n    // check login status and redirect if not logged in\n    // used for route resolve for protected paths\n    AuthServiceBase.checkLoggedIn = function () {\n\n      var deferred = $q.defer();\n\n      $http.get('/auth/loggedin').then(function (user) {\n        var user = angular.fromJson(user).data;\n        if (user !== false) {\n          deferred.resolve(user);\n        } else {\n          deferred.reject();\n          $window.location = '/#/login';\n        }\n      })['catch'](function (err) {\n        deferred.reject();\n        $window.location = '/#/';\n        console.log('Something went wrong: ', err);\n      });\n\n      return deferred.promise;\n    };\n\n    AuthServiceBase.logout = function () {\n      return $http.get('/auth/logout');\n    };\n\n    return AuthServiceBase;\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('auth').config(config);\n\n  function config($stateProvider) {\n    $stateProvider.state('root.auth', {\n      abstract: true,\n      views: {\n        '': {\n          templateUrl: 'auth/auth.tpl.html'\n        }\n      }\n    }).state('root.auth.login', {\n      url: '/login',\n      templateUrl: 'auth/login.tpl.html',\n      controller: 'LoginCtrl',\n      controllerAs: 'login'\n    }).state('root.auth.register', {\n      url: '/register',\n      templateUrl: 'auth/register.tpl.html',\n      controller: 'RegisterCtrl',\n      controllerAs: 'register'\n    }).state('root.auth.logout', {\n      url: '/logout',\n      templateUrl: 'auth/logout.tpl.html',\n      controller: 'LogoutCtrl',\n      controllerAs: 'logout'\n    });\n  }\n})();\n'use strict';\n\n(function () {\n  'use strict';\n\n  angular.module('bigvocab').config(config);\n\n  function config($urlRouterProvider) {\n    $urlRouterProvider.otherwise('/home');\n  }\n})();","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name bigvocab\n   * @description\n   *\n   */\n  angular\n    .module('bigvocab', [\n      'ngAria',\n      'ngAnimate',\n      'ngMessages',\n      'ui.router',\n      '720kb.tooltips',\n      'angular-momentjs',\n      'home',\n      'auth',\n      'mainApp',\n      'ramda',\n      'common'\n    ]);\n\n  // ramda module\n  angular.module('ramda', []);\n  angular.module('ramda').factory('R', function ($window) {\n      return $window.R;\n  });\n\n}());\n","<div class=\"container\">\r\n\t<div class=\"clearfix center\">\r\n\r\n\t\t<h1 class=\"mt1 mb3\">Test Time!</h1>\r\n\r\n\t\t<div class=\"mb2 bold\"><span class=\"gray\">Today's Quota:</span> 78 <span class=\"gray\">/ 123 words left</span></div>\r\n\r\n\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"h2 px2 py4 bg-white rounded\">Hello</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"md-col-4 sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"clearfix mxn1\">\r\n\t\t\t\t<div class=\"col col-6 px1\">\r\n\t\t\t\t\t<a class=\"btn mt2 bg-red block white\">Not sure<span class=\"ti-close ml1\"></span></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-6 px1\">\r\n\t\t\t\t\t<a class=\"btn mt2 bg-green block white\">Easy<span class=\"ti-check ml1\"></span></a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</div>\r\n</div>","<!--/////////// DESKTOP ONLY ///////////-->\r\n<div class=\"sm-show\" style=\"margin-right: 63px;\">\r\n\r\n\t<div class=\"bg-navy fixed white z1\" style=\"height: 100vh;\">\r\n\t\t<div class=\"flex flex-column flex-center py3\">\r\n\t\t\t\r\n\t\t\t<a ui-sref=\"mainApp.collections\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></a>\r\n\t\t\t<a ui-sref=\"{{ navItem.link }}\" tooltips title=\"{{ navItem.title }}\" tooltip-placement=\"right\" class=\"btn btn-icon h2 center p2\" ng-repeat=\"navItem in sidebar.navItems | orderBy:'id'\" tabindex=\"-1\">\r\n\t\t\t\t<span class=\"{{ navItem.icon }}\"></span>\r\n\t\t\t</a>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>\r\n<!--/////////// end: DESKTOP ONLY ///////////-->\r\n\r\n<!--/////////// MOBILE ONLY ///////////-->\r\n<div class=\"sm-hide\">\r\n\r\n\t<!-- toggle button -->\r\n\t<div class=\"fixed z2\">\r\n\t\t<a ng-click=\"sidebar.toggleSidebar()\" class=\"btn btn-icon p3 h3\" ng-class=\"{'black': sidebar.toggle === false, 'white': sidebar.toggle === true}\"><span class=\"ti-menu\"></span></a>\r\n\t</div>\r\n\t<!-- end: toggle button -->\r\n\r\n\t<!-- menu items -->\r\n\t<div class=\"bg-navy fixed white z1 translateX-n-100 transition-all-300\" ng-class=\"{'translateX-n-100': sidebar.toggle === false, 'translateX-0': sidebar.toggle === true }\" style=\"height: 100vh;\">\r\n\t\t<div class=\"flex flex-column py2 mt4\">\r\n\t\t\t\r\n\t\t\t<div style=\"margin-left:20px\"><img class=\"mb2\" src=\"../images/logo/bigvocab-logo-color.svg\" width=\"56px\"></div>\r\n\t\t\t<a ui-sref=\"{{ navItem.link }}\" class=\"btn btn-icon py2 px3 flex flex-center\" ng-repeat=\"navItem in sidebar.navItems | orderBy:'id'\" tabindex=\"-1\">\r\n\t\t\t\t<div class=\"{{ navItem.icon }} h3 mr2\"></div>\r\n\t\t\t\t<div class=\"h5\">{{ navItem.title }}</div>\r\n\t\t\t</a>\r\n\r\n\t\t</div>\r\n\t</div>\r\n\t<!-- end: menu items -->\r\n\r\n</div>\r\n<!--/////////// end: MOBILE ONLY ///////////-->\r\n","<div class=\"container\">\r\n\t<div class=\"clearfix center\">\r\n\r\n\t\t<h1 class=\"mt1 mb3\">Study Time!</h1>\r\n\r\n\t\t<div class=\"mb2 bold\"><span class=\"gray\">Today's Quota:</span> 78 <span class=\"gray\">/ 123 words left</span></div>\r\n\r\n\t\t<div class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"px2 py3 bg-white rounded\" style=\"min-height: 120px\">\r\n\t\t\t\t<div class=\"h2 mb1\">Hello</div>\r\n\t\t\t\t<div class=\"h4\">MeaningMeaningMeaningMeaningMeaning MeaningMeaningMeaning MeaningMeaning </div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t<div class=\"clearfix mxn1\">\r\n\t\t\t\t<div class=\"col col-3 px1 red\">\r\n\t\t\t\t\t<a class=\"btn btn-red mt2 block white bold\">Again</span></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-3 px1 green\">\r\n\t\t\t\t\t<a class=\"btn btn-yellow-green mt2 block white bold\">Hard</span></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-3 px1 green\">\r\n\t\t\t\t\t<a class=\"btn btn-green mt2 block white bold\">Good</span></a>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div class=\"col col-3 px1 green\">\r\n\t\t\t\t\t<a class=\"btn btn-green mt2 block white bold\">Easy</a>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t</div>\r\n</div>","<div class=\"flex\">\n\t<div ui-view=\"sidebar\"></div>\n\t<div ui-view class=\"flex-auto bg-darken-1 py4\" style=\"min-height: 100vh\"></div>\n</div>\n","<div class=\"container\">\r\n\t<div class=\"clearfix\">\r\n\r\n\t\t<div class=\"sm-col-10 md-col-6 mx-auto center px2\">\r\n\t\r\n\t\t\t<h1 class=\"mt1 mb2\">Log Out</h1>\r\n\r\n\t\t\t<div class=\"mb3 h4\">Are you sure you want to sign out from Big Vocab?</div>\r\n\r\n\t\t\t<button class=\"btn btn-blue-outline\" ng-click=\"logout.logout()\">Yes, log me out</button>&nbsp;&nbsp;\r\n\t\t\t<button class=\"btn btn-primary\" ng-click=\"logout.goBack()\">No, send me back</button>\r\n\r\n\t\t</div>\r\n\r\n\t</div>\r\n</div>","<div class=\"container\">\r\n\t<div class=\"clearfix\">\r\n\r\n\t\t<h1 class=\"mt1 mb3 center\">List of All Words in <span class=\"italic\">{{ listWords.collectionTitle }}</span></h1>\r\n\r\n\t\t<!-- search words form -->\r\n\t\t<div class=\"sm-col-6 mx-auto px2\">\r\n\t\t\t\r\n\t\t\t<form name=\"listWordsForm\" class=\"center\">\r\n\t\t\t\t<input name=\"searchWords\" type=\"text\" ng-model=\"listWords.searchWords\" class=\"field col-12 mb3\" placeholder=\"Search any word or definition\">\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t\t<!-- end: search words form -->\r\n\r\n\t\t<!-- list of words -->\r\n\t\t<div class=\"sm-col-10 mx-auto px2\">\r\n\t\t\t\r\n\t\t\t<div ng-repeat=\"word in listWords.words | filter: listWords.searchWords\" class=\"clearfix mb2\">\r\n\t\t\t\t<div class=\"sm-col sm-col-3\">{{ word.word }}</div>\r\n\t\t\t\t<div class=\"sm-col sm-col-9 gray\">{{ word.definition }}</div>\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t</div>\r\n\t\t<!-- end: list of words -->\r\n\r\n\t</div>\r\n</div>","<div class=\"clearfix\">\r\n\r\n\t<h1 class=\"mt1 center\">My Collections</h1>\r\n\r\n\t<div class=\"md-col-10 lg-col-8 mx-auto px2 mt3\">\r\n\r\n\t\t<!-- collection list -->\r\n\t\t<div class=\"clearfix bg-white rounded p1 mb2 ng-animation-fadeInUp\" ng-repeat=\"collection in collections.collectionList | orderBy: 'id'\">\r\n\r\n\t\t\t<div class=\"sm-col sm-col-7\">\r\n\t\t\t\t<div class=\"btn btn-md bold m1\" style=\"cursor: text\">{{ collection.title }} <span class=\"gray\">({{ collection.wordCount }} words)</span></div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<div class=\"sm-col sm-col-5 flex flex-wrap\">\r\n\t\t\t\t<a ui-sref=\"mainApp.review-words({ collectionId: collection.id })\" class=\"btn btn-md btn-primary flex-auto center m1 h5\">Study<span class=\"ti-arrow-right ml1\"></span></a>\r\n\t\t\t\t<a ui-sref=\"mainApp.add-words({ collectionId: collection.id })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"Add Words\" tooltip-placement=\"top\"><span class=\"ti-plus\"></span></a>\r\n\t\t\t\t<a ui-sref=\"mainApp.list-words({ collectionId: collection.id, collectionTitle: collection.title })\" class=\"btn btn-md btn-blue-outline center dark-gray m1 h5\" tooltips title=\"View All Words\" tooltip-placement=\"top\"><span class=\"ti-folder\"></span></a>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t<!-- end: collection list -->\r\n\r\n\t\t<!-- add collection -->\r\n\t\t<div class=\"clearfix bg-light-green px2 py2 mt3 rounded\">\r\n\r\n\t\t\t<div class=\"center\">\r\n\t\t\t\t<div class=\"caps bold m1\">Add Collection</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<form name=\"collections.addCollectionForm\" \r\n\t\t\t\t\t\tng-submit=\"collections.createCollection(collections.addCollectionForm.$valid, { \r\n\t\t\t\t\t\t\tuserId: collections.user.id, \r\n\t\t\t\t\t\t\twordCount: 0, \r\n\t\t\t\t\t\t\ttitle: collections.formData.collectionTitle \r\n\t\t\t\t\t\t})\"\r\n\t\t\t\t\t\tnovalidate>\r\n\r\n\t\t\t\t<div class=\"sm-col sm-col-8 p1\">\r\n\t\t\t\t\t<input name=\"collectionTitle\" type=\"text\" ng-model=\"collections.formData.collectionTitle\" class=\"field col-12\" placeholder=\"{{ collections.placeholder.collectionTitle }}\" required>\r\n\r\n\t\t\t\t\t<!-- error handling -->\r\n\t\t\t\t\t<div ng-messages=\"collections.addCollectionForm.collectionTitle.$error\" \r\n\t\t\t\t\t\t\t ng-if=\"collections.addCollectionForm.$submitted && collections.addCollectionForm.collectionTitle.$touched\" \r\n\t\t\t\t\t\t\t class=\"red bold h6 mt1\">\r\n\t\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<!-- end: error handling -->\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<!-- submit button -->\r\n\t\t\t\t<div class=\"sm-col sm-col-4 p1\">\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-form btn-green col-12\" ng-disabled=\"collections.btnState.success || collections.btnState.loading\">\r\n\t\t\t\t\t\t<span ng-if=\"!collections.btnState.loading && !collections.btnState.success\">Add Collection</span>\r\n\t\t\t\t\t\t<span ng-if=\"collections.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\r\n\t\t\t\t\t\t<span ng-if=\"collections.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: submit button -->\r\n\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t\t<!-- end: add collection -->\r\n\r\n\t</div>\r\n\r\n</div>\r\n","<div class=\"container\">\r\n\t<div class=\"clearfix\">\r\n\r\n\t\t<h1 class=\"mt1 mb3 center\">Add New Words</h1>\r\n\r\n\t\t<!-- add words form -->\r\n\t\t<div class=\"md-col md-col-6 px2\">\r\n\r\n\t\t\t<form name=\"addWords.addWordForm\" \r\n\t\t\t\t\t\tng-submit=\"addWords.addWord(addWords.addWordForm.$valid, {\r\n\t\t\t\t\t\t\tword: addWords.formData.word,\r\n\t\t\t\t\t\t\tdefinition: addWords.formData.definition,\r\n\t\t\t\t\t\t\tcollectionId: addWords.collectionId,\r\n\t\t\t\t\t\t\tlastReviewed: addWords.lastReviewed,\r\n\t\t\t\t\t\t\tnextReview: addWords.nextReview,\r\n\t\t\t\t\t\t\tphase: 'learning',\r\n\t\t\t\t\t\t\treviewRes: {\r\n\t\t\t\t\t\t\t\tagain: 0,\r\n\t\t\t\t\t\t\t\thard: 0,\r\n\t\t\t\t\t\t\t\tgood: 0,\r\n\t\t\t\t\t\t\t\teasy: 0\r\n\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\teaseFactor: 2.5,\r\n\t\t\t\t\t\t\tlapsedTime: addWords.lapsedTime\r\n\t\t\t\t\t\t}); addWords.resetForm()\"\r\n\t\t\t\t\t\tnovalidate>\r\n\r\n\t\t\t\t<div class=\"mb1 bold\">WORD</div>\r\n\t\t\t\t<input name=\"word\" type=\"text\" ng-model=\"addWords.formData.word\" ng-blur=\"addWords.getDefinition(addWords.formData.word)\" class=\"field col-12\" placeholder=\"{{ addWords.placeholder.word }}\" autofocus required>\r\n\r\n\t\t\t\t<!-- error handling -->\r\n\t\t\t\t<div ng-messages=\"addWords.addWordForm.word.$error\" \r\n\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.word.$touched\" \r\n\t\t\t\t\t\t class=\"red bold h6 mt1\">\r\n\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: error handling -->\r\n\r\n\t\t\t\t<div class=\"mb1 mt2 bold\">MEANING</div>\r\n\t\t\t\t<textarea name=\"definition\" ng-model=\"addWords.formData.definition\" class=\"field col-12\" style=\"height: 160px;\" placeholder=\"{{ addWords.placeholder.definition }}\" required></textarea>\r\n\r\n\t\t\t\t<!-- error handling -->\r\n\t\t\t\t<div ng-messages=\"addWords.addWordForm.definition.$error\" \r\n\t\t\t\t\t\t ng-if=\"addWords.addWordForm.$submitted && addWords.addWordForm.definition.$touched\" \r\n\t\t\t\t\t\t class=\"red bold h6\">\r\n\t\t\t\t\t<div ng-message=\"required\"><span class=\"ti-alert mr1\"></span>This field is required</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<!-- end: error handling -->\r\n\r\n\t\t\t\t<div class=\"flex flex-justify\">\r\n\t\t\t\t\t<button ng-click=\"addWords.resetForm()\" class=\"btn btn-outline mt2 mb2\">Reset Form</button>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<!-- submit button -->\r\n\t\t\t\t\t<button type=\"submit\" class=\"btn btn-primary mt2 mb2\" ng-disabled=\"addWords.btnState.success || addWords.btnState.loading\">\r\n\t\t\t\t\t\t<span ng-if=\"!addWords.btnState.loading && !addWords.btnState.success\">Add Word<span class=\"ti-plus ml1\"></span></span>\r\n\t\t\t\t\t\t<span ng-if=\"addWords.btnState.loading\"><spinner width=\"16px\"></spinner>Please wait...</span>\r\n\t\t\t\t\t\t<span ng-if=\"addWords.btnState.success\"><span class=\"ti-check mr1\"></span>Success!</span>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t\t<!-- end: submit button -->\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</form>\r\n\r\n\t\t</div>\r\n\t\t<!-- end: add words form -->\r\n\r\n\t\t<!-- definitions from dictionary API -->\r\n\t\t<div class=\"md-col md-col-6 px2\">\r\n\r\n\t\t\t<div class=\"bold gray mb2\">Word definitions from <span class=\"italic\">The American Heritage® Dictionary of the English Language, 4th Edition</span></div>\r\n\r\n\t\t\t<div class=\"bg-light-green rounded p2 mb2 near-black ng-animation-fadeInUp\" ng-repeat=\"definition in addWords.definitions\">\r\n\t\t\t\t<div class=\"flex flex-center\">\r\n\t\t\t\t\t<div class=\"flex-none\" style=\"width: 52px\">\r\n\t\t\t\t\t\t<a ng-click=\"addWords.copyDefinition(definition.text)\" class=\"btn btn-sm btn-green-outline\" tabindex=\"-1\"><span class=\"ti-check\"></span></a>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div class=\"h5\">{{ definition.text }}</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t</div>\r\n\t\t<!-- definitions from dictionary API -->\r\n\r\n\t</div>\r\n</div>\r\n","<div ui-view=\"nav-home\"></div>\r\n<div ui-view></div>","<div class=\"fixed white border-bottom border-lighten-2\" style=\"width: 100%\">\r\n\t<div class=\"container\">\r\n\t\t<div class=\"flex flex-center\">\r\n\t\t\t<a class=\"btn btn-sm\" ui-sref=\"root.home\">\r\n\t\t\t\t<img src=\"../images/logo/bigvocab-logo-white.svg\" width=\"50px\" />\r\n\t\t\t</a>\r\n\r\n\t\t\t<div class=\"flex-auto\"></div>\r\n\r\n\t\t\t<div>\r\n\r\n\t\t\t\t<!-- nav items -->\r\n\t\t\t\t<a ui-sref=\"root.home\" ng-click=\"navHome.setActive('home')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{'bold muted-0': navHome.active === 'home'}\">Home</a>\r\n\t\t\t\t<a ui-sref=\"root.features\" ng-click=\"navHome.setActive('features')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{'bold muted-0': navHome.active === 'features'}\">How it works</a>\r\n\t\t\t\t<a ui-sref=\"root.about\" ng-click=\"navHome.setActive('about')\" class=\"btn btn-narrow btn-text py2 h6\" ng-class=\"{'bold muted-0': navHome.active === 'about'}\">About</a>\r\n\t\t\t\t<!-- end: nav items -->\r\n\r\n\t\t\t\t<!-- login button -->\r\n\t\t\t\t<a href=\"/auth/google\" ng-if=\"!navHome.user\" class=\"btn btn-outline btn-sm ml2 py2 h6\">Login&nbsp;&rarr;</a>\r\n\t\t\t\t<!-- end: login button -->\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n</div>","<div class=\"bg-cover bg-gradient-home\">\r\n\r\n\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\r\n\t\t<div class=\"container flex-auto\">\r\n\t\t\t<div class=\"clearfix\">\r\n\r\n\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\r\n\t\t\t\t\t<div class=\"h1 light\">Big Vocab</div>\r\n\t\t\t\t\t<p>Big Vocab uses a method called Spaced Repetition to improve word recall. Think of it as a virtual flash card that's optimized to help you remember more words.</p>\r\n\t\t\t\t\t<a ui-sref=\"root.auth.register\" class=\"btn btn-red\">Sign Up</a>&nbsp;&nbsp;\r\n\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline\">Login</a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>","<img src=\"../images/spinner/oval-sm.svg\" class=\"mr1\" width=\"{{ width }}\">","<!-- overlay -->\n<div class=\"fixed z2 top-0 right-0 bottom-0 left-0 bg-darken-1\">\n</div>\n<!-- end: overlay -->\n\n<div class=\"relative z3 flex flex-center\">\n\t<div class=\"sm-col-10 md-col-6 mx-auto {{ modalBg }}\">\n\t\t\n\t\t<!-- close button -->\n\t\t<div>\n\t\t\t<span class=\"ti-close h4 right white mb2\"></span>\t\n\t\t</div>\n\t\t<!-- end: close button -->\n\n\t\t<!-- content -->\n\t\t<div ng-transclude></div>\n\t\t<!-- end: content -->\n\n\t</div>\n</div>","<div class=\"bg-cover bg-gradient-navy\">\r\n\r\n\t<div class=\"flex flex-center\" style=\"min-height: 100vh\">\r\n\t\t<div class=\"container-sm flex-auto\">\r\n\t\t\t<div class=\"clearfix\">\r\n\r\n\t\t\t\t<div class=\"sm-col sm-col-8 px2 white\">\r\n\t\t\t\t\t<div class=\"h2 light mb2\">Sign Up</div>\r\n\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-primary\">Sign up with Your Google Account</a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div class=\"sm-col sm-col-4 px3 white border-left border-lighten-3 py2\">\r\n\t\t\t\t\t<p>Already have an account?</p>\r\n\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-outline\">Login with Google</a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>","<div class=\"bg-cover bg-gradient-navy\">\r\n\r\n\t<div class=\"flex flex-center\" style=\"min-height: 100vh;\">\r\n\t\t<div class=\"container flex-auto\">\r\n\t\t\t<div class=\"clearfix\">\r\n\r\n\t\t\t\t<div class=\"sm-col-6 p2 mx-auto white center\">\r\n\t\t\t\t\t<div class=\"h1 light mb2\">Login to Big Vocab</div>\r\n\t\t\t\t\t<a href=\"/auth/google\" class=\"btn btn-red\">Login with Google</a>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n\r\n</div>","<div ui-view=\"root.nav-home\"></div>\r\n<div ui-view></div>","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name mainApp\n   * @description\n   *\n   */\n  angular\n    .module('mainApp', [\n      'ui.router'\n    ]);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:WordsService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .factory('WordsService', WordsService);\r\n\r\n  function WordsService($http) {\r\n\r\n    let WordsServiceBase = {};\r\n\r\n    WordsServiceBase.getAll = collectionId => {\r\n      return $http.get('/api/words/' + collectionId);\r\n    };\r\n\r\n    WordsServiceBase.create = word => {\r\n      return $http.post('/api/words', word);\r\n    };\r\n\r\n    WordsServiceBase.get = wordId => {\r\n      return $http.get('/api/words/' + wordId);\r\n    };\r\n\r\n    WordsServiceBase.update = (wordId, word) => {\r\n      return $http.put('/api/words/' + wordId, word);\r\n    };\r\n\r\n    WordsServiceBase.delete = wordId => {\r\n      return $http.delete('/api/words/' + wordId);\r\n    };\r\n\r\n    return WordsServiceBase;\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class TestWordsCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'TestWordsCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:TestWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('TestWordsCtrl', TestWordsCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class SidebarCtrl {\r\n    constructor() {\r\n\r\n      let vm = this;\r\n\r\n      vm.toggle = false;\r\n      vm.toggleSidebar = () => {\r\n        vm.toggle = !vm.toggle;\r\n      };\r\n\r\n      vm.navItems = [\r\n        {\r\n          id: 1,\r\n          title: 'Collections',\r\n          icon: 'ti-layers-alt',\r\n          link: 'mainApp.collections'\r\n        },\r\n        {\r\n          id: 2,\r\n          title: 'Test',\r\n          icon: 'ti-check-box',\r\n          link: 'mainApp.test-words'\r\n        },\r\n        {\r\n          id: 3,\r\n          title: 'Log Out',\r\n          icon: 'ti-arrow-left',\r\n          link: 'mainApp.logout'\r\n        }\r\n      ];\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:SidebarCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('SidebarCtrl', SidebarCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class ReviewWordsCtrl {\r\n    constructor() {\r\n\r\n      let vm = this;\r\n      \r\n      \r\n      \r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ReviewWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('ReviewWordsCtrl', ReviewWordsCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  angular\n    .module('mainApp')\n    .config(config);\n\n  function config($stateProvider) {\n    $stateProvider\n      .state('mainApp', {\n        abstract: true,\n        url: '/main-app',\n        views: {\n          '': {\n            templateUrl: 'main-app/main-app.tpl.html',\n          },\n          'sidebar@mainApp': {\n            templateUrl: 'main-app/sidebar.tpl.html',\n            controller: 'SidebarCtrl',\n            controllerAs: 'sidebar'\n          }\n        },\n        resolve: {\n          user: AuthService => {\n            return AuthService.checkLoggedIn();\n          }\n        }\n      })\n      .state('mainApp.collections', {\n        url: '/collections',\n        templateUrl: 'main-app/collections.tpl.html',\n        controller: 'CollectionsCtrl',\n        controllerAs: 'collections'\n      })\n      .state('mainApp.add-words', {\n        url: '/collections/:collectionId/add-words',\n        templateUrl: 'main-app/add-words.tpl.html',\n        controller: 'AddWordsCtrl',\n        controllerAs: 'addWords'\n      })\n      .state('mainApp.review-words', {\n        url: '/collections/:collectionId/review-words',\n        templateUrl: 'main-app/review-words.tpl.html',\n        controller: 'ReviewWordsCtrl',\n        controllerAs: 'reviewWords'\n      })\n      .state('mainApp.list-words', {\n        url: '/collections/:collectionId/list-words',\n        templateUrl: 'main-app/list-words.tpl.html',\n        controller: 'ListWordsCtrl',\n        controllerAs: 'listWords',\n        params: { collectionTitle: null }\n      })\n      .state('mainApp.test-words', {\n        url: '/test-words',\n        templateUrl: 'main-app/test-words.tpl.html',\n        controller: 'TestWordsCtrl',\n        controllerAs: 'testWords'\n      })\n      .state('mainApp.logout', {\n        url: '/logout',\n        templateUrl: 'main-app/logout.tpl.html',\n        controller: 'LogoutCtrl',\n        controllerAs: 'logout'\n      });\n  }\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class LogoutCtrl {\r\n    constructor(AuthService, $window) {\r\n\r\n      let vm = this;\r\n      \r\n      vm.logout = () => {\r\n        AuthService.logout()\r\n          .then(() => {\r\n            console.log('User logged out successfully');\r\n            $window.location = '/#/home';\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      };\r\n\r\n      vm.goBack = () => {\r\n        $window.history.go(-1);\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:LogoutCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('LogoutCtrl', LogoutCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class ListWordsCtrl {\r\n    constructor($stateParams, WordsService) {\r\n\r\n      let vm = this;\r\n\r\n      // config\r\n      vm.collectionTitle = $stateParams.collectionTitle;\r\n      let collectionId = $stateParams.collectionId;\r\n\r\n      // main\r\n      WordsService.getAll(collectionId)\r\n        .then(words => {\r\n          console.log(angular.fromJson(words).data);\r\n          vm.words = angular.fromJson(words).data;\r\n        })\r\n        .catch(err => {\r\n          console.log('Something went wrong: ', err);\r\n        });\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:ListWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('ListWordsCtrl', ListWordsCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name mainApp.factory:CollectionsService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .factory('CollectionsService', CollectionsService);\r\n\r\n  function CollectionsService($http) {\r\n\r\n    let CollectionsServiceBase = {};\r\n\r\n    CollectionsServiceBase.getAll = userId => {\r\n      return $http.get('/api/collections/' + userId);\r\n    };\r\n\r\n    CollectionsServiceBase.create = collection => {\r\n      return $http.post('/api/collections', collection);\r\n    };\r\n\r\n    CollectionsServiceBase.get = collectionId => {\r\n      return $http.get('/api/collections/' + collectionId);\r\n    };\r\n\r\n    CollectionsServiceBase.update = (collectionId, newCollection) => {\r\n      return $http.put('/api/collections/' + collectionId, newCollection);\r\n    };\r\n\r\n    CollectionsServiceBase.delete = collectionId => {\r\n      return $http.delete('/api/collections/' + collectionId);\r\n    };\r\n\r\n    return CollectionsServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class CollectionsCtrl {\r\n    constructor(CollectionsService, $timeout, user) {\r\n\r\n      let vm = this;\r\n\r\n      // setup\r\n      vm.formData = {};\r\n      vm.placeholder = {\r\n        collectionTitle: 'Enter Collection name here'\r\n      };\r\n      vm.btnState = {\r\n        loading: false,\r\n        success: false\r\n      };\r\n      vm.user = user;\r\n\r\n      // init\r\n      getAllCollections();\r\n\r\n      // main\r\n      vm.createCollection = (isValid, collection) => {\r\n        if (!isValid) { return; }\r\n\r\n        vm.btnState.loading = true;\r\n\r\n        CollectionsService.create(collection)\r\n          .then(dbRes => {\r\n            vm.btnState.success = true;\r\n            getAllCollections();\r\n\r\n            $timeout(() => {\r\n              vm.btnState.success = false;\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          })\r\n          .finally(() => {\r\n            vm.btnState.loading = false;\r\n          });\r\n      };\r\n\r\n      // helper functions\r\n      function getAllCollections () {\r\n        CollectionsService.getAll(user.id)\r\n          .then(res => {\r\n            vm.collectionList = angular.fromJson(res).data;\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      }\r\n\r\n      function resetForm () {\r\n        vm.addCollectionForm.collectionTitle.$touched = false;\r\n        vm.addCollectionForm.$submitted = false;\r\n        vm.formData = {};\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:CollectionsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('CollectionsCtrl', CollectionsCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class AddWordsCtrl {\r\n    constructor(ConfigService, DictionaryService, WordsService, $stateParams, $timeout, $moment) {\r\n\r\n      let vm = this;\r\n\r\n      // config\r\n      vm.formData = {};\r\n      vm.placeholder = {\r\n        word: 'i.e. audacious',\r\n        definition: 'i.e. Fearlessly, often recklessly daring; bold. See Synonyms at adventurous, brave.'\r\n      };\r\n      vm.btnState = {\r\n        loading: false,\r\n        success: false\r\n      };\r\n      vm.collectionId = $stateParams.collectionId;\r\n\r\n      vm.lastReviewed = $moment();\r\n      vm.nextReview = $moment().add(1, 'minutes');\r\n      vm.lapsedTime = vm.lastReviewed.diff(vm.nextReview);\r\n\r\n      // helper functions\r\n      vm.getDefinition = word => {\r\n        if (word !== undefined) {\r\n          DictionaryService.getDefinition(ConfigService.mashapeKey, word)\r\n            .then(res => {\r\n              vm.definitions = res.data.definitions;\r\n            });\r\n        }\r\n      };\r\n\r\n      vm.addWord = (isValid, word) => {\r\n        if (!isValid) { return; }\r\n\r\n        WordsService.create(word)\r\n          .then(dbRes => {\r\n            vm.btnState.success = true;\r\n            $timeout(() => {\r\n              vm.btnState.success = false;\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          })\r\n          .finally(() => {\r\n            vm.btnState.loading = false;\r\n          });\r\n      };\r\n\r\n      vm.copyDefinition = definition => {\r\n        vm.formData.definition = definition;\r\n        vm.definitions = []; // reset definition list\r\n      };\r\n\r\n      vm.resetForm = () => {\r\n        vm.addWordForm.word.$touched = false;\r\n        vm.addWordForm.definition.$touched = false;\r\n        vm.addWordForm.$submitted = false;\r\n        vm.formData = {};\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:AddWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('AddWordsCtrl', AddWordsCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name home\n   * @description\n   *\n   */\n  angular\n    .module('home', [\n      'ui.router'\n    ]);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class NavHomeCtrl {\r\n    constructor(AuthService, $window) {\r\n\r\n      let vm = this;\r\n\r\n      // config\r\n      vm.user = false;\r\n\r\n      vm.setActive = page => {\r\n        vm.active = page;\r\n      };\r\n      \r\n      // init\r\n      AuthService.isLoggedIn()\r\n        .then(user => {\r\n          if (user.data !== false) {\r\n            vm.user = true;\r\n            $window.location = '/#/main-app/collections';\r\n          } \r\n        })\r\n        .catch(err => {\r\n          console.log('Something went wrong: ', err);\r\n        })\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:NavHomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('home')\r\n    .controller('NavHomeCtrl', NavHomeCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  angular\n    .module('home')\n    .config(config);\n\n  function config($stateProvider) {\n    $stateProvider\n      .state('root', {\n        abstract: true,\n        views: {\n          '': {\n            templateUrl: 'home/root.tpl.html',\n          },\n          'nav-home@root': {\n            templateUrl: 'home/nav-home.tpl.html',\n            controller: 'NavHomeCtrl',\n            controllerAs: 'navHome'\n          }\n        }\n      })\n      .state('root.home', {\n        url: '/home',\n        templateUrl: 'home/home.tpl.html',\n        controller: 'HomeCtrl',\n        controllerAs: 'home'\n      });\n  }\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class HomeCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'HomeCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name home.controller:HomeCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('home')\r\n    .controller('HomeCtrl', HomeCtrl);\r\n}());\r\n","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name common\n   * @description\n   *\n   */\n  angular\n    .module('common', []);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:spinner\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <example module=\"common\">\r\n       <file name=\"index.html\">\r\n        <spinner></spinner>\r\n       </file>\r\n     </example>\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .directive('spinner', spinner);\r\n\r\n  function spinner() {\r\n    return {\r\n      restrict: 'EA',\r\n      scope: {},\r\n      templateUrl: 'common/spinner-directive.tpl.html',\r\n      replace: true,\r\n      link(scope, element, attrs) {\r\n        /*jshint unused:false */\r\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\r\n        scope.width = attrs.width;\r\n      }\r\n    };\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:Sm2Service\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .factory('Sm2Service', Sm2Service);\r\n\r\n  function Sm2Service() {\r\n    let Sm2ServiceBase = {};\r\n\r\n    // SM2 (Super Memo 2) Algorithm\r\n\r\n    // Learning phase: 1min / 10min\r\n    // Review phase default: 4 days\r\n    // I(n) = I(n-1) * EF\r\n\r\n    // Review response:\r\n    // Again: reset to learning + -20% to EF\r\n    // Hard: -15% to EF\r\n    // Good: do nothing\r\n    // Easy: +15% to EF\r\n\r\n    Sm2ServiceBase.someMethod = () => {\r\n      return 'Sm2Service';\r\n    };\r\n\r\n    return Sm2ServiceBase;\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc directive\r\n   * @name common.directive:modal\r\n   * @restrict EA\r\n   * @element\r\n   *\r\n   * @description\r\n   *\r\n   * @example\r\n     <modal modal-bg=\"bg-red\" yesCb=\"confirm()\" noCb=\"abort()\">\r\n     </modal>\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .directive('modal', modal);\r\n\r\n  function modal() {\r\n    return {\r\n      restrict: 'EA',\r\n      scope: {\r\n        yesCb: '&',\r\n        noCb: '&'\r\n      },\r\n      templateUrl: 'common/modal-directive.tpl.html',\r\n      replace: false,\r\n      transclude: true,\r\n      link(scope, element, attrs) {\r\n        /*jshint unused:false */\r\n        /*eslint \"no-unused-vars\": [2, {\"args\": \"none\"}]*/\r\n        scope.modalBg = attrs.modalBg || '';\r\n\r\n        if (scope.yesCb === undefined && scope.noCb === undefined) {\r\n\r\n        }\r\n      }\r\n    };\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:DictionaryService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .factory('DictionaryService', DictionaryService);\r\n\r\n  function DictionaryService($http) {\r\n\r\n    let DictionaryServiceBase = {};\r\n    \r\n    DictionaryServiceBase.getDefinition = (mashapeKey, word) => {\r\n      return $http.get('https://montanaflynn-dictionary.p.mashape.com/define?word=' + word, {\r\n        headers: { 'X-Mashape-Key': mashapeKey }\r\n      });\r\n    };\r\n    \r\n    return DictionaryServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name common.factory:ConfigService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('common')\r\n    .factory('ConfigService', ConfigService);\r\n\r\n  function ConfigService() {\r\n\r\n    let ConfigServiceBase = {};\r\n    \r\n    ConfigServiceBase.mashapeKey = 'S4DvXSr43Cmsh5Kww0kOuX9QxNbXp1hjhkYjsn84TFraf8SlG3';\r\n    \r\n    return ConfigServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\n  'use strict';\n\n  /* @ngdoc object\n   * @name auth\n   * @description\n   *\n   */\n  angular\n    .module('auth', [\n      'ui.router'\n    ]);\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  class RegisterCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'RegisterCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:RegisterCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('auth')\r\n    .controller('RegisterCtrl', RegisterCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  class LoginCtrl {\r\n    constructor() {\r\n      let vm = this;\r\n      vm.ctrlName = 'LoginCtrl';\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name auth.controller:LoginCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('auth')\r\n    .controller('LoginCtrl', LoginCtrl);\r\n}());\r\n","(() => {\r\n  'use strict';\r\n\r\n  /**\r\n   * @ngdoc service\r\n   * @name auth.factory:AuthService\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('auth')\r\n    .factory('AuthService', AuthService);\r\n\r\n  function AuthService(ConfigService, $http, $q, $window) {\r\n\r\n    let AuthServiceBase = {};\r\n\r\n    // only check login status\r\n    // used in nav\r\n    AuthServiceBase.isLoggedIn = () => {\r\n      return $http.get('/auth/loggedin');\r\n    };\r\n\r\n    // check login status and redirect if not logged in\r\n    // used for route resolve for protected paths\r\n    AuthServiceBase.checkLoggedIn = () => {\r\n\r\n      var deferred = $q.defer();\r\n\r\n      $http.get('/auth/loggedin')\r\n        .then(user => {\r\n          var user = angular.fromJson(user).data;\r\n          if (user !== false) {\r\n            deferred.resolve(user);\r\n          } else {\r\n            deferred.reject();\r\n            $window.location = '/#/login';\r\n          }\r\n        })\r\n        .catch(err => {\r\n          deferred.reject();\r\n          $window.location = '/#/';\r\n          console.log('Something went wrong: ', err);\r\n        });\r\n\r\n      return deferred.promise;\r\n      \r\n    };\r\n\r\n    AuthServiceBase.logout = () => {\r\n      return $http.get('/auth/logout');\r\n    };\r\n    \r\n    return AuthServiceBase;\r\n\r\n  }\r\n}());\r\n","(() => {\n  'use strict';\n\n  angular\n    .module('auth')\n    .config(config);\n\n  function config($stateProvider) {\n    $stateProvider\n      .state('root.auth', {\n        abstract: true,\n        views: {\n          '': {\n            templateUrl: 'auth/auth.tpl.html'\n          }\n        }\n      })\n      .state('root.auth.login', {\n        url: '/login',\n        templateUrl: 'auth/login.tpl.html',\n        controller: 'LoginCtrl',\n        controllerAs: 'login'\n      })\n      .state('root.auth.register', {\n        url: '/register',\n        templateUrl: 'auth/register.tpl.html',\n        controller: 'RegisterCtrl',\n        controllerAs: 'register'\n      })\n      .state('root.auth.logout', {\n        url: '/logout',\n        templateUrl: 'auth/logout.tpl.html',\n        controller: 'LogoutCtrl',\n        controllerAs: 'logout'\n      });\n  }\n}());\n","(() => {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('bigvocab')\r\n    .config(config);\r\n\r\n  function config($urlRouterProvider) {\r\n    $urlRouterProvider.otherwise('/home');\r\n  }\r\n}());\r\n"],"sourceRoot":"/source/"}