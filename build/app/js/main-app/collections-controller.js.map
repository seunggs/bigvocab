{"version":3,"sources":["main-app/collections-controller.es6"],"names":[],"mappings":"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","file":"main-app/collections-controller.js","sourcesContent":["(() => {\r\n  'use strict';\r\n\r\n  class CollectionsCtrl {\r\n    constructor(CollectionsService, WordsService, $timeout, user, $q) {\r\n\r\n      let vm = this;\r\n\r\n      // config ///////////////////////////////////////////////////////////////////////////\r\n      \r\n      vm.formData = {};\r\n      vm.placeholder = {\r\n        collectionTitle: 'Enter Collection name here'\r\n      };\r\n      vm.btnState = {\r\n        loading: false,\r\n        success: false\r\n      };\r\n      vm.user = user;\r\n      vm.checks = {};\r\n      vm.showEdit = false;\r\n      vm.notification = {\r\n        success: false,\r\n        error: false\r\n      };\r\n      vm.msg = {\r\n        success: 'Success!',\r\n        error: 'Something went wrong - please try again.',\r\n        mergeError: 'Please select two or more collections.',\r\n        noneSelectedError: 'Please select one or more collections.'\r\n      };\r\n      vm.showModal = false;\r\n\r\n      // init /////////////////////////////////////////////////////////////////////////////\r\n      \r\n      getAllCollections(user);\r\n\r\n      // helper functions //////////////////////////////////////////////////////////////////\r\n      \r\n      function getAllCollections (user) {\r\n        CollectionsService.getAll(user.id)\r\n          .then(res => {\r\n            vm.collectionList = angular.fromJson(res).data;\r\n\r\n            // intiialize checks to all false\r\n            vm.checks = initChecks(vm.collectionList);\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      }\r\n\r\n      function mergeCollections (collectionIds) {\r\n        let mainCollectionId = collectionIds[0];\r\n        let remainingCollectionIds = collectionIds.filter(collectionId => {\r\n          return collectionId !== mainCollectionId;\r\n        });\r\n\r\n        let promises = [];\r\n\r\n        remainingCollectionIds.forEach(collectionId => {\r\n          promises.push(CollectionsService.merge(collectionId, { newCollectionId: mainCollectionId }));\r\n        });\r\n\r\n        return $q.all(promises);\r\n      }\r\n\r\n      function deleteCollections (collectionIds) {\r\n        let promises = [];\r\n\r\n        collectionIds.forEach(collectionId => {\r\n          promises.push(CollectionsService.delete(collectionId));\r\n        });\r\n\r\n        return $q.all(promises);\r\n      }\r\n\r\n      function initChecks(collections) {\r\n        let checks = {};\r\n\r\n        collections.forEach(collection => {\r\n          checks[collection.id] = false;\r\n        });\r\n\r\n        return checks;\r\n      }\r\n\r\n      function resetForm () {\r\n        vm.addCollectionForm.collectionTitle.$touched = false;\r\n        vm.addCollectionForm.$submitted = false;\r\n        vm.formData = {};\r\n      }\r\n\r\n      // main /////////////////////////////////////////////////////////////////////////////\r\n      \r\n      vm.toggleEdit = () => {\r\n        vm.showEdit = !vm.showEdit;\r\n      };\r\n\r\n      vm.toggleSuccessNotification = (successMessage) => {\r\n        vm.notification.success = true;\r\n        vm.notificationSuccessMsg = successMessage;\r\n      };\r\n\r\n      vm.toggleErrorNotification = (errorMessage) => {\r\n        vm.notification.error = true;\r\n        vm.notificationErrorMsg = errorMessage;\r\n      };\r\n\r\n      vm.createCollection = (isValid, collection) => {\r\n        if (!isValid) { return; }\r\n\r\n        vm.btnState.loading = true;\r\n\r\n        CollectionsService.create(collection)\r\n          .then(() => {\r\n            vm.btnState.loading = false;\r\n            vm.btnState.success = true;\r\n            getAllCollections(user);\r\n            resetForm();\r\n\r\n            $timeout(() => {\r\n              vm.btnState.success = false;\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            vm.btnState.loading = false;\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n      };\r\n\r\n      vm.mergeCollections = (collections, checks) => {\r\n\r\n        let mergeList = [];\r\n\r\n        collections.forEach((collection) => {\r\n          if (checks[collection.id] === true) {\r\n            mergeList.push(collection.id);\r\n          }\r\n        });\r\n\r\n        if (mergeList.length >= 2) {\r\n          mergeCollections(mergeList)\r\n            .then(() => {\r\n              vm.toggleSuccessNotification(vm.msg.success);\r\n              getAllCollections(user);\r\n            })\r\n            .catch(err => {\r\n              vm.toggleErrorNotification(vm.msg.error);\r\n              console.log('Something went wrong: ', err);\r\n            });\r\n        } else {\r\n          vm.toggleErrorNotification(vm.msg.mergeError);\r\n        }\r\n\r\n      };\r\n\r\n      vm.deleteCollections = (collections, checks) => {\r\n\r\n        let deleteList = [];\r\n\r\n        collections.forEach((collection) => {\r\n          if (checks[collection.id] === true) {\r\n            deleteList.push(collection.id);\r\n          }\r\n        });\r\n\r\n        if (deleteList.length >= 1) {\r\n          deleteCollections(deleteList)\r\n            .then(() => {\r\n              vm.toggleSuccessNotification(vm.msg.success);\r\n              getAllCollections(user);\r\n            })\r\n            .catch(err => {\r\n              vm.toggleErrorNotification(vm.msg.error);\r\n              console.log('Something went wrong: ', err);\r\n            });\r\n        } else {\r\n          vm.toggleErrorNotification(vm.msg.noneSelectedError);\r\n        }\r\n\r\n      };\r\n\r\n      vm.showConfirmDeleteModal = () => {\r\n        vm.showModal = true;\r\n      };\r\n\r\n      vm.confirmModal = () => {\r\n        vm.deleteCollections(vm.collectionList, vm.checks);\r\n      };\r\n\r\n      vm.closeModal = () => {\r\n        vm.showModal = false;\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:CollectionsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('CollectionsCtrl', CollectionsCtrl);\r\n}());\r\n"],"sourceRoot":"/source/"}