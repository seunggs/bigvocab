{"version":3,"sources":["main-app/add-words-controller.es6"],"names":[],"mappings":"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","file":"main-app/add-words-controller.js","sourcesContent":["(() => {\r\n  'use strict';\r\n\r\n  class AddWordsCtrl {\r\n    constructor(ConfigService, DictionaryService, WordsService, $stateParams, $timeout, $moment) {\r\n\r\n      let vm = this;\r\n\r\n      // config //////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.formData = {};\r\n      vm.placeholder = {\r\n        word: 'i.e. audacious',\r\n        definition: 'i.e. Fearlessly, often recklessly daring; bold. See Synonyms at adventurous, brave.'\r\n      };\r\n      vm.btnState = {\r\n        loading: false,\r\n        success: false\r\n      };\r\n      vm.collectionId = $stateParams.collectionId;\r\n      vm.notification = {\r\n        success: false,\r\n        error: false\r\n      };\r\n      vm.msg = {\r\n        success: 'Word successfully added!',\r\n        error: 'Something went wrong. Please try again.'\r\n      };\r\n      vm.notificationSuccessMsg = vm.msg.success;\r\n      vm.notificationErrorMsg = vm.msg.error;\r\n\r\n      // helper functions //////////////////////////////////////////////////////////////////\r\n\r\n      function addWord (word) {\r\n        vm.btnState.loading = true;\r\n\r\n        vm.definitions = []; // reset definition list\r\n\r\n        return WordsService.create(word);\r\n      }\r\n\r\n      function getPronunciation (forvoKey, word) {\r\n        if (word !== undefined) {\r\n          return DictionaryService.getPronunciation(forvoKey, word);\r\n        }\r\n      }\r\n\r\n      function resetForm () {\r\n        vm.addWordForm.word.$touched = false;\r\n        vm.addWordForm.definition.$touched = false;\r\n        vm.addWordForm.$submitted = false;\r\n        vm.formData = {};\r\n      }\r\n\r\n      // main /////////////////////////////////////////////////////////////////////////////\r\n\r\n      vm.getDefinition = word => {\r\n        if (word !== undefined) {\r\n          DictionaryService.getDefinition(ConfigService.mashapeKey, word)\r\n            .then(res => {\r\n              vm.definitions = res.data.definitions;\r\n            })\r\n            .catch(err => {\r\n              console.log('Something went wrong; ', err);\r\n            });\r\n        }\r\n      };\r\n\r\n      vm.addWord = (isValid, collectionId, formData) => {\r\n        if (!isValid) { return; }\r\n        \r\n        let lastReviewed = $moment();\r\n        let lastReviewedEpochTime = lastReviewed.unix();\r\n        let nextReview = $moment().add(1, 'minutes');\r\n        let nextReviewEpochTime = nextReview.unix();\r\n\r\n        let word = {\r\n          word: formData.word,\r\n          definition: formData.definition,\r\n          collectionId: collectionId,\r\n          lastReviewedEpochTime: lastReviewedEpochTime,\r\n          interval: 1,\r\n          nextReviewEpochTime: nextReviewEpochTime,\r\n          phase: 'learning',\r\n          reviewRes: {\r\n            again: 0,\r\n            hard: 0,\r\n            good: 0,\r\n            easy: 0\r\n          },\r\n          easeFactor: 2.5\r\n        };\r\n\r\n        getPronunciation(ConfigService.forvoKey, formData.word)\r\n          .then(res => {\r\n            let pronunciationData = angular.fromJson(res).data;\r\n            let pronunciationPath = pronunciationData.attributes.total !== 0 ? pronunciationData.items[0].pathmp3 : null;\r\n\r\n            word.pronunciationPath = pronunciationPath;\r\n\r\n            return addWord(word);\r\n          })\r\n          .catch(err => {\r\n            console.log('Something went wrong while trying to get pronuncation from Forvo: ', err);\r\n\r\n            return addWord(word);\r\n          })\r\n          .then(() => {\r\n            vm.btnState.loading = false;\r\n            vm.btnState.success = true;\r\n\r\n            resetForm();\r\n\r\n            vm.notification.success = true;\r\n\r\n            $timeout(() => {\r\n              vm.btnState.success = false;\r\n            }, 1500);\r\n          })\r\n          .catch(err => {\r\n            vm.btnState.loading = false;\r\n\r\n            vm.notification.error = true;\r\n\r\n            console.log('Something went wrong: ', err);\r\n          });\r\n\r\n      };\r\n\r\n      vm.copyDefinition = definition => {\r\n        vm.formData.definition = definition;\r\n      };\r\n\r\n      vm.resetForm = () => {\r\n        resetForm();\r\n      };\r\n\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ngdoc object\r\n   * @name mainApp.controller:AddWordsCtrl\r\n   *\r\n   * @description\r\n   *\r\n   */\r\n  angular\r\n    .module('mainApp')\r\n    .controller('AddWordsCtrl', AddWordsCtrl);\r\n}());\r\n"],"sourceRoot":"/source/"}